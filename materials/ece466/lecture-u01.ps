%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Fri Jan 18 22:52:10 2019
%%DocumentNeededResources: font Symbol
%%+ font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file complex-dfa.eps
%%+ file complex-nfa.eps
%%+ file alternates.eps
%%+ file simple-fa.eps
%%+ file comp-overview.eps
%%+ file toolchain.eps
%%+ procset grops 1.22 2
%%+ font Symbol-Slanted
%%Pages: 19
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
%%BeginResource: font Symbol-Slanted
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Symbol
%%EndComments
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Symbol-Slanted
[.89 0.0 15.5 dup sin exch cos div .89 0.0 0.0]
/Symbol
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 122.742(ECE466:Compilers Unit)69.336 60 R(1/pg 1)
2.25 E(\2512019 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Bold@0 SF(Compilers: An Intr)189.453 120 Q(oduction)-.234 E/F2 13
/Times-Roman@0 SF 5.873(Ac)33.336 156 S 2.623(ompiler is a tool for tra\
nslating one computer programming language to another)-5.873 F(.)-.715 E
.735(Most often, a compiler is thought of as translating a high-le)
33.336 171 R -.195(ve)-.325 G 3.985(ll).195 G .736
(anguage such as C to an)-3.985 F -.195(exe)33.336 186 S 5.17
(cutable lo).195 F(w-le)-.325 E -.195(ve)-.325 G 8.419(ll).195 G 5.169
(anguage \(i.e. machine language\).)-8.419 F(Ho)11.669 E(we)-.325 E
-.195(ve)-.325 G 6.209 -.52(r, s).195 H 5.169(ome compilers).52 F 2.477
(produce a tar)33.336 201 R 2.477(get other than machine language.)-.234
F -.195(Fo)8.978 G 5.728(re).195 G 2.478
(xample, the \214rst C++ compilers)-5.923 F 1.555
(translated to C, which in turn could be compiled by pre-e)33.336 216 R
1.554(xisting C compilers.)-.195 F(Ja)11.304 E 2.204 -.325(va i)-.26 H
(s).325 E 1.604(typically compiled into a machine-independent intermedi\
ate representation called "byte)33.336 231 R(code.")33.336 246 Q 4.163
(Whereas a compiler produces an output which is intended for later e)
33.336 267 R -.195(xe)-.195 G 4.163(cution, an).195 F F1(inter)33.336
282 Q(pr)-.13 E(eter)-.234 E F2 .957(accepts a high-le)4.207 F -.195(ve)
-.325 G 4.207(ll).195 G .958
(anguage as input and then acts immediately to e)-4.207 F -.195(xe)-.195
G(cute).195 E .479(the program.)33.336 297 R -1.196(Aw)10.229 G .479
(k, Perl, Python, UNIX shell script, Ja)1.196 F -.325(va)-.26 G .479
(script and B).325 F .478(ASIC are e)-.455 F(xamples)-.195 E
(of languages which are typically interpreted.)33.336 312 Q 2.405(If we\
 need to de\214ne a distinction between compilers and interpreters, we \
can in this)33.336 333 R -.13(fa)33.336 348 S 1.713
(shion: A compiler is a tool which operates in one time instance, kno)
.13 F 1.713(wn as)-.325 F F1(compile-)4.963 E(time)33.336 363 Q F2 3.462
(,t)C 3.462(ot)-3.462 G .212(ranslate the source code into a tar)-3.462
F .212(get code.)-.234 F .212(This tar)6.712 F .213
(get will then be run at a later)-.234 F .027(time, kno)33.336 378 R
.027(wn as)-.325 F F1(run-time)3.277 E F2 6.527(.I)C 3.277(nap)-6.527 G
.027(ure compiled language, there is no opportunity to modify)-3.277 F
.942(or introduce ne)33.336 393 R 4.192(wc)-.325 G .942
(ode into the running program, because the compiler is not part of the)
-4.192 F 1.783(run-time en)33.336 408 R 5.033(vironment. W)-.52 F 5.033
(ea)-1.04 G 1.783(lso note that the compiler generates its tar)-5.033 F
1.783(get code with a)-.234 F .99(presumption of what the run-time en)
33.336 423 R .99(vironment will look lik)-.52 F .99
(e, and what supporting code)-.13 F 1.673
(\(e.g. shared libraries\) will be present at run-time.)33.336 438 R
1.673(If this presumption is incorrect, e.g.)8.173 F 1.148(you tak)
33.336 453 R 4.398(ec)-.13 G 1.148(ode compiled for a speci\214c tar)
-4.398 F 1.148(get and try to run it on an incompatible tar)-.234 F
(get,)-.234 E(the result is f)33.336 468 Q(ailure to e)-.13 E -.195(xe)
-.195 G(cute or erroneous e).195 E -.195(xe)-.195 G(cution.).195 E 1.441
(In contrast, the interpreter e)33.336 489 R 1.441
(xists in only one time. The source code is e)-.195 F -.195(xe)-.195 G
1.44(cuted as it is).195 F 5.443(seen. Because)33.336 504 R 2.193
(the interpreter engine is part of the e)5.443 F -.195(xe)-.195 G 2.194
(cution en).195 F 2.194(vironment, interpreted)-.52 F .558
(languages almost al)33.336 519 R -.13(wa)-.13 G .558(ys ha).13 F .948
-.195(ve t)-.26 H .558(he ability to modify the running program.).195 F
2.638 -1.04(We c)7.058 H .558(an accept)1.04 F 1.217(input as the progr\
am is running and interpret it, resulting in the input being e)33.336
534 R -.195(xe)-.195 G(cutable.).195 E .419
(This mechanism is often called something lik)33.336 549 R(e)-.13 E/F3
13/Courier@0 SF(eval)3.669 E F2 6.919(.T)C .419
(his same mechanism can also be)-6.919 F 3.25(ac)33.336 564 S
(omputer security risk.)-3.25 E .537(The dif)33.336 585 R .538(ferentia\
tion between compiler and interpreter can be a gray area, and man)-.325
F 3.788(yo)-.195 G 3.788(ft)-3.788 G(he)-3.788 E .945
(same principles and techniques apply to both.)33.336 600 R(Man)7.444 E
4.194(yc)-.195 G .944(learly interpreted languages, such)-4.194 F .781
(as Python, resort to a h)33.336 615 R .781
(ybrid approach in which source code \214les are pre-compiled to an)
-.065 F .315(intermediate bytecode \(e.g.)33.336 630 R F3 .315
(.py -> .pyc)3.565 F F2 3.564(\). This)B .314
(addresses one potential problem with)3.564 F .891
(pure interpreters in that the)33.336 645 R 4.142(yc)-.195 G(an')-4.142
E 4.142(td)-.234 G .892(etect errors until the)-4.142 F 4.142(yr)-.195 G
.892(each that part of the program)-4.142 F .904(containing the error)
33.336 660 R 7.404(.I)-.715 G 4.154(ta)-7.404 G .904(lso impro)-4.154 F
-.195(ve)-.195 G 4.154(st).195 G .903(he latenc)-4.154 F 4.153(yb)-.195
G .903(etween interpreter in)-4.153 F -.26(vo)-.52 G .903
(cation and the).26 F(start of actual e)33.336 675 Q -.195(xe)-.195 G
(cution.).195 E F1(The Compiler T)197.513 705 Q(ool-chain)-1.196 E F2
4.547(Strictly speaking, the compiler is just one component of a system\
 for producing)33.336 741 R 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 2)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF -.195(exe)33.336 120 S 3.294(cutable program \214les.)
.195 F 3.294
(The compiler translates the source language \(e.g. C\) into)9.794 F/F2
13/Courier@0 SF 3.571(assembly language)33.336 135 R F1 6.821(,w)C 3.571
(hich is a linear)-6.821 F 6.821(,t)-.52 G -.195(ex)-6.821 G 3.571
(tual, symbolic encoding of machine).195 F 7.111(language. The)33.336
150 R/F3 13/Times-Bold@0 SF(assembler)7.111 E F1 3.861
(translates the assembly language into machine language.)7.111 F .159
(Compared to a compiler)33.336 165 R 3.409(,a)-.52 G 3.409(na)-3.409 G
.159(ssembler is a f)-3.409 F .159(airly simple piece of code.)-.13 F
.16(It merely needs to)6.66 F 1.455(recognize the symbolic opcodes and \
addressing modes, and generate the correct binary)33.336 180 R
(opcodes and bit \214elds.)33.336 195 Q 1.213(Note, ho)33.336 216 R(we)
-.325 E -.195(ve)-.325 G 2.253 -.52(r, t).195 H 1.214
(hat the output of the assembler is still not an e).52 F -.195(xe)-.195
G 1.214(cutable program.).195 F(The)7.714 E .334(assembler creates a)
33.336 231 R F3 -.234(re)3.584 G .334(locatable object \214le).234 F F1
.333(in which those bytes or bit \214elds in the binary)3.584 F 1.364(m\
achine language which need to refer to speci\214c memory addresses are \
left unde\214ned.)33.336 246 R(The object \214le also contains a)33.336
261 Q F3(symbol table)3.25 E F1
(containing globally visible symbolic names.)3.25 E(The)33.336 282 Q F3
(link)6.245 E(er)-.13 E F1 2.994(pulls together all of the relocatable \
object \214les comprising the program,)6.245 F 4.684(including object \
\214les which are part of the system libraries, resolv)33.336 297 R
4.685(es all symbol)-.195 F 1.102
(references, assigns absolute addresses to all symbols, and pok)33.336
312 R 1.101(es the unde\214ned locations)-.13 F 1.058(with the no)33.336
327 R 1.058(w-de\214ned v)-.325 F 4.308(alues. The)-.325 F 1.058
(result is an absolute, e)4.308 F -.195(xe)-.195 G 1.058
(cutable \214le, which on UNIX).195 F(systems is by def)33.336 342 Q
(ault called)-.13 E F2(a.out)3.25 E F1(.)A .602
(This multi-stage process is normally hidden from the casual user)33.336
363 R 7.102(.W)-.715 G .602(hen one in)-7.102 F -.26(vo)-.52 G -.13(ke)
.26 G 3.852(st).13 G(he)-3.852 E F2(cc)33.336 378 Q F1 .446
(command in UNIX, it tak)3.696 F .447(es care of in)-.13 F -.26(vo)-.52
G .447(king the compiler).26 F 3.697(,a)-.52 G .447(ssembler and link)
-3.697 F(er)-.13 E 6.947(.T)-.715 G(he)-6.947 E .98(UNIX utility)33.336
393 R F2(make)4.23 E F1 .979(is also useful for coordinating the b)4.23
F .979(uild of complicated e)-.26 F -.195(xe)-.195 G(cutables,).195 E
.695(especially when the source tree is lar)33.336 408 R .696
(ge and it is desirable to do the minimum amount of)-.234 F -.13(wo)
33.336 423 S 1.726(rk necessary for each incremental design change.).13
F 1.725(The follo)8.225 F 1.725(wing depicts the typical)-.325 F
(UNIX/gcc toolchain:)33.336 438 Q 0 0 333 333 -91 91 100.836 544 PBEGIN
%%BeginDocument: toolchain.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: toolchain.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Sep  6 21:58:01 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 333 91
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 91 moveto 0 0 lineto 333 0 lineto 333 91 lineto closepath clip newpath
-45.0 207.8 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
gs  clippath
1515 2280 m 1515 2220 l 1363 2220 l 1483 2250 l 1363 2280 l cp
eoclip
n 1050 2250 m 1125 2250 l 1200 2250 l 1275 2250 l 1350 2250 l 1425 2250 l

 1500 2250 l gs col0 s gr gr

% arrowhead
n 1363 2280 m 1483 2250 l 1363 2220 l  col0 s
% Polyline
n 1500 2025 m 2175 2025 l 2175 2550 l 1500 2550 l
 cp gs col0 s gr 
% Polyline
gs  clippath
2640 2280 m 2640 2220 l 2488 2220 l 2608 2250 l 2488 2280 l cp
eoclip
n 2175 2250 m 2250 2250 l 2325 2250 l 2400 2250 l 2475 2250 l 2550 2250 l

 2625 2250 l gs col0 s gr gr

% arrowhead
n 2488 2280 m 2608 2250 l 2488 2220 l  col0 s
% Polyline
n 2550 2025 m 3225 2025 l 3225 2550 l 2550 2550 l
 cp gs col0 s gr 
% Polyline
gs  clippath
3690 2280 m 3690 2220 l 3538 2220 l 3658 2250 l 3538 2280 l cp
eoclip
n 3225 2250 m 3300 2250 l 3375 2250 l 3450 2250 l 3525 2250 l 3600 2250 l

 3675 2250 l gs col0 s gr gr

% arrowhead
n 3538 2280 m 3658 2250 l 3538 2220 l  col0 s
% Polyline
n 3600 2025 m 4275 2025 l 4275 2550 l 3600 2550 l
 cp gs col0 s gr 
% Polyline
gs  clippath
4740 2280 m 4740 2220 l 4588 2220 l 4708 2250 l 4588 2280 l cp
eoclip
n 4275 2250 m 4350 2250 l 4425 2250 l 4500 2250 l 4575 2250 l 4650 2250 l

 4725 2250 l gs col0 s gr gr

% arrowhead
n 4588 2280 m 4708 2250 l 4588 2220 l  col0 s
% Polyline
n 4650 2025 m 5325 2025 l 5325 2550 l 4650 2550 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5790 2280 m 5790 2220 l 5638 2220 l 5758 2250 l 5638 2280 l cp
eoclip
n 5325 2250 m 5400 2250 l 5475 2250 l 5550 2250 l 5625 2250 l 5700 2250 l

 5775 2250 l gs col0 s gr gr

% arrowhead
n 5638 2280 m 5758 2250 l 5638 2220 l  col0 s
% Polyline
n 1425 2700 m 1500 2850 l 2325 2850 l 2400 3000 l 2475 2850 l 3225 2850 l

 3375 2700 l gs col0 s gr 
/Times-Roman ff 200.00 scf sf
750 2325 m
gs 1 -1 sc (.c) col0 sh gr
/Times-Roman ff 200.00 scf sf
1650 2325 m
gs 1 -1 sc (cpp) col0 sh gr
/Times-Roman ff 200.00 scf sf
2775 2325 m
gs 1 -1 sc (cc) col0 sh gr
/Times-Roman ff 200.00 scf sf
3900 2325 m
gs 1 -1 sc (as) col0 sh gr
/Times-Roman ff 200.00 scf sf
4950 2325 m
gs 1 -1 sc (ld) col0 sh gr
/Times-Roman ff 200.00 scf sf
2325 2100 m
gs 1 -1 sc (.i) col0 sh gr
/Times-Roman ff 200.00 scf sf
3375 2100 m
gs 1 -1 sc (.s) col0 sh gr
/Times-Roman ff 200.00 scf sf
4425 2100 m
gs 1 -1 sc (.o) col0 sh gr
/Times-Roman ff 200.00 scf sf
5850 2250 m
gs 1 -1 sc (a.out) col0 sh gr
/Times-Roman ff 200.00 scf sf
2100 3150 m
gs 1 -1 sc (part of gcc) col0 sh gr
/Times-Roman ff 200.00 scf sf
2100 3405 m
gs 1 -1 sc (binary) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND F3(Inside the Compiler)212.086 574 Q F1 .657
(The compiler is gi)33.336 610 R -.195(ve)-.325 G 3.907(nap).195 G .657
(rogram in the source language and is char)-3.907 F .657
(ged with \214guring out)-.234 F(three basic things about it:)33.336 625
Q 3.25<8357>33.336 640 S(hat does it)-3.25 E/F4 13/Times-Italic@0 SF
(say)3.25 E F1(?)A 3.25<8357>33.336 655 S(hat does it)-3.25 E F4(mean)
3.25 E F1(?)A 3.25<8348>33.336 670 S .65 -.325(ow c)-3.25 H
(an it be implemented in the tar).325 E(get language?)-.234 E 2.897
-1.04(We c)33.336 700 T .817(an mak)1.04 F 4.067(ead)-.13 G .817
(angerous analogy to the human brain')-4.067 F 4.067(su)-.715 G .817
(nderstanding of language.)-4.067 F -1.04(We)7.317 G .175
(hear or read the sentence "Pick that up and put it a)33.336 715 R -.13
(wa)-.195 G 3.426(y". The).13 F .176(\214rst phase of understanding)
3.426 F 2.213
(is to group the phonemes \(hearing\) or characters \(reading\) into w)
33.336 730 R 2.213(ords \(tok)-.13 F 5.463(ens\). Ne)-.13 F(xt)-.195 E
1.15(comes "parsing" the sentence structure.)33.336 745 R 1.15
(In this e)7.65 F 1.15(xample, the syntax is harder than what)-.195 F 0
Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 3)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF -.13(wo)33.336 120 S 1.949
(uld typically be found in a computer language.).13 F 1.949(The w)8.449
F 1.949(ord "pick" could be either a)-.13 F 1.305(noun or a v)33.336 135
R(erb)-.195 E 7.805(.B)-.52 G 4.555(yi)-7.805 G(terati)-4.555 E 1.695
-.195(ve a)-.325 H 1.306
(pplication of syntax rules, we understand that this phrase).195 F .184
(contains tw)33.336 150 R 3.434(os)-.13 G(ubject/object/v)-3.434 E .183
(erb structures joined by the conjunction "and".)-.195 F(No)6.683 E
3.433(wt)-.325 G .183(hat we)-3.433 F .194
(understand what the sentence says, we ha)33.336 165 R .584 -.195(ve t)
-.26 H 3.444<6f8c>.195 G .194(gure out what it means.)-3.444 F .195
(Here the conte)6.694 F(xt)-.195 E .971(of what came earlier in the con)
33.336 180 R -.195(ve)-.52 G .97(rsation is essential.).195 F -.52(Wi)
7.47 G .97(thout that, there is no meaning.).52 F 4.998 -1.04(To w)
33.336 195 T 2.918(hat object does "that" refer?)1.04 F 2.918
(It must be something that w)9.418 F 2.918(as mentioned earlier)-.13 F
(.)-.715 E(Finally)33.336 210 Q 4.795(,w)-.845 G 4.795(en)-4.795 G 1.545
(eed to \214gure out ho)-4.795 F 4.795(wt)-.325 G 4.795(oi)-4.795 G
1.545(mplement this directi)-4.795 F -.195(ve)-.325 G 8.045(.T).195 G
1.545(his includes kno)-8.045 F(wing)-.325 E(ho)33.336 225 Q 3.459(wt)
-.325 G 3.459(op)-3.459 G .209(ick the object up, which might v)-3.459 F
.21(ary depending on the size and shape, and ho)-.325 F 3.46(wt)-.325 G
(o)-3.46 E(put it a)33.336 240 Q -.13(wa)-.195 G 1.69 -.845(y, w).13 H
(hich seemingly requires kno).845 E(wledge of where it should go.)-.325
E 1.257(Because natural \(human\) language is v)33.336 270 R 1.256
(ery ambiguous, the techniques used to process it)-.195 F .006(are v)
33.336 285 R .006(ery dif)-.195 F .006
(ferent from those used to process computer languages.)-.325 F .007
(In particular)6.507 F 3.257(,c)-.52 G(omputer)-3.257 E 1.634(languages\
 were created by humans speci\214cally to be easy for computers to unde\
rstand)33.336 300 R(and implement.)33.336 315 Q -.195(Fo)6.5 G 3.25(rt)
.195 G(his reason, analogies between the tw)-3.25 E 3.25(oa)-.13 G
(re best a)-3.25 E -.26(vo)-.26 G(ided.).26 E/F2 13/Times-Bold@0 SF(Fr)
178.91 345 Q(ont End / Back End structur)-.234 E(e)-.234 E F1 .29
(Often, in discussing the architecture of a compiler)33.336 375 R 3.54
(,w)-.52 G 3.54(es)-3.54 G .291(peak of it ha)-3.54 F .291(ving a)-.26 F
F2(fr)3.541 E(ont-end)-.234 E F1(and)3.541 E(a)33.336 390 Q F2(back-end)
4.684 E F1 7.934(.T)C 1.434(he front-end answers the \214rst tw)-7.934 F
4.684(oq)-.13 G 1.434(uestions abo)-4.684 F -.195(ve)-.195 G 4.684(,i)
.195 G 1.434(.e. it recognizes the)-4.684 F .669(source language in ter\
ms of the de\214ned language constructs and determines the meaning)
33.336 405 R 2.675(based on the rules of the language.)33.336 420 R
2.675(The back-end emits tar)9.175 F 2.674(get language instructions)
-.234 F(which will accomplish what the source program says and means.)
33.336 435 Q F2(The Fr)225.918 480 Q(ont End)-.234 E F1 -.195(Fo)33.336
525 S 4.667(rt).195 G 1.418(he sak)-4.667 F 4.668(eo)-.13 G 4.668(fd)
-4.668 G 1.418(iscussion, the functions of the front-end are usually di)
-4.668 F 1.418(vided into three)-.325 F(parts or phases:)33.336 540 Q
3.25<834c>33.336 555 S -.195(ex)-3.25 G(ical analysis, or "scanning")
.195 E 3.25<8353>33.336 570 S(yntactical analysis, or "parsing")-3.25 E
3.25<8353>33.336 585 S(emantic analysis.)-3.25 E 2.655 -1.04(We s)33.336
615 T .575(hall see that these are, in a sense, one-, tw)1.04 F .574
(o- and three-dimensional w)-.13 F .574(ays of looking)-.13 F
(at the source program.)33.336 630 Q(Brie\215y)33.336 651 Q(,)-.845 E F2
.157(lexical analysis)3.407 F F1 .158(is a linear process of e)3.408 F
.158(xamining the characters of the source code)-.195 F .127(one charac\
ter at a time, and grouping them into fundamental language units called)
33.336 666 R F2(tok)3.377 E(ens)-.13 E F1(or)33.336 681 Q F2(lexemes)
4.155 E F1 7.405(.T)C .905(he rules which describe ho)-7.405 F 4.155(wc)
-.325 G .905(haracters may be grouped into these tok)-4.155 F(ens)-.13 E
(can be speci\214ed using)33.336 696 Q F2(Regular Expr)3.25 E(ession)
-.234 E F1(notation.)3.25 E F2 .02(Syntactical analysis)33.336 717 R F1
.019(looks at the input as a series of tok)3.269 F .019(ens, and disco)
-.13 F -.195(ve)-.195 G .019(rs ho).195 F 3.269(wt)-.325 G .019(he tok)
-3.269 F(ens)-.13 E 6.768(are related in terms of higher)33.336 732 R
(-le)-.26 E -.195(ve)-.325 G 10.018(lc).195 G 6.768
(onstructs such as if-then-else statements,)-10.018 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 4)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF .695(declarations, etc.)33.336 120 R .695
(This is a recursi)7.195 F 1.084 -.195(ve p)-.325 H .694
(rocess which \(conceptually\) places the tok).195 F .694(ens into)-.13
F 3.814(at)33.336 135 S .564
(ree representing the grammatical structure of the input program.)-3.814
F .564(The syntax rules are)10.314 F -.195(ex)33.336 150 S(pressed as a)
.195 E/F2 13/Times-Bold@0 SF(Grammar)3.25 E F1(.)A 2.369(Both le)33.336
171 R 2.369(xical and syntactical analysis are f)-.195 F 2.368
(airly mechanical.)-.13 F 2.368(There are straightforw)8.868 F(ard)-.13
E .627(algorithms for constructing programs or subroutines which perfor\
m this analysis.)33.336 186 R .628(In this)7.128 F 2.365
(course, we will mak)33.336 201 R 5.615(ee)-.13 G(xtensi)-5.81 E 2.755
-.195(ve u)-.325 H 2.365(se of tw).195 F 5.615(op)-.13 G(rograms:)-5.615
E F2(lex/\215ex)5.615 E F1 5.615(,w)C 2.365(hich b)-5.615 F 2.365
(uilds a le)-.26 F(xical)-.195 E 2.046
(analyzer subroutine from a set of re)33.336 216 R 2.046(gular e)-.195 F
2.047(xpressions, and)-.195 F F2(yacc)5.297 E F1(/)A F2(bison)A F1 5.297
(,w)C 2.047(hich b)-5.297 F 2.047(uilds a)-.26 F
(syntactical analyzer subroutine from a set of grammar rules.)33.336 231
Q 2.448(After le)33.336 252 R 2.448(xical and syntactical analysis, the\
 compiler understands what the programmer)-.195 F F2(said)33.336 267 Q
F1(.)A 2.173(The third phase,)33.336 288 R F2 2.173(semantic analysis)
5.423 F F1(disco)5.423 E -.195(ve)-.195 G 2.173
(rs the meaning or intent of the syntactical).195 F 3.428
(constructs. In)33.336 303 R .178(this phase, higher)3.428 F(-le)-.26 E
-.195(ve)-.325 G 3.427(ll).195 G .177
(anguage concepts such as type checking, identi\214er)-3.427 F .557
(scope, etc. are applied.)33.336 318 R(Unfortunately)7.057 E 3.807(,t)
-.845 G .557(he third phase of the compiler front-end is not as)-3.807 F
.754(easy to specify and implement mechanically)33.336 333 R 7.254(.T)
-.845 G .754(here is no)-7.254 F/F3 13/Times-Italic@0 SF(pr)4.004 E
(actical)-.195 E F1 .754(system of specifying)4.004 F 2.882
(these rules nor an automated w)33.336 348 R 2.882(ay of b)-.13 F 2.882
(uilding a semantic analyzer)-.26 F 6.133(,t)-.52 G 2.883
(hus the code to)-6.133 F 1.555(implement semantic analysis must be de)
33.336 363 R -.195(ve)-.325 G 1.554
(loped by hand on a case-by-case basis.).195 F(The)8.054 E .032
(structure of the semantic analysis phase will v)33.336 378 R .032
(ary depending on the source language rules,)-.325 F -.26(bu)33.336 393
S 4.023(tg).26 G .773(enerally includes such major components as: the t\
ype system, the symbol table, the)-4.023 F(IR generator)33.336 408 Q(.)
-.715 E 1.385(Although conceptually these three phases of the front end\
 could be "pure" and isolated)33.336 429 R 1.222(from each other)33.336
444 R 4.472(,w)-.52 G 1.222
(ith the output of one phase becoming the input to the ne)-4.472 F 1.222
(xt, in actual)-.195 F 1.069(compilers all three phases w)33.336 459 R
1.069(ork together as co-routines.)-.13 F 1.069
(This results in a more ef)7.569 F(\214cient)-.325 E(compiler)33.336 474
Q(.)-.715 E 7.392(At the conclusion of le)33.336 495 R 7.392
(xical, syntactical and semantic analysis, the compiler)-.195 F 3.279
("understands" what the programmer w)33.336 510 R 3.28(ants to do.)-.13
F 3.28(The job of the front end is then)9.78 F 2.611
(complete, and its product is an internalized)33.336 525 R F2 2.61
(intermediate r)5.861 F(epr)-.234 E(esentation)-.234 E F1 2.61
(\(IR\) of the)5.86 F 4.774(program. The)33.336 540 R 1.524
(structure of this v)4.774 F 1.525
(aries greatly from compiler to compiler)-.325 F 8.025(.I)-.715 G 4.775
(tc)-8.025 G 1.525(ould be a)-4.775 F(tree-lik)33.336 555 Q 3.776(ed)
-.13 G .526
(ata structure, or a linear array of abstract pseudo-code, or some h)
-3.776 F .526(ybrid thereof.)-.065 F 1.705(The IR is not the tar)33.336
570 R 1.705(get language and is generally independent of an)-.234 F
4.955(yp)-.195 G 1.705(articular tar)-4.955 F(get)-.234 E 3.962
(architecture. During)33.336 585 R .712
(the compilation process, there may be se)3.962 F -.195(ve)-.325 G .712
(ral dif).195 F .711(ferent forms of IR)-.325 F
(that are used and transformed.)33.336 600 Q F2(The Back End)227.601 630
Q F1 .984(It is the job of the)33.336 666 R F2(back-end)4.234 E F1 .985
(of the compiler to translate the intermediate representation)4.234 F
1.168(into the tar)33.336 681 R 1.167
(get language \(e.g. assembly code\).)-.234 F 1.167
(The back end must tak)7.667 F 4.417(ei)-.13 G 1.167(nto account the)
-4.417 F 1.097(unique features of the tar)33.336 696 R 4.347(get. When)
-.234 F 1.098(the tar)4.347 F 1.098
(get is assembly language, the back end must)-.234 F -.13(ke)33.336 711
S .827(ep track of which re).13 F .826
(gisters to use, which instructions to select to implement the intent)
-.195 F .639(of the IR, the subroutine calling con)33.336 726 R -.195
(ve)-.52 G .639(ntion in ef).195 F .639(fect, etc.)-.325 F .64
(The goal of the back end is to)7.139 F .013(produce not only a tar)
33.336 741 R .013(get which correctly implements the IR, b)-.234 F .013
(ut one which implements it)-.26 F 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 5)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(in an optimal f)33.336 120 Q(ashion.)-.13 E 1.961
(Note that the back end and front end can be cross-plugg)33.336 141 R
5.211(able. The)-.065 F 1.962(back end does not)5.212 F .553(require an)
33.336 156 R 3.803(yk)-.195 G(no)-3.803 E .553
(wledge of the source language in order to do its job, as it w)-.325 F
.552(orks from the)-.13 F 3.341(intermediate representation.)33.336 171
R(Lik)9.841 E -.325(ew)-.13 G 3.341
(ise, the front end needs to understand the source).325 F .035
(language, b)33.336 186 R .035(ut does not need to kno)-.26 F 3.285(wa)
-.325 G .035(bout the tar)-3.285 F .035(get language.)-.234 F .034
(As a result, multiple front)6.534 F .884(ends \(e.g. C, C++ and FOR)
33.336 201 R .885(TRAN\) can utilize the same back end, and a gi)-.78 F
-.195(ve)-.325 G 4.135(nf).195 G .885(ront end)-4.135 F 2.887
(can be attached to v)33.336 216 R 2.887(arious back ends to create e)
-.325 F -.195(xe)-.195 G 2.887(cutable code for dif).195 F 2.887
(ferent tar)-.325 F(gets.)-.234 E 1.043(When this is done such that the\
 compiler creates code for an architecture other than the)33.336 231 R
(one on which the compiler is running, that is called a)33.336 246 Q/F2
13/Times-Bold@0 SF(cr)3.25 E(oss-compiler)-.234 E F1(.)A F2
(Optimization)230.5 276 Q F1 1.838
(There are potentially in\214nite sequences of tar)33.336 312 R 1.838
(get language instructions which correctly)-.234 F .521
(implement the source language.)33.336 327 R .521
(Optimization is the process of arri)7.021 F .521(ving at a tar)-.325 F
.521(get which)-.234 F 1.134(is "optimal" either in terms of speed of e)
33.336 342 R -.195(xe)-.195 G 1.134
(cution, memory consumption, or some other).195 F 4.875
(metric. Optimization)33.336 357 R 1.625(is the most dif)4.875 F 1.625
(\214cult part of compiler construction, and a detailed)-.325 F
(study of it is almost al)33.336 372 Q -.13(wa)-.13 G
(ys left to a follo).13 E(w-up course in compiler theory)-.325 E(.)-.845
E 2.235 -1.04(We c)33.336 393 T .155(an di)1.04 F .154
(vide optimization into tw)-.325 F 3.404(ot)-.13 G .154
(ypes: those which are independent of the tar)-3.404 F .154(get, and)
-.234 F .887(those which are tar)33.336 408 R 4.137(get-speci\214c. The)
-.234 F .887(latter optimizations are considered to be part of the)4.137
F 3.721(back-end. On)33.336 423 R .47(the other hand, architecture-neut\
ral optimizations can be performed on the)3.721 F 1.208(IR, thus adding\
 another phase to the compiler which sits between the front end and the)
33.336 438 R .05(back end.)33.336 453 R .049(Examples of architecture-n\
eutral optimizations include eliminating code which)6.549 F 2.787
(can ne)33.336 468 R -.195(ve)-.325 G 6.037(rb).195 G 6.037(er)-6.037 G
2.787(eached and a)-6.037 F -.26(vo)-.26 G 2.787(iding computation of e)
.26 F 2.788(xpressions whose v)-.195 F 2.788(alues can be)-.325 F
(determined at compile time.)33.336 483 Q 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 6)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E 0 0 468 694
-322.34 478 33.336 442.34 PBEGIN
%%BeginDocument: comp-overview.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: comp-overfiew.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Sep  2 20:01:59 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 694 478
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 478 moveto 0 0 lineto 694 0 lineto 694 478 lineto closepath clip newpath
-76.5 616.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
 [60 24 15 18 15 18 15 24 ] 0 sd
n 7425 5100 2250 1050 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Polyline
n 3525 2325 m 5250 2325 l 5250 3300 l 3525 3300 l
 cp gs col0 s gr 
% Polyline
n 6450 2325 m 8175 2325 l 8175 3300 l 6450 3300 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6465 2880 m 6465 2820 l 6313 2820 l 6433 2850 l 6313 2880 l cp
eoclip
n 5250 2850 m
 6450 2850 l gs col0 s gr gr

% arrowhead
n 6313 2880 m 6433 2850 l 6313 2820 l  col0 s
% Polyline
n 5775 4950 m 6600 4950 l 6600 5550 l 5775 5550 l
 cp gs col0 s gr 
% Polyline
n 8400 4650 m 9300 4650 l 9300 5400 l 8400 5400 l
 cp gs col0 s gr 
% Polyline
n 7125 5325 m 8100 5325 l 8100 5925 l 7125 5925 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7245 4065 m 7305 4065 l 7305 3913 l 7275 4033 l 7245 3913 l cp
eoclip
n 7275 3300 m
 7275 4050 l gs col0 s gr gr

% arrowhead
n 7245 3913 m 7275 4033 l 7305 3913 l  col0 s
% Polyline
gs  clippath
7320 7290 m 7380 7290 l 7380 7138 l 7350 7258 l 7320 7138 l cp
eoclip
n 7350 6150 m
 7350 7275 l gs col0 s gr gr

% arrowhead
n 7320 7138 m 7350 7258 l 7380 7138 l  col0 s
% Polyline
n 6450 7200 m 8175 7200 l 8175 8175 l 6450 8175 l
 cp gs col0 s gr 
% Polyline
n 6450 8700 m 8175 8700 l 8175 9675 l 6450 9675 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7320 8715 m 7380 8715 l 7380 8563 l 7350 8683 l 7320 8563 l cp
eoclip
n 7350 8175 m
 7350 8700 l gs col0 s gr gr

% arrowhead
n 7320 8563 m 7350 8683 l 7380 8563 l  col0 s
% Polyline
gs  clippath
7320 10140 m 7380 10140 l 7380 9988 l 7350 10108 l 7320 9988 l cp
eoclip
n 7350 9675 m
 7350 10125 l gs col0 s gr gr

% arrowhead
n 7320 9988 m 7350 10108 l 7380 9988 l  col0 s
% Polyline
 [60] 0 sd
n 3450 6900 m
 12825 6900 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3450 8475 m
 12825 8475 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
3540 2955 m 3540 2895 l 3388 2895 l 3508 2925 l 3388 2955 l cp
eoclip
n 2775 2925 m
 3525 2925 l gs col0 s gr gr

% arrowhead
n 3388 2955 m 3508 2925 l 3388 2895 l  col0 s
/Times-Roman-iso ff 200.00 scf sf
3750 2775 m
gs 1 -1 sc (lexical) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3750 3030 m
gs 1 -1 sc ( analysis) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5700 2625 m
gs 1 -1 sc (tokens) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 4425 m
gs 1 -1 sc (semantic) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 4680 m
gs 1 -1 sc (    analysis) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5925 5175 m
gs 1 -1 sc (type) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5925 5430 m
gs 1 -1 sc (rules) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8550 4875 m
gs 1 -1 sc (symbol) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8550 5130 m
gs 1 -1 sc (table) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 5730 m
gs 1 -1 sc (IR gen) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7350 3600 m
gs 1 -1 sc (embedded parser) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7350 3855 m
gs 1 -1 sc (actions) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 7500 m
gs 1 -1 sc (arch-neutral) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6825 2625 m
gs 1 -1 sc (parser) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6675 7800 m
gs 1 -1 sc (optimizations) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7500 6600 m
gs 1 -1 sc (Intermediate) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7500 6855 m
gs 1 -1 sc (Representation \(IR\)) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7500 8400 m
gs 1 -1 sc (Transformed IR) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 8925 m
gs 1 -1 sc (arch-specific) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 9180 m
gs 1 -1 sc (optimizations/) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 9435 m
gs 1 -1 sc (code generation) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6525 10275 m
gs 1 -1 sc (TARGET LANGUAGE) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1275 2775 m
gs 1 -1 sc (SOURCE LANGUAGE) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
3300 7350 m
gs 1 -1 sc (OPTIMIZER) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
2850 8850 m
gs 1 -1 sc (BACK) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
2850 9135 m
gs 1 -1 sc (END) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
3075 4725 m
gs 1 -1 sc (FRONT) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
3075 5010 m
gs 1 -1 sc (END) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Bold@0 SF(Lexical Analysis -- Ov)187.847 472.34 Q
(er)-.13 E(view)-.13 E/F2 13/Times-Roman@0 SF 1.701(The source program \
is a sequence of characters which are part of the set of allo)33.336
508.34 R -.13(wa)-.325 G(ble).13 E .23(source code characters.)33.336
523.34 R(Dif)6.73 E .23(ferent languages accept dif)-.325 F .23
(ferent character sets.)-.325 F -.195(Fo)6.73 G 3.481(re).195 G(xample,)
-3.676 E .424(ANSI C allo)33.336 538.34 R .424
(ws only a subset of 7-bit ASCII characters.)-.325 F .424(The job of le)
10.174 F .423(xical analysis \(this)-.195 F 3.485
(act is often called "scanning" or "le)33.336 553.34 R 3.485
(xing"\) is to e)-.195 F 3.485(xamine this continuous stream of)-.195 F
(characters and break it into groups of characters called)33.336 568.34
Q F1(tok)3.25 E(ens)-.13 E F2(.)A(As a tangible e)33.336 589.34 Q
(xample, consider the follo)-.195 E(wing fragment of C code:)-.325 E/F3
10/Courier@0 SF 12(a=)33.336 601.34 S(b+c-012;)-12 E F2 3.505(The le)
33.336 616.34 R -.195(xe)-.195 G 4.545 -.52(r, f).195 H(ollo).52 E 3.505
(wing the ANSI C language speci\214cation, sees this as the follo)-.325
F(wing)-.325 E(sequence of tok)33.336 631.34 Q(ens:)-.13 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 7)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 10
/Courier@0 SF 79.2(TOKEN LEXEME)33.336 117 R(TOKEN)79.2 E 194.4
(CLASS VALUE)33.336 129 R 79.2(IDENT a)33.336 153 R(a)109.2 E 97.2(EQ =)
33.336 165 R(n/a)109.2 E 79.2(IDENT b)33.336 177 R(b)109.2 E 85.2
(PLUS +)33.336 189 R(n/a)109.2 E 79.2(IDENT c)33.336 201 R(c)109.2 E
79.2(MINUS -)33.336 213 R(n/a)109.2 E 91.2(NUM 012 10)33.336 225 R/F2 13
/Times-Roman@0 SF .557(Note that the space between the a and = in the o\
riginal source code is not rele)33.336 246 R -.325(va)-.325 G .557
(nt and is).325 F .667(not considered a tok)33.336 261 R 3.917(en. This)
-.13 F .666
(is part of the de\214nition of the C language: spaces, tabs and)3.916 F
(ne)33.336 276 Q .572(wlines are)-.325 F/F3 13/Times-Bold@0 SF
(delimiters)3.822 E F2 3.823(,i)C .573(.e. the)-3.823 F 3.823(ym)-.195 G
.573(ay appear 0 or more times in between tok)-3.823 F .573(ens, b)-.13
F .573(ut are)-.26 F 2.45(not themselv)33.336 291 R 2.45
(es considered tok)-.195 F 5.7(ens. Another)-.13 F -.13(wa)5.7 G 5.699
(yo).13 G 5.699(fl)-5.699 G 2.449(ooking at this is that whitespace)
-5.699 F .964(characters are tok)33.336 306 R .964
(ens which are simply discarded and do not reach the syntactical stage.)
-.13 F(Other languages may ha)33.336 321 Q .39 -.195(ve o)-.26 H
(ther rules in which whitespace is signi\214cant.).195 E .771(At the ne)
33.336 342 R .771(xt le)-.195 F -.195(ve)-.325 G .77
(l, of syntactical analysis, the parser will follo).195 F 4.02(was)-.325
G .77(eries of rules, called a)-4.02 F(grammar)33.336 357 Q 4.963(,w)
-.52 G 1.713(hich de\214nes the syntax of the language.)-4.963 F 1.713
(Consider a grammar for a simple)8.213 F 2.574
(language that only understands arithmetic e)33.336 372 R 2.574
(xpressions and then consider the e)-.195 F(xample)-.195 E(abo)33.336
387 Q -.195(ve)-.195 G 6.775(,a).195 G -.065(ga)-6.775 G 6.775(in. In)
.065 F 3.525(terms of the grammar)6.775 F 6.776(,t)-.52 G 3.526(he tok)
-6.776 F 3.526(ens a, b and c occuring abo)-.13 F 3.916 -.195(ve a)-.195
H(re).195 E(equi)33.336 402 Q -.325(va)-.325 G 4.795(lent. The).325 F
1.545(parser doesn')4.795 F 4.795(tc)-.234 G 1.545
(are what you call the v)-4.795 F 1.545
(ariables identi\214ers, it just cares)-.325 F(that it has seen a v)
33.336 417 Q(ariable name.)-.325 E .179
(Therefore we can say that the le)33.336 438 R -.195(xe)-.195 G 3.429
(rc).195 G .179(onsumes the input character stream which comprises)
-3.429 F 2.114(the source program, and produces a stream of tok)33.336
453 R 5.363(ens. Each)-.13 F(tok)5.363 E 2.113
(en is identi\214ed to the)-.13 F 2.906(parser by a)33.336 468 R F3(tok)
6.156 E 2.906(en class)-.13 F F2 2.906
(\(e.g. IDENTIFIER or NUM\), and where there is additional)6.156 F 1.256
(information, such as the name of the identi\214er or the v)33.336 483 R
1.255(alue of the inte)-.325 F 1.255(ger literal, that is)-.195 F(kno)
33.336 498 Q .31(wn as the)-.325 F F3(tok)3.56 E .31(en semantic v)-.13
F(alue)-.13 E F2 .31(and is also passed up to the parser)3.56 F 6.811
(.T)-.715 G .311(he literal string)-6.811 F 1.688
(of characters which comprise the tok)33.336 513 R 1.688
(en is called the)-.13 F F3(lexeme)4.938 E F2 8.188(.T)C 1.688(he le)
-8.188 F -.195(xe)-.195 G 1.688(me is discarded).195 F .188
(after recognition by the le)33.336 528 R -.195(xe)-.195 G 3.438(ra).195
G .188(nd e)-3.438 F .188(xtraction of its semantic v)-.195 F 3.438
(alue. It)-.325 F .188(is not carried further)3.438 F
(into the compilation process, e)33.336 543 Q
(xcept perhaps for error reporting.)-.195 E 1.739(The tok)33.336 564 R
1.739(en v)-.13 F 1.739(alue is not necessarily the same as the le)-.325
F -.195(xe)-.195 G 4.988(me. In).195 F 1.738(the e)4.988 F 1.738
(xample abo)-.195 F -.195(ve)-.195 G 4.988(,t).195 G(he)-4.988 E 3.204
(number w)33.336 579 R 3.204(as gi)-.13 F -.195(ve)-.325 G 6.454(ni).195
G 6.454(no)-6.454 G 6.454(ctal. This)-6.454 F 3.204(same tok)6.454 F
3.205(en, with the e)-.13 F 3.205(xact same tok)-.195 F 3.205
(en class and)-.13 F .36(semantic v)33.336 594 R .36
(alue, may come from the le)-.325 F -.195(xe)-.195 G(me).195 E/F4 13
/Courier@0 SF(10)3.61 E F2(,)A F4(0x0A)3.61 E F2 3.61(,o)C 3.61(ri)-3.61
G 3.609(nf)-3.61 G .359(act from an in\214nite number)-3.739 F(of equi)
33.336 609 Q -.325(va)-.325 G(lent le).325 E -.195(xe)-.195 G
(mes \(consider 000000012\).).195 E 2.735 -1.04(We w)33.336 630 T .655
(ill see that when we b)1.04 F .655(uild a compiler using le)-.26 F
(x/\215e)-.195 E 3.905(xa)-.195 G .656(nd yacc/bison, the tok)-3.905 F
.656(en class)-.13 F .15(is represented as an inte)33.336 645 R .15
(ger return code from the le)-.195 F -.195(xe)-.195 G 3.399(rf).195 G
(unction)-3.399 E F4(yylex\(\))3.399 E F2 6.649(.T)C .149(he le)-6.649 F
-.195(xe)-.195 G .149(me is).195 F 2.244(returned in the global)33.336
660 R F4 2.244(char *)5.494 F F2 -.325(va)5.494 G(riable).325 E F4
(yytext)5.494 E F2 8.744(.T)C 2.244(he semantic v)-8.744 F 2.244
(alue is returned in)-.325 F 2.279(another global v)33.336 675 R
(ariable)-.325 E F4(yylval)5.529 E F2 5.529(,w)C 2.279
(hich may be of an)-5.529 F 5.529(yd)-.195 G 2.279
(ata type \(including struct or)-5.529 F
(union\) that the compiler writer chooses.)33.336 690 Q F3
(Specifying Lexical Rules with Regular Expr)126.793 720 Q(essions)-.234
E 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 8)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF 4.82(Both le)33.336 120 R 4.82
(xical and syntactical analysis can be performed mechanically)-.195 F
11.321(.S)-.845 G(pecialized)-11.321 E .512
(languages are used to specify the le)33.336 135 R .511
(xical and grammatical rules.)-.195 F 2.591 -1.04(We s)7.011 H .511
(hall see in the ne)1.04 F(xt)-.195 E 1.796
(unit that grammar rules are a superset of le)33.336 150 R 1.796
(xical rules.)-.195 F(Ho)8.296 E(we)-.325 E -.195(ve)-.325 G 2.836 -.52
(r, i).195 H 5.046(nt).52 G 1.796(erms of practical)-5.046 F 1.255
(compiler construction, it is easier and more ef)33.336 165 R 1.254
(\214cient to specify the le)-.325 F 1.254(xical rules using a)-.195 F
(dif)33.336 180 Q(ferent, more limited language called)-.325 E/F2 13
/Times-Bold@0 SF(Regular Expr)3.25 E(essions.)-.234 E F1 2.601(Using re)
33.336 201 R 2.601(gular e)-.195 F 2.601(xpressions gi)-.195 F -.195(ve)
-.325 G 5.851(su).195 G 5.851(sas)-5.851 G 2.601(tandardized w)-5.851 F
2.601(ay to talk about le)-.13 F 2.601(xical rules, as)-.195 F 2.405
(opposed to using ad-hoc methods or resorting to narrati)33.336 216 R
2.795 -.195(ve d)-.325 H 5.655(escriptions. Furthermore,).195 F(re)
33.336 231 Q 4.182(gular e)-.195 F 4.182(xpressions lend themselv)-.195
F 4.182(es easily to automatic generation of programs to)-.195 F
(recognize them.)33.336 246 Q .6
(The reader should consult one of the man)33.336 267 R 3.85(yf)-.195 G
.6(reely a)-3.85 F -.325(va)-.26 G .6(ilable and comprehensi).325 F .99
-.195(ve r)-.325 H(esources).195 E .774(on re)33.336 282 R .774(gular e)
-.195 F 4.024(xpressions. The)-.195 F/F3 13/Times-Italic@0 SF<8d65>4.024
E(x)-.26 E F1 .775(manual clearly e)4.024 F .775(xplains the re)-.195 F
.775(gular e)-.195 F .775(xpressions that are)-.195 F 1.228
(used by \215e)33.336 297 R 4.478(xa)-.195 G 1.228(nd ho)-4.478 F 4.478
(wt)-.325 G 4.478(oa)-4.478 G 1.227
(pply them, including order of operations and escaping issues.)-4.478 F
(The follo)33.336 312 Q(wing is a brief o)-.325 E -.195(ve)-.195 G(rvie)
.195 E 3.25(wa)-.325 G(nd not a complete list:)-3.25 E/F4 13/Courier@0
SF(REGEXP)33.336 342 Q F1(MA)27.3 E(TCHES)-1.443 E F4(x)33.336 357 Q F1
(The single character x)66.3 E F4(.)41.136 372 Q F1(An)58.5 E 3.25(ys)
-.195 G(ingle character \(e)-3.25 E(xcept ne)-.195 E(wline\))-.325 E F4
(\\t)33.336 387 Q F1(ASCII T)58.5 E 3.25(AB. All)-1.209 F
(C-style single character escapes are recognized)3.25 E F4([abc])33.336
402 Q F1(single character a, b or c)35.1 E F4([A-Z])33.336 417 Q F1
(single uppercase letter)35.1 E F4([ab-hq])33.336 432 Q F1
(the single letter a, b,c,d,e,f,g,h or q)19.5 E F4([^0-9])33.336 447 Q
F1(an)27.3 E 3.25(ys)-.195 G(ingle character \(including ne)-3.25 E
(wline\) e)-.325 E(xcept a digit)-.195 E F4(RE*)33.336 462 Q F1
(zero or more instances of the e)50.7 E(xpression RE)-.195 E F4(RE+)
33.336 477 Q F1(one or more instances of the e)50.7 E(xpression RE)-.195
E F4(RE?)33.336 492 Q F1(zero or one instance of the e)50.7 E
(xpression RE)-.195 E F4(RE{m,n})33.336 507 Q F1
(between m and n instances of RE)19.5 E F4(RE{m,})33.336 522 Q F1 3.25
(mo)27.3 G 3.25(rm)-3.25 G(ore instances of RE)-3.25 E F4(RE{n})33.336
537 Q F1 -.195(ex)35.1 G(actly n instances of RE).195 E F4(\(RE\))33.336
552 Q F1 -.195(ex)42.9 G
(pression RE \(parens used for order of operations\)).195 E F4(AB)33.336
567 Q F1 -.195(ex)58.5 G(pression A follo).195 E(wed by e)-.325 E
(xpression B \(concatenation\))-.195 E F4(A|B)33.336 582 Q F1(either e)
50.7 E(xpression A or e)-.195 E(xpression B \(alternation\))-.195 E F4
(^RE)33.336 597 Q F1 -.195(ex)50.7 G(pression RE, b).195 E
(ut only at the start of a line)-.26 E F4(RE$)33.336 612 Q F1 -.195(ex)
50.7 G(pression RE, b).195 E(ut only at end of line)-.26 E 2.506(Note t\
hat to match patterns that literally include special characters such as\
 plus, one)33.336 633 R .419(needs to either escape them with the backs\
lash, or place the pattern inside double quotes.)33.336 648 R .737
(The latter escapes all re)33.336 663 R .738(gular e)-.195 F .738
(xpression operator characters.)-.195 F .738(Some later v)7.238 F .738
(ersions of \215e)-.195 F(x)-.195 E 4.146(include additional re)33.336
678 R 4.146(gular e)-.195 F 4.146
(xpression pattern operators which are deri)-.195 F -.195(ve)-.325 G
7.395(df).195 G 4.145(rom the)-7.395 F .794(Extended Re)33.336 693 R
.794(gular Expression language of Perl.)-.195 F .794
(These operators may not be backw)7.294 F(ards-)-.13 E
(compatible with earlier Fle)33.336 708 Q 3.25(xv)-.195 G
(ersions or with le)-3.445 E(x.)-.195 E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(1/pg 9)
2.25 E(\2512019 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Bold@0 SF(Recognizing T)151.324 120 Q(ok)-1.196 E
(ens with Finite A)-.13 E(utomata)-.65 E/F2 13/Times-Roman@0 SF 1.398
(Let us say that we wish to e)33.336 156 R 1.397
(xamine a string of characters and determine if it is a v)-.195 F(alid)
-.325 E(he)33.336 171 Q(xadecimal literal.)-.195 E 2.08 -1.04(We c)6.5 H
(an write the re)1.04 E(gular e)-.195 E(xpression:)-.195 E/F3 10
/Courier@0 SF(0[xX][0-9A-Fa-f]+)33.336 183 Q F2 1.28(for this.)33.336
198 R 1.28(It means, in narrati)7.78 F -.195(ve)-.325 G 4.53(:").195 G
1.281(the input must consist of the digit 0, the letter x or X,)-4.53 F
(follo)33.336 213 Q(wed by one or more he)-.325 E(xadecimal digits.")
-.195 E 1.15(The typical structure of a program for le)33.336 234 R 1.15
(xical analysis is a)-.195 F F1 1.15(state machine)4.4 F F2 1.15
(which is also)4.4 F(kno)33.336 249 Q .895(wn as a)-.325 F F1 .895
(\214nite automaton)4.145 F F2 7.395(.A)C 4.145(nF)-7.395 G 4.145(Ah)
-5.107 G .896(as a \214nite number of states and a speci\214c initial)
-4.145 F 4.831(state. At)33.336 264 R 1.581
(each state, it considers the ne)4.831 F 1.581
(xt input character and then transitions to a ne)-.195 F(w)-.325 E 1.067
(state based on the current state and the character \(the ne)33.336 279
R 4.318(ws)-.325 G 1.068(tate may be the same as the)-4.318 F 1.711
(current state\).)33.336 294 R 1.711(One or more states are)8.211 F F1
1.71(accepting states)4.96 F F2 1.71(in which we conclude that the)4.96
F(pattern has been matched.)33.336 309 Q 2.08 -1.04(We c)6.5 H
(an diagram an F)1.04 E 3.25(Af)-.962 G(or the abo)-3.25 E .39 -.195
(ve R)-.195 H(E:).195 E 0 0 468 672 -126.75 182 33.336 456.75 PBEGIN
%%BeginDocument: simple-fa.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: simple-fa.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Sep 17 01:21:24 2010
%%For: hak@lex ()
%%BoundingBox: 0 0 672 182
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 672 0 lineto 672 182 lineto closepath clip newpath
-39.8 284.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
7.500 slw
gs  clippath
9416 3153 m 9472 3174 l 9527 3034 l 9456 3135 l 9471 3012 l cp
eoclip
n 9825.0 3225.0 382.4 101.3 -168.7 arcn
gs col0 s gr
 gr

% arrowhead
n 9471 3012 m 9456 3135 l 9527 3034 l  col0 s
% Ellipse
n 4076 3626 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2426 3626 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5837 3626 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9075 3600 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9075 3600 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
3465 3630 m 3465 3570 l 3313 3570 l 3433 3600 l 3313 3630 l cp
eoclip
n 3000 3600 m
 3450 3600 l gs col0 s gr gr

% arrowhead
n 3313 3630 m 3433 3600 l 3313 3570 l  col0 s
% Polyline
gs  clippath
5265 3630 m 5265 3570 l 5113 3570 l 5233 3600 l 5113 3630 l cp
eoclip
n 4650 3600 m
 5250 3600 l gs col0 s gr gr

% arrowhead
n 5113 3630 m 5233 3600 l 5113 3570 l  col0 s
% Polyline
gs  clippath
8415 3630 m 8415 3570 l 8263 3570 l 8383 3600 l 8263 3630 l cp
eoclip
n 6450 3600 m
 8400 3600 l gs col0 s gr gr

% arrowhead
n 8263 3630 m 8383 3600 l 8263 3570 l  col0 s
% Polyline
n 675 1725 m 11850 1725 l 11850 4725 l 675 4725 l
 cp gs col7 s gr 
/Times-Roman-iso ff 300.00 scf sf
2400 3750 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4050 3750 m
gs 1 -1 sc (2) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
3150 3450 m
gs 1 -1 sc (0) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4950 3450 m
gs 1 -1 sc (xX) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5850 3750 m
gs 1 -1 sc (3) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
9075 3750 m
gs 1 -1 sc (4) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10800 3000 m
gs 1 -1 sc (0-9A-Fa-f) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7500 3375 m
gs 1 -1 sc (0-9A-Fa-f) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND .348(The initial state is 1 and accepting states are denoted b\
y a double circle.)33.336 477.75 R(Dra)6.849 E .349(wing the F)-.195 F
(A)-.962 E(follo)33.336 492.75 Q(ws f)-.325 E(airly intuiti)-.13 E -.195
(ve)-.325 G(ly from the RE.).195 E 1.145(Consider the string)33.336
513.75 R/F4 13/Courier@0 SF(0X1)4.395 E F2 7.645(.S)C 1.145
(tarting at state 1, we w)-7.645 F 1.145
(ould match the 0 character and go to)-.13 F .086(state 2.)33.336 528.75
R .087(Then we w)6.587 F .087
(ould match the uppercase X as one of the allo)-.13 F -.13(wa)-.325 G
.087(ble transitions to state).13 F 6.515(3. The)33.336 543.75 R 3.265
(character 1 is an allo)6.515 F -.13(wa)-.325 G 3.265
(ble transition to state 4.).13 F 5.344 -1.04(We h)9.765 H -2.925 -.26
(av e)1.04 H(no)6.774 E 6.514(wr)-.325 G 3.264(eached an)-6.514 F
(accepting state, and the string 0X1 is recognized by the F)33.336
558.75 Q(A.)-.962 E 4.017 -1.04(We h)33.336 579.75 T -2.925 -.26(av e)
1.04 H 1.938(constructed a F)5.448 F 5.188(Aw)-.962 G 1.938
(hich can answer the question: does a string of characters)-5.188 F .787
(match the pattern?)33.336 594.75 R .787(But it is not v)7.287 F .787
(ery useful as a le)-.195 F .786(xical analyzer)-.195 F 7.286(.W)-.715 G
4.036(en)-8.326 G .786(eed to be able to)-4.036 F(match a series of le)
33.336 609.75 Q -.195(xe)-.195 G(mes, not just one.).195 E(No)33.336
630.75 Q 6.628(wl)-.325 G 3.379(et us consider another e)-6.628 F 3.379
(xample in which there are se)-.195 F -.195(ve)-.325 G 3.379(ral re).195
F 3.379(gular e)-.195 F(xpression)-.195 E 3.156
(patterns, each of which describes an allo)33.336 645.75 R -.13(wa)-.325
G 3.156(ble tok).13 F 6.406(en. Our)-.13 F 3.155
(language will consist of)6.406 F .66(decimal inte)33.336 660.75 R .66
(gers and the plus and minus operators.)-.195 F .66
(\(The backslash in the second pattern)7.16 F(belo)33.336 675.75 Q 3.25
(we)-.325 G(scapes the special meaning of the + character\):)-3.25 E F3
([0-9]+)33.336 687.75 Q(\\+)33.336 699.75 Q(-)33.336 711.75 Q F2 2.346
(The job of the le)33.336 726.75 R -.195(xe)-.195 G 5.595(rw).195 G
2.345(ill be to recognize one of these three patterns.)-5.595 F 2.345
(Therefore, our)8.845 F -.195(ove)33.336 741.75 S(rall F).195 E 3.25(Aw)
-.962 G(ill ha)-3.25 E .39 -.195(ve t)-.26 H
(hree accepting states, corresponding to these three patterns:).195 E 0
Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 10)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E 0 0
240 240 -294 294 147.336 414 PBEGIN
%%BeginDocument: alternates.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: alternates.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Jan 26 00:02:50 2007
%%For: hak@lex ()
%%BoundingBox: 0 0 240 294
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 294 moveto 0 0 lineto 240 0 lineto 240 294 lineto closepath clip newpath
-156.1 367.4 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 4950 5400 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4950 5400 450 450 0 360 DrawEllipse gs col0 s gr

% Arc
gs  clippath
5216 3153 m 5272 3174 l 5327 3034 l 5256 3135 l 5271 3012 l cp
eoclip
n 5625.0 3225.0 382.4 101.3 -168.7 arcn
gs col0 s gr
 gr

% arrowhead
n 5271 3012 m 5256 3135 l 5327 3034 l  col0 s
% Ellipse
n 4950 3600 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4950 3600 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 270.00 scf sf
4950 3750 m
gs 1 -1 sc (2) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
6300 3000 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 4950 1950 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4950 1950 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3326 3626 600 600 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
4365 3630 m 4365 3570 l 4213 3570 l 4333 3600 l 4213 3630 l cp
eoclip
n 3900 3600 m
 4350 3600 l gs col0 s gr gr

% arrowhead
n 4213 3630 m 4333 3600 l 4213 3570 l  col0 s
% Polyline
gs  clippath
4530 2413 m 4492 2367 l 4375 2464 l 4487 2411 l 4414 2510 l cp
eoclip
n 3600 3150 m
 4500 2400 l gs col0 s gr gr

% arrowhead
n 4414 2510 m 4487 2411 l 4375 2464 l  col0 s
% Polyline
gs  clippath
4492 4982 m 4530 4936 l 4414 4839 l 4487 4939 l 4375 4885 l cp
eoclip
n 3600 4200 m
 4500 4950 l gs col0 s gr gr

% arrowhead
n 4375 4885 m 4487 4939 l 4414 4839 l  col0 s
/Times-Roman-iso ff 270.00 scf sf
3300 3750 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
4950 2100 m
gs 1 -1 sc (3) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
4950 5550 m
gs 1 -1 sc (4) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
4050 4350 m
gs 1 -1 sc (-) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
3900 2700 m
gs 1 -1 sc (+) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
4200 3450 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF 3.381(Consider the beha)33.336 450 R
3.382(vior of this F)-.26 F 6.632(Aw)-.962 G 3.382
(hen the input stream is 12+34.)-6.632 F 3.382(Should this be)9.882 F
(tok)33.336 465 Q 1.088
(enized as 1/2/+/3/4, or 12/+/34, or perhaps some other w)-.13 F 4.338
(ay? W)-.13 F 4.338(en)-1.04 G 1.088(eed some rules to)-4.338 F
(disambiguate:)33.336 480 Q 3.709<8328>33.336 495 S .459(1\) Re)-3.709 F
.459(gular e)-.195 F .459(xpressions are "greedy)-.195 F 3.71(." The)
-.845 F 3.71(ya)-.195 G -.13(lwa)-3.71 G .46
(ys try to match the longest v).13 F .46(alid string)-.325 F .778
(of characters.)33.336 510 R .778(When the F)7.278 F 4.028(Ai)-.962 G
4.028(si)-4.028 G 4.028(na)-4.028 G 4.028(na)-4.028 G .777
(ccepting state and the ne)-4.028 F .777(xt character forms a v)-.195 F
(alid)-.325 E(transition, that transition is tak)33.336 525 Q
(en and the F)-.13 E 3.25(Ac)-.962 G(ontinues.)-3.25 E 5.787<8328>33.336
540 S 2.537(2\) If the F)-5.787 F 5.787(Ai)-.962 G 5.787(si)-5.787 G
5.787(na)-5.787 G 5.787(na)-5.787 G 2.537(ccepting state b)-5.787 F
2.537(ut the ne)-.26 F 2.537(xt character does not form a v)-.195 F
(alid)-.325 E 2.017(transition, then the string is accepted.)33.336 555
R 2.017(The ne)8.517 F 2.017(xt character is left on the table, and the)
-.195 F(le)33.336 570 Q
(xical analysis will resume at the initial state with that character)
-.195 E(.)-.715 E 4.48<8328>33.336 585 S 1.231(3\) If the F)-4.48 F
4.481(Ai)-.962 G 4.481(sn)-4.481 G 1.231
(ot in an accepting state and the ne)-4.481 F 1.231
(xt character does not form a v)-.195 F(alid)-.325 E .817
(transition, then an error has been detected.)33.336 600 R .816
(There is no tok)7.316 F .816(en pattern which matches the)-.13 F(le)
33.336 615 Q -.195(xe)-.195 G 3.25(me. W).195 F 3.25(ew)-1.04 G
(ill consider error conditions later)-3.25 E(.)-.715 E(No)33.336 645 Q
3.195 -.845(w, L)-.325 H 1.506(et us write a C function which when call\
ed will consume input until a tok).845 F 1.506(en is)-.13 F
(matched, and then return that tok)33.336 660 Q(en.)-.13 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 11)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
8/Courier@0 SF 1.2(#define INIT 1)33.936 117 S 1.2(#define DIGITS 2)
33.936 129 S 1.2(int lex\(\))33.936 153 S({)33.936 165 Q 1.2
(int state,c;)45.936 177 S 1.2(state=INIT;)81.936 201 S 1.2(for\(;;\))
81.936 213 S({)81.936 225 Q 1.2(c=getc\(stdin\);)129.936 237 S 1.2
(switch\(state\))129.936 249 S({)129.936 261 Q 1.2(case INIT:)135.936
273 S 1.2(if \(isdigit\(c\)\))177.936 285 S({)177.936 297 Q 1.2
(state=DIGITS;)225.936 309 S 1.2(break;)225.936 321 S(})177.936 333 Q
1.2(if \(c=='+'\) return PLUS;)177.936 345 S 1.2
(if \(c=='-'\) return MINUS;)177.936 357 S 1.2
(if \(c==EOF\) return EOF;)177.936 369 S 1.2(ERROR;)177.936 381 S 1.2
(case DIGITS:)135.936 393 S 1.2(if \(!isdigit\(c\)\))177.936 405 S({)
177.936 417 Q 1.2(ungetc\(c,stdin\);)225.936 429 S 1.2(return NUMBER;)
225.936 441 S(})177.936 453 Q(})129.936 465 Q(})81.936 477 Q(})33.936
489 Q/F2 13/Times-Roman@0 SF .482(The structure of the le)33.336 510 R
-.195(xe)-.195 G 3.732(rf).195 G .482
(unction in C is an endless loop which consumes a character at)-3.732 F
6.001(at)33.336 525 S 2.751(ime, and adv)-6.001 F 2.751
(ances from state to state based on each character)-.325 F 6.002(,u)-.52
G 2.752(ntil an accepting)-6.002 F .007
(condition is reached and the function returns.)33.336 540 R .006
(When writing a le)6.507 F -.195(xe)-.195 G 3.256(rb).195 G 3.256(yh)
-3.256 G .006(and, it is better to)-3.256 F(gi)33.336 555 Q .487 -.195
(ve t)-.325 H .098
(he states meaningful names as opposed to state 1, state 2, etc.).195 F
.098(Note that states 3 and)6.598 F 3.414(4o)33.336 570 S 3.414(ft)
-3.414 G .164(he F)-3.414 F 3.414(Aa)-.962 G .163(re not de\214ned e)
-3.414 F .163(xplicitly as states b)-.195 F .163
(ut rather the return happens as soon as the)-.26 F .04
(appropriate character is seen.)33.336 585 R .041(This shortcut is allo)
6.541 F -.13(wa)-.325 G .041(ble since states 3 and 4 are accepting).13
F(states with no transitions out.)33.336 600 Q 1.832(It is assumed that)
33.336 621 R/F3 13/Courier@0 SF(PLUS)5.082 E F2(,)A F3(MINUS)5.082 E F2
(and)5.082 E F3(NUMBER)5.082 E F2(ha)5.082 E 2.222 -.195(ve b)-.26 H
1.832(een de\214ned as inte).195 F 1.832(ger constants)-.195 F(else)
33.336 636 Q(where in the program.)-.325 E 1.931
(Note that we return EOF when we ha)33.336 657 R 2.321 -.195(ve r)-.26 H
1.931(eached the end of input.).195 F 1.932(Note that a macro)8.432 F
(ERR)33.336 672 Q 1.123(OR \(not de\214ned here\) is needed for the cas\
e of seeing input which does not match)-.52 F(an)33.336 687 Q 3.25(yr)
-.195 G(ule.)-3.25 E 1.387(As we are reading in digits, when we encount\
er a non-digit, we must use the)33.336 708 R F3(ungetc)4.637 E F2 1.588
(function which pushes the character we had pre)33.336 723 R 1.588
(viously read back to standard input, so)-.325 F 2.294(that the ne)
33.336 738 R 2.294(xt time the le)-.195 F -.195(xe)-.195 G 5.544(ri).195
G 5.544(sc)-5.544 G 2.294(alled, it picks up ag)-5.544 F 2.294
(ain at that character which is the)-.065 F 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 12)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(be)33.336 120 Q .374(ginning of the ne)-.195 F .374
(xt tok)-.195 F .373(en \(rule #2 abo)-.13 F -.195(ve)-.195 G 3.623
(\). This).195 F .373(is called `)3.623 F(`pushback')-.962 E 3.623
('. Another)-.962 F -.13(wa)3.623 G 3.623(yo).13 G(f)-3.623 E .996
(doing the same thing is to k)33.336 135 R .996(eep a global v)-.13 F
.996(ariable, say)-.325 F/F2 13/Courier@0 SF(curchar)4.246 E F1 4.246
(,s)C .996(eed it initially with a)-4.246 F 1.124(call to)33.336 150 R
F2(getc)4.374 E F1 4.374(,a)C 1.124(nd then only call)-4.374 F F2(getc)
4.374 E F1(ag)4.374 E 1.124(ain when we ha)-.065 F 1.513 -.195(ve c)-.26
H 1.123(onsumed it.).195 F 1.123(This is often)7.623 F(called `)33.336
165 Q(`look-ahead.)-.962 E 5.174 -.962('' T)-.91 H
(hese methods are essentially equi).962 E -.325(va)-.325 G(lent.).325 E
1.477(In general, it is necessary for the le)33.336 186 R -.195(xe)-.195
G 4.728(rt).195 G 4.728(ou)-4.728 G 1.478(se push-back / look-ahead.)
-4.728 F 1.478(The standard C)7.978 F .618(library function)33.336 201 R
F2(ungetc)3.868 E F1 .618(is only guaranteed to w)3.868 F .617
(ork for one character)-.13 F 7.117(.W)-.715 G 3.867(ec)-8.157 G .617
(an come up)-3.867 F 3.466(with e)33.336 216 R 3.466(xamples of le)-.195
F 3.466(xical rules, ho)-.195 F(we)-.325 E -.195(ve)-.325 G 4.507 -.52
(r, w).195 H 3.467(hich require more than one character of).52 F
(backing up:)33.336 231 Q/F3 10/Courier@0 SF(clue)33.336 243 Q(clueless)
33.336 255 Q(lest)33.336 267 Q F1 .363
(Let us say the input stream is "cluelest".)33.336 288 R .362(After ha)
6.863 F .362(ving seen "clue", we do not kno)-.26 F 3.612(wi)-.325 G
3.612(fw)-3.612 G(e)-3.612 E .412(should match rule 1 or rule 2.)33.336
303 R 2.493 -1.04(We m)6.912 H .413(ust continue to accept characters.)
1.04 F(No)6.913 E 2.103 -.845(w, a)-.325 H .413(fter ha).845 F(ving)-.26
E 1.243
(seen "clueles", things are looking pretty good for pattern #2, b)33.336
318 R 1.242(ut then we see "cluelest")-.26 F(which ob)33.336 333 Q
(viously doesn')-.195 E 3.25(tm)-.234 G(atch.)-3.25 E .995(In order to \
\214x this, we must introduce more rules which re\214ne our pre)33.336
354 R .996(vious set of three)-.325 F(rules on F)33.336 369 Q 3.25(Ao)
-.962 G(peration:)-3.25 E 4.499<8328>33.336 384 S 1.249(4\) Whene)-4.499
F -.195(ve)-.325 G 4.499(rw).195 G 4.499(er)-4.499 G 1.249
(each an accepting state, we "remember" that state and our place in)
-4.499 F .444(the input stream at the time.)33.336 399 R .444
(Only the v)6.944 F .445
(ery last accepting state is remembered, i.e. this is)-.195 F
(not a stack of states.)33.336 414 Q 7.615<8328>33.336 429 S 4.365
(3A\) If there are no v)-7.615 F 4.364
(alid transitions out of a non-accepting state, b)-.325 F 4.364
(ut we are)-.26 F 3.033(remembering a pre)33.336 444 R 3.033
(vious accepting state, then we return to that state and accept the)
-.325 F 4.604(pattern. The)33.336 459 R 1.354
(input stream is reset to the remembered position, and we "for)4.604 F
1.353(get" that we)-.234 F(ha)33.336 474 Q 1.187 -.195(ve s)-.26 H .797
(een the subsequent characters which led to the dead-end.).195 F .798
(Otherwise pre)7.298 F .798(vious rule)-.325 F
(\(3\) applies and the input string is rejected.)33.336 489 Q .523
(In the e)33.336 510 R .523(xample abo)-.195 F -.195(ve)-.195 G 3.773
(,u).195 G .523(pon seeing the ')-3.773 F .522
(t' in "cluelest", we back up to the accepting state)-.234 F 2.83(for t\
he pattern "clue", and the "les" characters are put back on the table.)
33.336 525 R 2.831(The state)9.331 F .167(machine resumes the ne)33.336
540 R .166
(xt time in the initial state, and the characters "lest" are recognized)
-.195 F(by the third pattern.)33.336 555 Q 1.119
(Backing up creates challenges if the le)33.336 576 R -.195(xe)-.195 G
4.369(ri).195 G 4.369(sm)-4.369 G 1.119
(eant to accept input from a non-seekable)-4.369 F 1.605
(\214le \(e.g. the k)33.336 591 R -.195(ey)-.13 G 4.855(board\). The)
.195 F(le)4.855 E -.195(xe)-.195 G 4.855(rm).195 G 1.605
(ust introduce a b)-4.855 F(uf)-.26 E 1.604(fering layer with a b)-.325
F(uf)-.26 E 1.604(fer lar)-.325 F(ge)-.234 E .003
(enough to back up out of the deepest mess it can get itself into.)
33.336 606 R .003(Note that a programming)9.753 F 3.135(language is usu\
ally designed so that writing a compiler for it is not an e)33.336 621 R
-.195(xe)-.195 G 3.134(rcise in).195 F 8.69(masochism. Examples)33.336
636 R 5.44(such as clue/clueless/lest abo)8.69 F 5.831 -.195(ve a)-.195
H 5.441(re f).195 F 5.441(airly rare, and most)-.13 F 2.662
(languages can be le)33.336 651 R 2.662
(xically analyzed with just a single character of pushback and no)-.195
F(backing-up.)33.336 666 Q/F4 13/Times-Bold@0 SF(NF)232.762 696 Q 3.25
(Av)-1.17 G 3.25(sD)-3.25 G -1.17(FA)-3.25 G F1(No)33.336 732 Q 6.284
(wl)-.325 G 3.034(et us consider another contri)-6.284 F -.195(ve)-.325
G 6.284(de).195 G 3.035(xample which will moti)-6.479 F -.325(va)-.325 G
3.035(te a discussion of).325 F 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 13)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF
(deterministic vs non-deterministic \214nite automata.)33.336 120 Q/F2
10/Courier@0 SF(a[A-Z]+[0-9]*[A-G]+)33.336 132 Q(a[X-Z]+)33.336 144 Q F1
1.261(Our \214rst, intuiti)33.336 159 R 1.65 -.195(ve s)-.325 H 1.26
(tab at dra).195 F 1.26(wing the F)-.195 F 4.51(Af)-.962 G 1.26
(or this system of re)-4.51 F 1.26(gular e)-.195 F 1.26
(xpression patterns)-.195 F(might be:)33.336 174 Q 0 0 468 584 -311.733
389 33.336 506.733 PBEGIN
%%BeginDocument: complex-nfa.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: complex-nfa.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Sep  6 21:58:45 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 584 389
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 389 moveto 0 0 lineto 584 0 lineto 584 389 lineto closepath clip newpath
-71.5 410.4 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 1800 3600 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
1800 3750 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 4200 3600 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
4200 3750 m
gs 1 -1 sc (2) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 6593 3593 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
6593 3743 m
gs 1 -1 sc (3) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 9593 3593 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
9593 3743 m
gs 1 -1 sc (5) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 9593 5543 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9600 5550 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
9593 5693 m
gs 1 -1 sc (6) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 6593 5993 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6600 6000 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
6593 6143 m
gs 1 -1 sc (4) dup sw pop 2 div neg 0 rm  col0 sh gr
% Arc
gs  clippath
7021 3132 m 7053 3183 l 7181 3101 l 7064 3141 l 7148 3050 l cp
eoclip
n 7296.4 3407.1 356.2 105.7 -133.8 arcn
gs col0 s gr
 gr

% arrowhead
n 7148 3050 m 7064 3141 l 7181 3101 l  col0 s
% Arc
gs  clippath
7195 5966 m 7175 6023 l 7319 6074 l 7216 6006 l 7339 6017 l cp
eoclip
n 7125.0 6412.5 419.3 153.4 -79.7 arcn
gs col0 s gr
 gr

% arrowhead
n 7339 6017 m 7216 6006 l 7319 6074 l  col0 s
% Arc
gs  clippath
9721 3017 m 9781 3012 l 9768 2861 l 9749 2984 l 9708 2867 l cp
eoclip
n 10143.8 2896.9 407.0 82.1 165.3 arcn
gs col0 s gr
 gr

% arrowhead
n 9708 2867 m 9749 2984 l 9768 2861 l  col0 s
% Arc
gs  clippath
10195 5516 m 10175 5573 l 10319 5624 l 10216 5556 l 10339 5567 l cp
eoclip
n 10125.0 5962.5 419.3 153.4 -79.7 arcn
gs col0 s gr
 gr

% arrowhead
n 10339 5567 m 10216 5556 l 10319 5624 l  col0 s
% Polyline
gs  clippath
3615 3630 m 3615 3570 l 3463 3570 l 3583 3600 l 3463 3630 l cp
eoclip
n 2400 3600 m
 3600 3600 l gs col0 s gr gr

% arrowhead
n 3463 3630 m 3583 3600 l 3463 3570 l  col0 s
% Polyline
gs  clippath
6015 3630 m 6015 3570 l 5863 3570 l 5983 3600 l 5863 3630 l cp
eoclip
n 4800 3600 m
 6000 3600 l gs col0 s gr gr

% arrowhead
n 5863 3630 m 5983 3600 l 5863 3570 l  col0 s
% Polyline
gs  clippath
5989 5881 m 6031 5839 l 5924 5731 l 5988 5838 l 5881 5774 l cp
eoclip
n 4350 4200 m
 6000 5850 l gs col0 s gr gr

% arrowhead
n 5881 5774 m 5988 5838 l 5924 5731 l  col0 s
% Polyline
gs  clippath
9015 3780 m 9015 3720 l 8863 3720 l 8983 3750 l 8863 3780 l cp
eoclip
n 7200 3750 m
 9000 3750 l gs col0 s gr gr

% arrowhead
n 8863 3780 m 8983 3750 l 8863 3720 l  col0 s
% Polyline
gs  clippath
9570 4965 m 9630 4965 l 9630 4813 l 9600 4933 l 9570 4813 l cp
eoclip
n 9600 4950 m
 9600 4200 l gs col0 s gr gr

% arrowhead
n 9570 4813 m 9600 4933 l 9630 4813 l  col0 s
% Polyline
gs  clippath
8997 5283 m 9028 5232 l 8899 5152 l 8986 5241 l 8868 5203 l cp
eoclip
n 7050 4050 m
 9000 5250 l gs col0 s gr gr

% arrowhead
n 8868 5203 m 8986 5241 l 8899 5152 l  col0 s
/Times-Roman-iso ff 300.00 scf sf
3000 3450 m
gs 1 -1 sc (a) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4650 5100 m
gs 1 -1 sc (X-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7650 2850 m
gs 1 -1 sc (A-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8250 3600 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7950 6600 m
gs 1 -1 sc (X-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5550 3450 m
gs 1 -1 sc (A-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10200 2250 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10050 4650 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10650 6600 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
1350 600 m
gs 1 -1 sc (Rules: a[A-Z]+[0-9]*[A-G]+) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8700 4800 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
1350 915 m
gs 1 -1 sc (           a[X-Z]+) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND .003(If we were to try to implement this F)33.336 527.733 R
3.253(Aa)-.962 G 3.253(saCf)-3.253 G .003(unction we w)-3.253 F .003
(ould stumble upon a problem.)-.13 F .899
(In states 2 and 3, there are multiple transitions for a gi)33.336
542.733 R -.195(ve)-.325 G 4.148(nc).195 G(haracter)-4.148 E 7.398(.T)
-.715 G .898(his type of F)-7.398 F 4.148(Ai)-.962 G(s)-4.148 E(kno)
33.336 557.733 Q 2.53(wn as a)-.325 F/F3 13/Times-Bold@0 SF 2.53
(Non-deterministic Finite A)5.78 F 2.531(utomaton \(NF)-.65 F(A\))-1.17
E F1 2.531(and does not lend itself to)5.781 F(ef)33.336 572.733 Q 3.112
(\214cient implementation.)-.325 F 5.192 -1.04(We c)9.612 H 3.112
(ould follo)1.04 F 6.361(wt)-.325 G 3.111(his NF)-6.361 F 6.361(Aa)-.962
G 3.111(nd implement it using a path)-6.361 F 1.199
(searching algorithm, i.e. try one path and if it leads no)33.336
587.733 R 1.2(where, back up and try the other)-.325 F 3.25(path. T)
33.336 602.733 R 3.25(od)-1.04 G 3.25(ot)-3.25 G
(his requires a stack and potentially w)-3.25 E(astes a lot of time e)
-.13 E(xploring dead-ends.)-.195 E(Thankfully)33.336 623.733 Q 4.448(,i)
-.845 G 4.448(ti)-4.448 G 4.448(sap)-4.448 G 1.198(roperty of an)-4.448
F 4.448(yN)-.195 G 3.122 -.962(FA t)-4.448 H 1.198
(hat it can be transformed into a).962 F F3(Deterministic)4.447 E 1.321
(Finite A)33.336 638.733 R 1.321(utomaton \(DF)-.65 F(A\))-1.17 E F1
1.321(\(i.e. the sort of F)4.571 F 4.571(Aw)-.962 G 1.321(hich we ha)
-4.571 F 1.712 -.195(ve b)-.26 H 1.322(een using already\).).195 F(The)
7.822 E(distinction between the tw)33.336 653.733 Q 3.25(oi)-.13 G 3.25
(st)-3.25 G(hat:)-3.25 E 4.042(\203AN)33.336 668.733 S 2.716 -.962(FA m)
-4.042 H .792(ay ha).962 F 1.182 -.195(ve m)-.26 H .791
(ultiple transitions from a gi).195 F -.195(ve)-.325 G 4.041(ns).195 G
.791(tate for a gi)-4.041 F -.195(ve)-.325 G 4.041(nc).195 G(haracter)
-4.041 E 7.291(.A)-.715 G(DF)-3.25 E(A)-.962 E(can ha)33.336 683.733 Q
.39 -.195(ve o)-.26 H(nly one transition per character).195 E(.)-.715 E
3.25(\203AN)33.336 698.733 S 1.924 -.962(FA m)-3.25 H(ay ha).962 E .39
-.195(ve a t)-.26 H(ransition on).195 E/F4 13/Symbol-Slanted SF(e)3.25 E
F1 3.25(,t)C(he empty character)-3.25 E 6.5(.T)-.715 G(his is not allo)
-6.5 E(wed for a DF)-.325 E(A.)-.962 E 2.955 -1.04(We j)33.336 728.733 T
.875(ust need to introduce some additional states which encode informat\
ion about where)1.04 F(we ha)33.336 743.733 Q .39 -.195(ve a)-.26 H
(lready been.).195 E(Here is the DF)6.5 E 3.25(Af)-.962 G(or the abo)
-3.25 E .39 -.195(ve s)-.195 H(et of tw).195 E 3.25(or)-.13 G(ules:)
-3.25 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 14)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E 0 0
468 584 -311.733 389 33.336 431.733 PBEGIN
%%BeginDocument: complex-dfa.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: complex-dfa.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Jan 29 20:34:57 2015
%%For: hak@lex ()
%%BoundingBox: 0 0 584 389
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 389 moveto 0 0 lineto 584 0 lineto 584 389 lineto closepath clip newpath
-71.5 410.4 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 1800 3600 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
1800 3750 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 4200 3600 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
4200 3750 m
gs 1 -1 sc (2) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 6593 3593 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
6593 3743 m
gs 1 -1 sc (3) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 6593 5993 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6600 6000 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
6593 6143 m
gs 1 -1 sc (4) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 6593 1193 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6600 1200 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
6593 1343 m
gs 1 -1 sc (7) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 9593 3593 600 600 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
9593 3743 m
gs 1 -1 sc (5) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 9593 5543 600 600 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9600 5550 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman-iso ff 300.00 scf sf
9593 5693 m
gs 1 -1 sc (6) dup sw pop 2 div neg 0 rm  col0 sh gr
% Arc
gs  clippath
7017 759 m 7076 770 l 7103 621 l 7053 734 l 7044 610 l cp
eoclip
n 7425.0 750.0 375.0 126.9 180.0 arcn
gs col0 s gr
 gr

% arrowhead
n 7044 610 m 7053 734 l 7103 621 l  col0 s
% Arc
gs  clippath
6719 2986 m 6757 3032 l 6874 2935 l 6763 2989 l 6836 2889 l cp
eoclip
n 6375.0 2437.5 676.0 -70.6 56.3 arc
gs col0 s gr
 gr

% arrowhead
n 6836 2889 m 6763 2989 l 6874 2935 l  col0 s
% Arc
gs  clippath
6626 1820 m 6600 1766 l 6463 1830 l 6585 1807 l 6488 1884 l cp
eoclip
n 6825.0 2437.5 676.0 123.7 -109.4 arc
gs col0 s gr
 gr

% arrowhead
n 6488 1884 m 6585 1807 l 6463 1830 l  col0 s
% Arc
gs  clippath
7021 3132 m 7053 3183 l 7181 3101 l 7064 3141 l 7148 3050 l cp
eoclip
n 7296.4 3407.1 356.2 105.7 -133.8 arcn
gs col0 s gr
 gr

% arrowhead
n 7148 3050 m 7064 3141 l 7181 3101 l  col0 s
% Arc
gs  clippath
7195 5966 m 7175 6023 l 7319 6074 l 7216 6006 l 7339 6017 l cp
eoclip
n 7125.0 6412.5 419.3 153.4 -79.7 arcn
gs col0 s gr
 gr

% arrowhead
n 7339 6017 m 7216 6006 l 7319 6074 l  col0 s
% Arc
gs  clippath
6031 1361 m 5990 1317 l 5880 1421 l 5988 1361 l 5921 1465 l cp
eoclip
n 7825.0 3387.5 2735.3 127.8 -131.9 arc
gs col0 s gr
 gr

% arrowhead
n 5921 1465 m 5988 1361 l 5880 1421 l  col0 s
% Arc
gs  clippath
9721 3017 m 9781 3012 l 9768 2861 l 9749 2984 l 9708 2867 l cp
eoclip
n 10143.8 2896.9 407.0 82.1 165.3 arcn
gs col0 s gr
 gr

% arrowhead
n 9708 2867 m 9749 2984 l 9768 2861 l  col0 s
% Arc
gs  clippath
10195 5516 m 10175 5573 l 10319 5624 l 10216 5556 l 10339 5567 l cp
eoclip
n 10125.0 5962.5 419.3 153.4 -79.7 arcn
gs col0 s gr
 gr

% arrowhead
n 10339 5567 m 10216 5556 l 10319 5624 l  col0 s
% Polyline
gs  clippath
3615 3630 m 3615 3570 l 3463 3570 l 3583 3600 l 3463 3630 l cp
eoclip
n 2400 3600 m
 3600 3600 l gs col0 s gr gr

% arrowhead
n 3463 3630 m 3583 3600 l 3463 3570 l  col0 s
% Polyline
gs  clippath
6015 3630 m 6015 3570 l 5863 3570 l 5983 3600 l 5863 3630 l cp
eoclip
n 4800 3600 m
 6000 3600 l gs col0 s gr gr

% arrowhead
n 5863 3630 m 5983 3600 l 5863 3570 l  col0 s
% Polyline
gs  clippath
5989 5881 m 6031 5839 l 5924 5731 l 5988 5838 l 5881 5774 l cp
eoclip
n 4350 4200 m
 6000 5850 l gs col0 s gr gr

% arrowhead
n 5881 5774 m 5988 5838 l 5924 5731 l  col0 s
% Polyline
gs  clippath
9015 3780 m 9015 3720 l 8863 3720 l 8983 3750 l 8863 3780 l cp
eoclip
n 7200 3750 m
 9000 3750 l gs col0 s gr gr

% arrowhead
n 8863 3780 m 8983 3750 l 8863 3720 l  col0 s
% Polyline
gs  clippath
6630 4185 m 6570 4185 l 6570 4337 l 6600 4217 l 6630 4337 l cp
eoclip
n 6600 5400 m
 6600 4200 l gs col0 s gr gr

% arrowhead
n 6630 4337 m 6600 4217 l 6570 4337 l  col0 s
% Polyline
gs  clippath
9140 3182 m 9181 3138 l 9070 3035 l 9138 3139 l 9029 3079 l cp
eoclip
n 7200 1350 m
 9150 3150 l gs col0 s gr gr

% arrowhead
n 9029 3079 m 9138 3139 l 9070 3035 l  col0 s
% Polyline
gs  clippath
9570 4965 m 9630 4965 l 9630 4813 l 9600 4933 l 9570 4813 l cp
eoclip
n 9600 4950 m
 9600 4200 l gs col0 s gr gr

% arrowhead
n 9570 4813 m 9600 4933 l 9630 4813 l  col0 s
% Polyline
gs  clippath
9179 4065 m 9144 4016 l 9021 4105 l 9137 4060 l 9056 4154 l cp
eoclip
n 7050 5550 m
 9150 4050 l gs col0 s gr gr

% arrowhead
n 9056 4154 m 9137 4060 l 9021 4105 l  col0 s
/Times-Roman-iso ff 300.00 scf sf
3000 3450 m
gs 1 -1 sc (a) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4650 5100 m
gs 1 -1 sc (X-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8100 600 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7350 2250 m
gs 1 -1 sc (H-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5850 2700 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7650 2850 m
gs 1 -1 sc (H-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8250 3600 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7050 4950 m
gs 1 -1 sc (H-W) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7950 6600 m
gs 1 -1 sc (X-Z) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5550 3450 m
gs 1 -1 sc (A-W) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5250 1950 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8250 1950 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10200 2250 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10050 4650 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
10650 6600 m
gs 1 -1 sc (A-G) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
8400 4350 m
gs 1 -1 sc (0-9) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
1350 600 m
gs 1 -1 sc (Rules: a[A-Z]+[0-9]*[A-G]+) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
1350 915 m
gs 1 -1 sc (            a[X-Z]+) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF .008(There are only tw)33.336 452.733 R
3.258(or)-.13 G .008(ules, b)-3.258 F .008
(ut there are 3 accepting states.)-.26 F .007(This DF)6.508 F 3.257(Ai)
-.962 G 3.257(sn)-3.257 G .007(ot intuiti)-3.257 F -.195(ve)-.325 G
3.257(,a).195 G .007(nd it)-3.257 F 2.548(might be dif)33.336 467.733 R
2.548(\214cult to understand by casual e)-.325 F 2.548
(xamination the set of re)-.195 F 2.548(gular e)-.195 F(xpressions)-.195
E .19(which it w)33.336 482.733 R .19(as intended to match.)-.13 F
(Thankfully)6.69 E 3.439(,t)-.845 G .189(his is a contri)-3.439 F -.195
(ve)-.325 G 3.439(de).195 G .189(xample, and most le)-3.634 F(xical)
-.195 E 6.608(rules of most programming languages lend themselv)33.336
497.733 R 6.609(es to straightforw)-.195 F 6.609(ard DF)-.13 F(A)-.962 E
(construction.)33.336 512.733 Q/F2 13/Times-Bold@0 SF(Lex/Flex)243.143
542.733 Q F1 3.106(Sometimes it is desirable to hand-code the le)33.336
578.733 R 3.106(xical analyzer)-.195 F 6.356(,e)-.52 G 3.106
(specially if the source)-6.356 F .503(language is simple.)33.336
593.733 R .503(But in more comple)7.003 F .503(x, real-w)-.195 F .503
(orld languages such as C, a hand-coded)-.13 F(le)33.336 608.733 Q -.195
(xe)-.195 G 3.25(ri).195 G 3.25(st)-3.25 G(edious and prone to error)
-3.25 E(.)-.715 E -.195(Fo)33.336 629.733 S(rtunately).195 E 3.703(,t)
-.845 G .453(here are algorithms to tak)-3.703 F 3.702(eas)-.13 G .452
(et of re)-3.702 F .452(gular e)-.195 F .452
(xpressions and transform it into)-.195 F 4.437(aD)33.336 644.733 S
-.962(FA)-4.437 G 7.687(.T).962 G 1.187(he "Dragon" te)-7.687 F 1.187
(xtbook sho)-.195 F 1.188(ws that)-.325 F/F3 13/Times-Italic@0 SF(any)
4.438 E F1 1.188(set of re)4.438 F 1.188(gular e)-.195 F 1.188
(xpressions can be easily)-.195 F .025(translated into an NF)33.336
659.733 R 3.275(A\()-.962 G .025(section 3.6\), and further sho)-3.275 F
.025(ws that an)-.325 F 3.275(yN)-.195 G 1.949 -.962(FA t)-3.275 H .025
(hus constructed can).962 F 1.19(be transformed into a DF)33.336 674.733
R 4.44(A\()-.962 G 1.19(section 3.7\), re)-4.44 F -.065(ga)-.195 G 1.191
(rdless of the number or comple).065 F 1.191(xity of the)-.195 F
(patterns.)33.336 689.733 Q 1.981
(Therefore, a program can be written which tak)33.336 710.733 R 1.981
(es the set of re)-.13 F 1.98(gular e)-.195 F 1.98(xpressions of the)
-.195 F .043(source language as an input, and constructs a DF)33.336
725.733 R 3.293(As)-.962 G .043(tate machine in the form of a function)
-3.293 F .591(which can be called.)33.336 740.733 R .591
(This program is an e)7.091 F .59
(xample of a code generator in that it outputs a)-.195 F 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 15)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(high-le)33.336 120 Q -.195(ve)-.325 G 4.821(ll).195
G 1.571(anguage \(C\) which is then intended to be compiled in conjunct\
ion with the)-4.821 F(rest of the compiler)33.336 135 Q(.)-.715 E .632
(The de-f)33.336 156 R .632(acto choice is the)-.13 F/F2 13/Courier@0 SF
(lex)3.882 E F1 .631(program, which has been a)3.882 F -.325(va)-.26 G
.631(ilable on UNIX systems for).325 F(man)33.336 171 Q 4.962(yy)-.195 G
4.962(ears. An)-4.962 F 1.713(open-source, enhanced v)4.962 F 1.713
(ersion called)-.195 F F2(flex)4.963 E F1 1.713(is used on most modern,)
4.963 F .117(open-source UNIX-lik)33.336 186 R 3.367(eo)-.13 G .117
(perating systems.)-3.367 F(Ag)6.617 E .117
(ain, the reader is referred to the man pages)-.065 F 3.517(for \215e)
33.336 201 R 6.767(xa)-.195 G 3.517
(nd online tutorials for a complete discussion.)-6.767 F(Belo)10.017 E
6.767(wi)-.325 G 6.767(sp)-6.767 G 3.517(resented a brief)-6.767 F -.195
(ove)33.336 216 S(rvie).195 E -.845(w.)-.325 G(Fle)33.336 237 Q 4.376
(xa)-.195 G 1.126(ccepts as input a speci\214cation \214le with a)-4.376
F F2(.l)4.376 E F1 -.195(ex)4.376 G 4.376(tension. The).195 F 1.125
(meat of this \214le is a)4.375 F .754(series of rules \(e)33.336 252 R
.754(xpressed as re)-.195 F .754(gular e)-.195 F .754
(xpressions\) and associated actions to e)-.195 F -.195(xe)-.195 G .754
(cute when).195 F(the rule matches.)33.336 267 Q(Here is an e)6.5 E
(xample of a simple le)-.195 E -.195(xe)-.195 G(r:).195 E/F3 10
/Courier@0 SF(%option noyywrap)33.336 279 Q(%{)33.336 291 Q
(#define NUMBER 1)33.336 303 Q(#define PLUS 2)33.336 315 Q
(#define MINUS 3)33.336 327 Q(int yylval;)33.336 351 Q(%})33.336 363 Q
(%%)33.336 375 Q 73.2([0-9]+ {yylval=atoi\(yytext\);return)33.336 387 R
(NUMBER;})6 E 97.2(\\+ {return)33.336 399 R(PLUS;})6 E 109.2(-{)33.336
411 S(return MINUS;})-109.2 E 103.2(.{)39.336 423 S
(fprintf\(stderr,"Error: unknown token %s\\n",yytext\);})-103.2 E(%%)
33.336 471 Q(main\(\))33.336 495 Q({)33.336 507 Q(int t;)39.336 519 Q
(while \(t=yylex\(\)\))90.936 531 Q({)90.936 543 Q(switch\(t\))96.936
555 Q({)96.936 567 Q(case NUMBER: printf\("NUMBER: %d\\n",yylval\);)
148.536 579 Q(break;)263.736 591 Q
(case PLUS: printf\("PLUS\\n"\);break;)148.536 603 Q
(case MINUS:printf\("MINUS\\n"\);break;)148.536 615 Q(})96.936 627 Q(})
90.936 639 Q(printf\("EOF\\n"\);)90.936 651 Q(})33.336 663 Q F1(Le)
33.336 684 Q(x/\215e)-.195 E 5.606(xg)-.195 G 2.356
(enerates a \214le, which is by def)-5.606 F 2.356(ault called)-.13 F F2
(lex.yy.c)5.606 E F1 8.856(.I)C 5.606(tc)-8.856 G 2.356
(ontains a single)-5.606 F 1.585(function named)33.336 699 R F2(yylex)
4.835 E F1 1.585(and se)4.835 F -.195(ve)-.325 G 1.585
(ral static, global v).195 F 1.585(ariables all of which be)-.325 F
1.585(gin with the)-.195 F(pre\214x)33.336 714 Q F2(yy)3.3 E F1 6.55(.T)
C .05(hese names can be changed to a)-6.55 F -.26(vo)-.26 G .049
(id con\215ict if needed, b).26 F .049(ut as there is usually)-.26 F
3.147(just one le)33.336 729 R 3.148
(xical analyzer in the compiler program, it is usually not necessary)
-.195 F 9.648(.I)-.845 G 6.398(ti)-9.648 G(s)-6.398 E .72
(possible to include C code in the)33.336 744 R F2(.l)3.97 E F1 .719
(\214le which will be inlined ahead of the de\214nition of)3.97 F 0 Cg
EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 16)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(the)33.336 120 Q/F2 13/Courier@0 SF(yylex\(\))5.394
E F1 5.394(function. W)5.394 F 5.394(es)-1.04 G 2.144(ee an e)-5.394 F
2.144(xample of that abo)-.195 F 2.534 -.195(ve s)-.195 H 2.144
(urrounded by).195 F F2(%{)5.394 E F1(and)5.394 E F2(%})5.395 E F1
(delimiters.)33.336 135 Q 1.342(The function)33.336 156 R F2(yylex\(\))
4.592 E F1 1.342(consumes input characters until a tok)4.592 F 1.342
(en is matched \(or EOF is)-.13 F(reached\).)33.336 171 Q F2(yylex\(\))
8.204 E F1 1.704(returns the inte)4.954 F 1.704(ger tok)-.195 F 1.704
(en code, or 0 on EOF)-.13 F 8.204(.B)-1.04 G(ecause)-8.204 E F2
(yylex\(\))4.955 E F1 2.569(maintains hidden static global v)33.336 186
R 2.569(ariables, the ne)-.325 F 2.569
(xt time it is called, it simply resumes)-.195 F(where it left of)33.336
201 Q(f.)-.325 E(Normally)33.336 222 Q 8.175(,t)-.845 G 4.926(he le)
-8.175 F -.195(xe)-.195 G 8.176(ri).195 G 8.176(su)-8.176 G 4.926
(sed in conjunction with a parser which e)-8.176 F 4.926(xpects inte)
-.195 F(gers)-.195 E .634(representing tok)33.336 237 R .634
(en classes as the return v)-.13 F 3.883(alue. In)-.325 F .633(the e)
3.883 F .633(xample abo)-.195 F -.195(ve)-.195 G 3.883(,w).195 G 3.883
(ea)-3.883 G .633(re using tok)-3.883 F(en)-.13 E .329(class v)33.336
252 R .329(alues 1, 2 and 3 to represent the three possible tok)-.325 F
3.58(ens. In)-.13 F .33(general it is bad practice)3.58 F 3.931
(to hard-code numbers lik)33.336 267 R 7.181(et)-.13 G 3.93
(his, and in reading the documentation for le)-7.181 F(x/\215e)-.195 E
7.18(xa)-.195 G(nd)-7.18 E .672
(yacc/bison \(the parser generator\) you')33.336 282 R .672(ll see ho)
-.13 F 3.923(wt)-.325 G 3.923(oa)-3.923 G .673
(utomatically assign symbolic names)-3.923 F .557(for these tok)33.336
297 R .557(en class inte)-.13 F 3.807(gers. In)-.195 F .557(the e)3.807
F .557(xample abo)-.195 F -.195(ve)-.195 G 3.807(,w).195 G 3.807(eh)
-3.807 G -2.925 -.26(av e)-3.807 H .557(included #de\214ne constants)
4.067 F(to create symbolic names for these tok)33.336 312 Q
(en class numbers.)-.13 E(Normally)33.336 333 Q(,)-.845 E F2(lex.yy.c)
7.229 E F1 3.979(is compiled and link)7.229 F 3.979(ed ag)-.13 F 3.979
(ainst other C source code, which)-.065 F 1.052
(contains main\(\) and other support functions.)33.336 348 R 1.052
(In the e)7.552 F 1.052(xample abo)-.195 F -.195(ve)-.195 G 4.302(,t)
.195 G 1.052(he code for main\(\))-4.302 F 1.043(has been placed in the)
33.336 363 R F2(.l)4.293 E F1 4.293(\214le. Ev)4.293 F 1.044
(erything after the second)-.195 F F2(%%)4.294 E F1 1.044
(delimiter will be copied)4.294 F -.195(ve)33.336 378 S(rbatim into).195
E F2(lex.yy.c)3.25 E F1 3.25(,a)C(fter the de\214nition of)-3.25 E F2
(yylex\(\))3.25 E F1(.)A 2.642(Between the \214rst and second)33.336 399
R F2(%%)5.892 E F1 2.642(delimiters are the re)5.892 F 2.642(gular e)
-.195 F 2.642(xpression patterns to be)-.195 F 4.037(recognized. After)
33.336 414 R .787
(each pattern, C code may be speci\214ed within curly braces.)4.037 F
.787(This code)7.287 F(will be placed into)33.336 429 Q F2(lex.yy.c)3.25
E F1(such that it is e)3.25 E -.195(xe)-.195 G
(cuted when the pattern is matched.).195 E 1.065
(The automatically generated le)33.336 450 R -.195(xe)-.195 G 4.314(ri)
.195 G 4.314(st)-4.314 G 1.064
(housands of lines long and not meant to be edited)-4.314 F 3.494
(by hand.)33.336 465 R 6.744(Ap)9.994 G 3.494
(seudo-code outline of the yyle)-6.744 F 6.744(xf)-.195 G 3.494
(unction follo)-6.744 F 3.495(ws, with a lot of stuf)-.325 F(f)-.325 E
(remo)33.336 480 Q -.195(ve)-.195 G(d:).195 E 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 17)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
8/Courier@0 SF 1.2(int yylex\(\))33.936 117 S({)33.936 129 Q 1.2(AGAIN:)
39.936 153 S 1.2(int yy_current_state=yy_start;)81.936 165 S 1.2
(//1 unless start conditions)60 G 12 1.2
(yy_cp=yy_last_accepting_cpos; //Resume)129.936 177 T 1.2
(from last position)6 G 1.2(c=get_next_character_from_buffer\(\);)
129.936 189 S 1.2
(while \( \(yy_current_state = yy_nxt[yy_current_state][c]\) > 0 \))
129.936 201 S({)177.936 213 Q 1.2(if \( yy_accept[yy_current_state] \))
177.936 225 S({)225.936 237 Q 1.2(/* Remember last accepting state */)
273.936 249 S 1.2(yy_last_accepting_state = yy_current_state;)225.936
261 S 1.2(yy_last_accepting_cpos = yy_cp;)225.936 273 S(})225.936 285 Q
1.2(c=get_next_character_from_buffer\(\);)177.936 309 S(})177.936 321 Q
1.2(yy_current_state=yy_last_accepting_state;)129.936 345 S 1.2
(yy_act = yy_accept[yy_current_state];)129.936 357 S 1.2
(/*yytext has been set up with NUL terminator from start)129.936 369 S
1.2(of match to yy_last_accepting_cpos */)141.936 381 S 1.2
(switch \( yy_act \))129.936 393 S 1.2(//Which rule)42 G({)129.936 405 Q
1.2(case 1:)135.936 417 S 1.2({...embedded action for rule 1....})
177.936 429 S 1.2(break;)177.936 441 S 1.2(case 2:)135.936 453 S 1.2
({...embedded action for rule 2...})177.936 465 S 1.2(// etc)129.936 477
S 1.2(default:)135.936 489 S 1.2(//fall-through)177.936 501 S(})129.936
513 Q 1.2(// No explicit return in action, or no valid action and need \
to back up)45.936 525 S 1.2(goto AGAIN;)39.936 537 S(})33.936 549 Q/F2
13/Times-Roman@0 SF 2.077(The embedded actions are copied v)33.336 570 R
2.077(erbatim from the)-.195 F/F3 13/Courier@0 SF -1.8(.l)4.427 G F2
2.076(\214le to)6.226 F F3 -1.8(lex.yy.c)4.426 G F2 8.576<2e8d>.9 G
2.466 -.195(ex d)-8.576 H(oesn').195 E(t)-.234 E 2.223(really kno)33.336
585 R 5.473(wa)-.325 G -.195(ny)-5.473 G 2.223
(thing about C syntax, and will not catch an).195 F 5.473(yCl)-.195 G
2.223(anguage errors here.)-5.473 F(The)33.336 600 Q 4.019(yw)-.195 G
.768(ill not be reported until one tries to compile)-4.019 F F3 -1.8
(lex.yy.c)3.118 G F2 7.268(.N).9 G .768(ote that a)-7.268 F F3 -1.8
(return)3.118 G F2 .768(of the)4.918 F(tok)33.336 615 Q .919
(en class code is e)-.13 F .92
(xpected in each action which recognizes a v)-.195 F .92(alid tok)-.325
F .92(en \(b)-.13 F .92(ut read the)-.26 F 6.27
(documentation about error reco)33.336 630 R -.195(ve)-.195 G(ry).195 E
9.52(,a)-.845 G 6.27(nd more adv)-9.52 F 6.27(anced features such as)
-.325 F/F4 13/Times-Italic@0 SF(start)9.519 E(conditions)33.336 645 Q F2
(\).)A 1.03(The string)33.336 666 R F3 -1.8(yytext)3.38 G F2 1.031(is a)
5.18 F -.325(va)-.26 G 1.031
(ilable in an action and contains the \(nul-terminated\) contents of)
.325 F(the actual characters matched \(the le)33.336 681 Q -.195(xe)
-.195 G(me\).).195 E .805(The e)33.336 702 R .805(xample abo)-.195 F
1.195 -.195(ve i)-.195 H .805(llustrates the processing of tok).195 F
.805(en semantic v)-.13 F 4.055(alues. W)-.325 F 4.055(ew)-1.04 G .805
(ill see that)-4.055 F 1.673(yacc/bison e)33.336 717 R 1.673
(xpect these v)-.195 F 1.673(alues to be passed in a global v)-.325 F
1.673(ariable called)-.325 F F3 -1.8(yylval)4.023 G F2 8.173(.I).9 G
4.924(nt)-8.173 G(his)-4.924 E -.195(ex)33.336 732 S .277
(ample, it is of type).195 F F3 -1.8(int)2.627 G F2 3.527(,b).9 G .276
(ut in a practical compiler)-3.787 F 3.526(,i)-.52 G 3.526(tw)-3.526 G
.276(ill be a much more complicated)-3.526 F 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 18)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(struct or union.)33.336 120 Q .043(When le)33.336
141 R(x/\215e)-.195 E 3.293(xs)-.195 G .043
(ees a character or characters which do not form a v)-3.293 F .044
(alid le)-.325 F -.195(xe)-.195 G .044(me, the def).195 F(ault)-.13 E
(beha)33.336 156 Q 2.928
(vior is to ignore them and continue accepting input.)-.26 F 2.928
(The in)9.428 F -.325(va)-.52 G 2.928(lid characters are).325 F .156
(printed to stdout.)33.336 171 R .156(This is a v)6.656 F .156(ery anno)
-.195 F .156(ying def)-.13 F .156
(ault, and thus the last pattern in the e)-.13 F(xample)-.195 E(abo)
33.336 186 Q .413 -.195(ve i)-.195 H 3.273(st).195 G .023
(here to match an)-3.273 F 3.273(yc)-.195 G .023
(haracter and report it as an error)-3.273 F 6.522(.l)-.715 G -.195(ex)
-6.522 G(/\215e).195 E 3.272(xs)-.195 G .022(peci\214es that when)-3.272
F 2.909(multiple patterns match the input, the longest match wins.)
33.336 201 R 2.909(If that doesn')9.409 F 6.159(ts)-.234 G 2.909
(ettle the)-6.159 F(matter)33.336 216 Q 3.643(,t)-.52 G .393
(hen the pattern de\214ned \214rst in the)-3.643 F/F2 13/Courier@0 SF
-1.8(.l)2.742 G F1 .392(\214le wins.)4.542 F .392
(Thus the single dot abo)6.892 F -.195(ve)-.195 G 3.642(,w).195 G(hich)
-3.642 E .69(matches an)33.336 231 R 3.94(yc)-.195 G(haracter)-3.94 E
3.94(,h)-.52 G .69(as the least priority)-3.94 F 3.941(,a)-.845 G .691
(nd there is no danger that the rule will \214re)-3.941 F(erroneously)
33.336 246 Q 3.25(,e)-.845 G(.g. when the plus character should ha)-3.25
E .39 -.195(ve b)-.26 H(een recognized.).195 E 2.056(There are man)
33.336 267 R 5.306<798d>-.195 G 2.056(ags to control the le)-5.306 F
-.195(ve)-.325 G 5.306(lo).195 G 5.306(fo)-5.306 G 2.056
(ptimization which \215e)-5.306 F 5.306(xp)-.195 G 2.055
(erforms, and to)-5.306 F(trade-of)33.336 282 Q 4.479(fb)-.325 G 1.229
(etween table size and ef)-4.479 F(\214cienc)-.325 E 6.169 -.845(y. F)
-.195 H 1.229(or e).65 F 1.229(xample, in most real-w)-.195 F 1.23
(orld languages,)-.13 F .121
(there are broad ranges of characters which are equi)33.336 297 R -.325
(va)-.325 G .12(lent in terms of the le).325 F -.195(xe)-.195 G 3.37
(r\().195 G .12(such as A-)-3.37 F 3.556(Z\). One)33.336 312 R .307
(option \(which is enabled by def)3.556 F .307
(ault\) causes the generated le)-.13 F -.195(xe)-.195 G 3.557(rt).195 G
3.557<6f8c>-3.557 G .307(rst pass each)-3.557 F .968
(character through an equi)33.336 327 R -.325(va)-.325 G(lenc).325 E
4.218(yc)-.195 G .968(lass table.)-4.218 F .967
(The resulting, smaller inte)7.467 F .967(ger is then used)-.195 F
(for the tables.)33.336 342 Q .492(The user of \215e)33.336 363 R 3.742
(xc)-.195 G .492(an enable options which gi)-3.742 F .882 -.195(ve ve)
-.325 H .492(rbose deb).195 F .493(ugging output and this can be)-.26 F
(useful in understanding the algorithm which \215e)33.336 378 Q 3.25(xu)
-.195 G(ses to construct its tables.)-3.25 E .828
(The student is encouraged to try se)33.336 399 R -.195(ve)-.325 G .828
(ral e).195 F .828(xamples such as the one abo)-.195 F 1.217 -.195(ve i)
-.195 H 4.077(nl).195 G -.195(ex)-4.077 G(/\215e).195 E .827(x, and)
-.195 F(to e)33.336 414 Q(xamine the)-.195 E F2 -1.8(lex.yy.c)2.35 G F1
(output \214le.)4.15 E 1.477
(Some compiler writers prefer to write the le)33.336 435 R -.195(xe)
-.195 G 4.727(rb).195 G 4.727(yh)-4.727 G 1.478(and because it of)-4.727
F 1.478(fers \214ner control,)-.325 F 1.402
(especially in error cases, and because for man)33.336 450 R 4.652(yp)
-.195 G 1.402(rogramming languages, the le)-4.652 F -.195(xe)-.195 G
4.651(ri).195 G(sn')-4.651 E(t)-.234 E 1.053
(really that bad to code correctly)33.336 465 R 7.553(.F)-.845 G(le)
-7.553 E 4.303(xg)-.195 G 1.053(enerates f)-4.303 F 1.053(airly ef)-.13
F 1.053(\214cient le)-.325 F -.195(xe)-.195 G 1.053(rs, and it is unlik)
.195 F(ely)-.13 E(that hand-coding the le)33.336 480 Q -.195(xe)-.195 G
3.25(rw).195 G(ill generate an)-3.25 E 3.25(ys)-.195 G
(igni\214cant performance impro)-3.25 E -.195(ve)-.195 G(ment.).195 E/F3
13/Times-Bold@0 SF(Symbol T)167.795 510 Q(ables and Reser)-1.196 E -.13
(ve)-.13 G 3.25(dW).13 G(ords)-4.225 E F1 3.509
(Most programming languages ha)33.336 546 R -.195(ve)-.26 G F3 -.234(re)
6.954 G(ser).234 E -.13(ve)-.13 G 6.759(dw).13 G(ords)-6.889 E F1 6.759
(,s)C 3.509(uch as)-6.759 F F2 -1.8(if)5.859 G F1(,).9 E F2 -1.8(break)
5.859 G F1 6.759(,e).9 G 6.759(tc. These)-6.759 F(reserv)33.336 561 Q
1.037(ed w)-.195 F 1.037(ords also, generally)-.13 F 4.287(,m)-.845 G
1.038(atch the same re)-4.287 F 1.038(gular e)-.195 F 1.038
(xpression patterns as identi\214ers)-.195 F .255
(\(or are a subset of them\).)33.336 576 R 2.335 -1.04(To t)6.755 H .255
(he parser)1.04 F 3.505(,w)-.52 G .255(hich will recei)-3.505 F .644
-.195(ve a t)-.325 H(ok).195 E .254(en stream from the le)-.13 F -.195
(xe)-.195 G -.52(r,).195 G 3.331(it is rather important to kno)33.336
591 R 6.582(ww)-.325 G 3.332
(hether a certain string of characters is a particular)-6.582 F(reserv)
33.336 606 Q(ed w)-.195 E(ord, or just an identi\214er)-.13 E(.)-.715 E
3.06(When the le)33.336 627 R -.195(xe)-.195 G 6.31(ri).195 G 6.31(sc)
-6.31 G 3.06(oded by hand, it is often more con)-6.31 F -.195(ve)-.52 G
3.06(nient to b).195 F 3.06(uild the DF)-.26 F 6.309(At)-.962 G(o)-6.309
E 1.885(recognize identi\214ers \(e.g.)33.336 642 R F2 -1.8
([_A-Za-z][_A-Za-z0-9]+)4.235 G F1 1.885
(in C\) and then check to see if that)6.035 F 1.957
(string matches a reserv)33.336 657 R 1.957(ed w)-.195 F 5.207(ord. An)
-.13 F(ef)5.207 E 1.957(\214cient w)-.325 F 1.957
(ay of doing this is to maintain a)-.13 F F3(hash)5.206 E(table)33.336
672 Q F1 1.224(of reserv)4.474 F 1.224(ed w)-.195 F 4.474(ords. Because)
-.13 F 1.224(the list of w)4.474 F 1.224(ords is kno)-.13 F 1.225
(wn in adv)-.325 F 1.225(ance, this is a good)-.325 F 3.411
(application of)33.336 687 R F3 3.411(perfect hashing)6.661 F F1 9.911
(.T)C 3.411(he reader is referred to the te)-9.911 F 3.411
(xtbook, for a good)-.195 F(discussion of hashing methods.)33.336 702 Q
.807(When the le)33.336 723 R -.195(xe)-.195 G 4.057(ri).195 G 4.057(sg)
-4.057 G .807(enerated by le)-4.057 F .808(x, it is easier and more ef)
-.195 F .808(\214cient to include rules which)-.325 F 2.167
(match each reserv)33.336 738 R 2.167(ed w)-.195 F 2.166(ord indi)-.13 F
2.166(vidually and return a corresponding tok)-.325 F 2.166(en code.)
-.13 F(Man)8.666 E(y)-.195 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(1/pg 19)2.25 E(\2512019 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.265(more DF)33.336 120 R 5.515(As)-.962 G 2.265
(tates are generated this w)-5.515 F(ay)-.13 E 5.516(,b)-.845 G 2.266
(ut not so man)-5.776 F 5.516(yt)-.195 G 2.266(hat the increased memory)
-5.516 F(consumption is e)33.336 135 Q -.195(ve)-.325 G 3.25(nc).195 G
(lose to being a problem.)-3.25 E .671(In some compilers, the le)33.336
156 R -.195(xe)-.195 G 3.921(rd).195 G .671(oes further w)-3.921 F .67
(ork on identi\214ers, k)-.13 F .67(eeping a)-.13 F/F2 13/Times-Bold@0
SF .67(symbol table)3.92 F F1(of)3.92 E .534
(identi\214ers which it has already seen.)33.336 171 R .534
(Others return simple strings to the parser and let it,)7.034 F 2.319
(or higher)33.336 186 R(-le)-.26 E -.195(ve)-.325 G 5.569(lc).195 G
2.319(ode, tak)-5.569 F 5.569(ec)-.13 G 2.319(are of the rest.)-5.569 F
2.319(Since this is really a semantic issue, it is)8.819 F 1.758
(premature to discuss it no)33.336 201 R 6.699 -.845(w. W)-.325 H 5.009
(ew)-.195 G 1.759(ill also defer discussion of ho)-5.009 F 5.009(wt)
-.325 G 5.009(oh)-5.009 G 1.759(andle numeric,)-5.009 F
(character and string literals with respect to their le)33.336 216 Q
(xical v)-.195 E(alues.)-.325 E 0 Cg EP
%%Trailer
end
%%EOF
