%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Tue Apr  6 22:43:12 2021
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file x86stack.eps
%%+ file obj.eps
%%+ file maps.eps
%%+ file compile.eps
%%+ procset grops 1.22 2
%%Pages: 35
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 122.742(ECE466:Compilers Unit)69.336 60 R(7/pg 1)
2.25 E(\2512021 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Bold@0 SF(Compiler)187.353 120 Q 3.25(,A)-1.196 G(ssembler)-3.25
E 3.25(,L)-1.196 G(ink)-3.25 E(er)-.13 E/F2 13/Times-Roman@0 SF 2.302
(This course concerns itself with the compiler proper)33.336 156 R 5.552
(,w)-.52 G 2.302(hich tak)-5.552 F 2.302(es a high-le)-.13 F -.195(ve)
-.325 G 5.552(ls).195 G(ource)-5.552 E 1.34(language such as the e)
33.336 171 R 1.341
(xample used in this course, C, and translates it into an assembly)-.195
F 4.914(language. In)33.336 186 R 1.664(the UNIX programming frame)4.914
F -.13(wo)-.325 G 1.664(rk, assembly language \214les traditionally).13
F(ha)33.336 201 Q .39 -.195(ve a)-.26 H/F3 13/Courier@0 SF(.s)3.445 E F2
(suf)3.25 E(\214x, and are processed by the assembler)-.325 E 3.25(,c)
-.52 G(alled)-3.25 E F3(as)3.25 E F2(.)A 1.253
(The result of assembly is a)33.336 222 R F1 -.234(re)4.503 G 1.253
(locatable object \214le).234 F F2 4.503(,w)C 1.253(hich has a)-4.503 F
F3(.o)4.503 E F2(suf)4.503 E 4.503(\214x. It)-.325 F 1.253(is typical)
4.503 F 1.902(with lar)33.336 237 R 1.902(ger projects to di)-.234 F
1.902(vide the code among multiple source \214les.)-.325 F 1.901
(When part of the)8.401 F 2.268(project is changed, only the source \
\214le or \214les containing this change need to be re-)33.336 252 R
2.269(compiled and re-assembled.)33.336 267 R 2.269
(The result is then link)8.769 F 2.268(ed with the object \214les pre)
-.13 F(viously)-.325 E(produced, which ha)33.336 282 Q .39 -.195(ve n)
-.26 H(ot been af).195 E(fected by the change.)-.325 E 2.525
(This model allo)33.336 303 R 2.526(ws intermixing of modules from dif)
-.325 F 2.526(ferent source languages \(although)-.325 F .338
(issues of run-time calling con)33.336 318 R -.195(ve)-.52 G .338
(ntion creep in, e.g. the nested visibility of procedures and).195 F
.894(local v)33.336 333 R .894(ariables in a language such as P)-.325 F
.895(ascal vs the more \215at global/local model of C\) or)-.195 F .607
(modules which are written directly in assembly language.)33.336 348 R
.606(The latter is commonly found)7.107 F 3.671(in operating systems k)
33.336 363 R 3.672
(ernel code or in specialized graphics/multimedia applications)-.13 F
1.894(which are looking to e)33.336 378 R 1.893
(xploit machine-speci\214c optimizations or specialities such as the)
-.195 F(SSE instructions under X86.)33.336 393 Q 9.802
(Furthermore, most programming en)33.336 414 R 9.802(vironments e)-.52 F
9.802(xpect a standard library of)-.195 F 6.015(functions/procedures, s\
uch as the Standard C library \(printf, etc.\), and often a)33.336 429 R
1.393(programmer will w)33.336 444 R 1.393(ant to mak)-.13 F 4.643(eu)
-.13 G 1.394
(se of a specialized library \(e.g. in C the \215oating point)-4.643 F
.49(functions are in the)33.336 459 R F3(m)3.739 E F2 3.739
(library\). The)3.739 F .489(UNIX programming frame)3.739 F -.13(wo)
-.325 G .489(rk implements libraries).13 F .574
(as a single \214le which is an collection of)33.336 474 R F3(.o)3.824 E
F2 .574(\214les in a format called)3.824 F F3(ar)3.824 E F2 .574
(\(this is an archi)3.824 F -.195(ve)-.325 G
(format similar in concept to)33.336 489 Q F3(tar)3.25 E F2(or)3.25 E F3
(zip)3.25 E F2(\).)A .932(It is the link)33.336 510 R .932
(er program, called)-.13 F F3(ld)4.182 E F2 .932
(in UNIX \(because an older synon)4.182 F .932(ym for the link)-.195 F
.931(er is)-.13 F(the)33.336 525 Q F3(loader)4.284 E F2 4.284(\)w)C
1.034(hich collects the v)-4.284 F 1.034
(arious object \214les, including those referenced through)-.325 F
(libraries, and combines them into a monolithic, coherent, e)33.336 540
Q -.195(xe)-.195 G(cutable \214le.).195 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 2)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E 0 0 468 713
-382.014 582 33.336 502.014 PBEGIN
%%BeginDocument: compile.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: compile.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 21:36:37 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 713 582
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 582 moveto 0 0 lineto 713 0 lineto 713 582 lineto closepath clip newpath
-53.3 567.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 8925 2475 1135 1135 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
3315 1755 m 3315 1695 l 3163 1695 l 3283 1725 l 3163 1755 l cp
eoclip
n 2325 1725 m
 3300 1725 l gs col0 s gr gr

% arrowhead
n 3163 1755 m 3283 1725 l 3163 1695 l  col0 s
% Polyline
gs  clippath
3315 2130 m 3315 2070 l 3163 2070 l 3283 2100 l 3163 2130 l cp
eoclip
n 2325 2100 m
 3300 2100 l gs col0 s gr gr

% arrowhead
n 3163 2130 m 3283 2100 l 3163 2070 l  col0 s
% Polyline
gs  clippath
3315 2580 m 3315 2520 l 3163 2520 l 3283 2550 l 3163 2580 l cp
eoclip
n 2325 2550 m
 3300 2550 l gs col0 s gr gr

% arrowhead
n 3163 2580 m 3283 2550 l 3163 2520 l  col0 s
% Polyline
gs  clippath
5265 2130 m 5265 2070 l 5113 2070 l 5233 2100 l 5113 2130 l cp
eoclip
n 4275 2100 m
 5250 2100 l gs col0 s gr gr

% arrowhead
n 5113 2130 m 5233 2100 l 5113 2070 l  col0 s
% Polyline
gs  clippath
5265 1755 m 5265 1695 l 5113 1695 l 5233 1725 l 5113 1755 l cp
eoclip
n 4275 1725 m
 5250 1725 l gs col0 s gr gr

% arrowhead
n 5113 1755 m 5233 1725 l 5113 1695 l  col0 s
% Polyline
gs  clippath
5265 2580 m 5265 2520 l 5113 2520 l 5233 2550 l 5113 2580 l cp
eoclip
n 4275 2550 m
 5250 2550 l gs col0 s gr gr

% arrowhead
n 5113 2580 m 5233 2550 l 5113 2520 l  col0 s
% Polyline
n 2580 3825 m 2475 3825 2475 5070 105 arcto 4 {pop} repeat
  2475 5175 3720 5175 105 arcto 4 {pop} repeat
  3825 5175 3825 3930 105 arcto 4 {pop} repeat
  3825 3825 2580 3825 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
3266 3754 m 3323 3773 l 3371 3629 l 3305 3734 l 3314 3610 l cp
eoclip
n 3675 2625 m
 3300 3750 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 3314 3610 m 3305 3734 l 3371 3629 l  col0 s
% Polyline
n 5205 3900 m 5100 3900 5100 5070 105 arcto 4 {pop} repeat
  5100 5175 7470 5175 105 arcto 4 {pop} repeat
  7575 5175 7575 4005 105 arcto 4 {pop} repeat
  7575 3900 5205 3900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1005 3750 m 900 3750 900 5145 105 arcto 4 {pop} repeat
  900 5250 1995 5250 105 arcto 4 {pop} repeat
  2100 5250 2100 3855 105 arcto 4 {pop} repeat
  2100 3750 1005 3750 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5430 5175 m 5325 5175 5325 5895 105 arcto 4 {pop} repeat
  5325 6000 7245 6000 105 arcto 4 {pop} repeat
  7350 6000 7350 5280 105 arcto 4 {pop} repeat
  7350 5175 5430 5175 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
5973 3845 m 6032 3834 l 6004 3685 l 5997 3809 l 5945 3696 l cp
eoclip
n 5775 2625 m
 6000 3825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5945 3696 m 5997 3809 l 6004 3685 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
1617 3683 m 1676 3695 l 1707 3547 l 1653 3659 l 1648 3535 l cp
eoclip
n 1875 2625 m
 1650 3675 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1648 3535 m 1653 3659 l 1707 3547 l  col0 s
% Polyline
gs  clippath
7965 1830 m 7965 1770 l 7813 1770 l 7933 1800 l 7813 1830 l cp
eoclip
n 6075 1800 m
 7950 1800 l gs col0 s gr gr

% arrowhead
n 7813 1830 m 7933 1800 l 7813 1770 l  col0 s
% Polyline
gs  clippath
7740 2205 m 7740 2145 l 7588 2145 l 7708 2175 l 7588 2205 l cp
eoclip
n 6150 2175 m
 7725 2175 l gs col0 s gr gr

% arrowhead
n 7588 2205 m 7708 2175 l 7588 2145 l  col0 s
% Polyline
gs  clippath
7665 2505 m 7665 2445 l 7513 2445 l 7633 2475 l 7513 2505 l cp
eoclip
n 6150 2475 m
 7650 2475 l gs col0 s gr gr

% arrowhead
n 7513 2505 m 7633 2475 l 7513 2445 l  col0 s
% Polyline
gs  clippath
10665 2505 m 10665 2445 l 10513 2445 l 10633 2475 l 10513 2505 l cp
eoclip
n 10050 2475 m
 10650 2475 l gs col0 s gr gr

% arrowhead
n 10513 2505 m 10633 2475 l 10513 2445 l  col0 s
% Polyline
n 10725 1725 m 12750 1725 l 12750 9450 l 10725 9450 l
 cp gs col0 s gr 
% Polyline
n 10725 2100 m
 12750 2100 l gs col0 s gr 
% Polyline
n 10725 2325 m
 12750 2325 l gs col0 s gr 
% Polyline
n 10725 2550 m
 12750 2550 l gs col0 s gr 
% Polyline
n 10725 2775 m
 12750 2775 l gs col0 s gr 
% Polyline
n 10725 3000 m
 12750 3000 l gs col0 s gr 
% Polyline
n 10725 3225 m
 12750 3225 l gs col0 s gr 
% Polyline
n 10725 3975 m
 12750 3975 l gs col0 s gr 
% Polyline
n 10725 6975 m
 12750 6975 l gs col0 s gr 
% Polyline
n 5100 -225 m 7950 -225 l 7950 900 l 5100 900 l
 cp gs col0 s gr 
% Polyline
n 1650 -75 m 4500 -75 l 4500 1050 l 1650 1050 l
 cp gs col0 s gr 
% Polyline
gs  clippath
8245 1458 m 8279 1409 l 8154 1322 l 8236 1416 l 8120 1371 l cp
eoclip
n 7500 900 m
 8250 1425 l gs col0 s gr gr

% arrowhead
n 8120 1371 m 8236 1416 l 8154 1322 l  col0 s
% Polyline
n 6405 7050 m 6300 7050 6300 8220 105 arcto 4 {pop} repeat
  6300 8325 8670 8325 105 arcto 4 {pop} repeat
  8775 8325 8775 7155 105 arcto 4 {pop} repeat
  8775 7050 6405 7050 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8894 7036 m 8932 7082 l 9049 6985 l 8938 7039 l 9011 6939 l cp
eoclip
n 11100 5250 m
 8925 7050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9011 6939 m 8938 7039 l 9049 6985 l  col0 s
% Polyline
gs  clippath
8175 1608 m 8201 1554 l 8066 1487 l 8160 1568 l 8039 1541 l cp
eoclip
n 4425 975 m 7425 1200 l
 8175 1575 l gs col0 s gr gr

% arrowhead
n 8039 1541 m 8160 1568 l 8066 1487 l  col0 s
% Polyline
n 4500 1200 m 4950 1200 l 4950 3300 l 4500 3300 l
 cp gs col0 s gr 
% Polyline
n 2550 1200 m 3000 1200 l 3000 3150 l 2550 3150 l
 cp gs col0 s gr 
% Polyline
n 10725 6525 m
 12750 6525 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1680 1746 m
gs 1 -1 sc (main.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
1665 2166 m
gs 1 -1 sc (func1.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
1650 2601 m
gs 1 -1 sc (func2.c) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 1800 m
gs 1 -1 sc (main.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 2175 m
gs 1 -1 sc (func1.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 2550 m
gs 1 -1 sc (func2.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4125 m
gs 1 -1 sc (....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4350 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4575 m
gs 1 -1 sc (INCL  i) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 4800 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 5025 m
gs 1 -1 sc (.....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 1800 m
gs 1 -1 sc (main.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 2175 m
gs 1 -1 sc (func1.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5475 2550 m
gs 1 -1 sc (func2.o) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4125 m
gs 1 -1 sc (0020      ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4350 m
gs 1 -1 sc (0024      ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
5325 4575 m
gs 1 -1 sc (0028     FF05 00000000) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 3975 m
gs 1 -1 sc (extern int i;) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4425 m
gs 1 -1 sc (f1\(\)) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4650 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 4875 m
gs 1 -1 sc (   ...) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 5100 m
gs 1 -1 sc (   i++;) col0 sh gr
/Times-Roman ff 180.00 scf sf
1500 5475 m
gs 1 -1 sc (C) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
5550 5400 m
gs 1 -1 sc (RELOCATIONS:) col0 sh gr
/Times-Roman ff 180.00 scf sf
5550 5625 m
gs 1 -1 sc (i    @002A  4 bytes) col0 sh gr
/Times-Roman ff 180.00 scf sf
8475 2325 m
gs 1 -1 sc (LINKER) col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2250 m
gs 1 -1 sc (load_addr) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2475 m
gs 1 -1 sc (exec_addr) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2700 m
gs 1 -1 sc (text size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 2925 m
gs 1 -1 sc (data size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 3150 m
gs 1 -1 sc (bss size) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11625 8100 m
gs 1 -1 sc (.data initial values) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11775 5475 m
gs 1 -1 sc (.text image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11700 1275 m
gs 1 -1 sc (a.out ) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
11700 1500 m
gs 1 -1 sc (absolute executable file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
5625 375 m
gs 1 -1 sc (standard C library libc) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 675 m
gs 1 -1 sc (math library libm) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7275 m
gs 1 -1 sc (08048112    ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7500 m
gs 1 -1 sc (08048116   ....) col0 sh gr
/Times-Roman ff 180.00 scf sf
6450 7725 m
gs 1 -1 sc (0804811A  FF05 0804D004) col0 sh gr
/Times-Roman ff 180.00 scf sf
3150 5475 m
gs 1 -1 sc (Assembly language) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 6150 m
gs 1 -1 sc (Object file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7275 m
gs 1 -1 sc (Absolute) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7500 m
gs 1 -1 sc (Executable) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 7725 m
gs 1 -1 sc (Machine Code) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1425 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1650 m
gs 1 -1 sc (O) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 1875 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2100 m
gs 1 -1 sc (P) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2325 m
gs 1 -1 sc (I) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2550 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 2775 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
2775 3000 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1425 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1650 m
gs 1 -1 sc (S) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 1875 m
gs 1 -1 sc (S) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2100 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2325 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2550 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 2775 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 3000 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 180.00 scf sf
4725 3225 m
gs 1 -1 sc (R) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF 3.921
(Therefore, compiling a C program into an e)33.336 523.014 R -.195(xe)
-.195 G 3.92(cutable \214le is a multi-stage process).195 F(in)33.336
538.014 Q -.26(vo)-.52 G(lving se).26 E -.195(ve)-.325 G(ral tools.).195
E(When one simply runs:)6.5 E/F2 10/Courier@0 SF(cc test.c)33.336
550.014 Q F1(The)33.336 565.014 Q/F3 13/Courier@0 SF(cc)4.048 E F1 .799
(command transparently e)4.049 F -.195(xe)-.195 G .799
(cutes the compiler).195 F 4.049(,a)-.52 G .799(ssembler and link)-4.049
F(er)-.13 E 4.049(,r)-.52 G .799(esulting in)-4.049 F .996(an e)33.336
580.014 R -.195(xe)-.195 G .996(cutable \214le called).195 F F3(a.out)
4.246 E F1 .996(\(if there are no f)4.246 F .996
(atal errors in compilation\).)-.13 F .995(The "a" in)7.495 F 1.224
("a.out" stands for "Absolute", meaning that all symbolic references ha)
33.336 595.014 R 1.615 -.195(ve b)-.26 H 1.225(een resolv).195 F(ed.)
-.195 E 1.713(It is possible to arrest the compiler wrapper at dif)
33.336 610.014 R 1.712(ferent stages, to see the assembly or)-.325 F
.891(object \214le that results, as we ha)33.336 625.014 R 1.281 -.195
(ve s)-.26 H .891(een in class.).195 F .891
(It is also of course possible to assign a)7.391 F(dif)33.336 640.014 Q
(ferent name to the)-.325 E F3(a.out)3.25 E F1(\214le.)3.25 E .912
(An a.out \214le contains pure machine code that can be directly e)
33.336 661.014 R -.195(xe)-.195 G .911(cuted by the processor).195 F(.)
-.715 E .192(The e)33.336 676.014 R -.195(xe)-.195 G .193
(cutable \214le \("a.out"\) contains e).195 F -.195(ve)-.325 G .193
(rything that the operating system needs to create).195 F 4.599(ap)
33.336 691.014 S(rogram')-4.599 E 4.599(si)-.715 G 1.349
(nitial memory con\214guration and be)-4.599 F 1.349(gin e)-.195 F -.195
(xe)-.195 G 4.599(cution. The).195 F 1.348(header of the a.out)4.599 F
2.729(identi\214es it to the operating system as an e)33.336 706.014 R
-.195(xe)-.195 G 2.729(cutable \214le and speci\214es the processor).195
F .09(architecture on which the machine code instructions will run.)
33.336 721.014 R 3.34(Ap)6.59 G .09(rogram compiled for an)-3.34 F 1.34
(x86 architecture can not be e)33.336 736.014 R -.195(xe)-.195 G 1.34
(cuted, for e).195 F 1.34(xample, on a SP)-.195 F 1.34(ARC processor)
-1.196 F 7.84(.T)-.715 G 1.34(he header)-7.84 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 3)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(also gi)33.336 120 Q -.195(ve)-.325 G 3.25(st).195 G
(he size of the te)-3.25 E(xt, data and bss memory requirements, as e)
-.195 E(xplained belo)-.195 E -.845(w.)-.325 G 0 0 288 493 -315.456 540
123.336 456.456 PBEGIN
%%BeginDocument: maps.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: maps.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 01:32:12 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 493 540
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 493 0 lineto 493 540 lineto closepath clip newpath
-70.0 577.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5760 1200 m 9360 1200 l 9360 9600 l 5760 9600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 384.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5760 1920 m 9360 1920 l 9360 2880 l 5760 2880 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 3840 m 9360 3840 l 9360 4680 l 5760 4680 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 4680 m 9360 4680 l 9360 5400 l 5760 5400 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 5400 m 9360 5400 l 9360 6600 l 5760 6600 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 7800 m 9360 7800 l 9360 9120 l 5760 9120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
7530 6945 m 7350 6945 l 7350 7277 l 7440 7007 l 7530 7277 l cp
eoclip
n 7440 7800 m
 7440 6960 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7530 7277 m 7440 7007 l 7350 7277 l 7440 7367 l 7530 7277 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7830 7215 m 8010 7215 l 8010 6883 l 7920 7153 l 7830 6883 l cp
eoclip
n 7920 6600 m
 7920 7200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7830 6883 m 7920 7153 l 8010 6883 l 7920 6793 l 7830 6883 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4440 m 3600 4440 l 3600 5520 l 1200 5520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3000 m 3600 3000 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 2520 l 1200 2520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6166 2478 m 6101 2310 l 5691 2471 l 6060 2424 l 5757 2638 l cp
eoclip
n 3360 3480 m
 6120 2400 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5757 2638 m 6060 2424 l 5691 2471 l 5757 2638 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6156 4283 m 6112 4109 l 5685 4216 l 6057 4216 l 5729 4390 l cp
eoclip
n 3240 4920 m
 6120 4200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5729 4390 m 6057 4216 l 5685 4216 l 5729 4390 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 240.00 scf sf
7320 2520 m
gs 1 -1 sc (text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 4320 m
gs 1 -1 sc (data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 5160 m
gs 1 -1 sc (bss) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 6120 m
gs 1 -1 sc (heap) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7320 8520 m
gs 1 -1 sc (stack) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
5640 1200 m
gs 1 -1 sc (00000000) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
5640 9600 m
gs 1 -1 sc (FFFFFFFF) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
7320 840 m
gs 1 -1 sc (Run-Time Memory Image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 3600 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 5040 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 1800 m
gs 1 -1 sc (load_addr,exec_addr,) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 2085 m
gs 1 -1 sc (text_sz,data_sz,) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1440 2370 m
gs 1 -1 sc (bss_sz) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2280 1560 m
gs 1 -1 sc (header:) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
2640 840 m
gs 1 -1 sc (a.out file) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND(The)33.336 492.456 Q/F2 13/Times-Bold@0 SF(bss)3.711 E F1 .461
(section contains all un-initialized global v)3.711 F 3.711
(ariables. The)-.325 F 3.711(Cl)3.711 G .46(anguage speci\214cation)
-3.711 F 2.333(states that all such v)33.336 507.456 R 2.333
(ariables, lacking an e)-.325 F 2.333(xplicit initializer)-.195 F 5.583
(,m)-.52 G 2.333(ust be initialized by the)-5.583 F
(operating system or C run-time en)33.336 522.456 Q(vironment to 0.)-.52
E/F3 10/Courier@0 SF(int j=2;)33.336 534.456 Q(int k;)33.336 546.456 Q
(main\(\))33.336 558.456 Q({)33.336 570.456 Q(int l;)39.336 582.456 Q
(/*...*/)90.936 594.456 Q(})33.336 606.456 Q F1 .875(In the e)33.336
621.456 R .875(xample abo)-.195 F -.195(ve)-.195 G(,).195 E/F4 13
/Courier@0 SF(j)4.125 E F1 .874(has an e)4.124 F .874
(xplicit initializer)-.195 F 4.124(,a)-.52 G .874
(nd will be in the data se)-4.124 F 4.124(gment. The)-.195 F -.325(va)
33.336 636.456 S 1.093(lue of the initializer will be found in the .dat\
a section of the a.out.).325 F F4(k)7.593 E F1 1.093(is uninitialized.)
4.343 F .529(Therefore it will reside in the bss se)33.336 651.456 R
.528(gment of memory and will ha)-.195 F .918 -.195(ve a)-.26 H 3.778
(ni).195 G .528(nitial v)-3.778 F .528(alue of 0.)-.325 F 3.67(The ISO \
C standard says that "If an object that has static storage duration is \
not)33.336 666.456 R .177(initialized e)33.336 681.456 R(xplicitly)-.195
E 3.427(,i)-.845 G 3.427(ti)-3.427 G 3.427(si)-3.427 G .177
(nitialized implicitly as if e)-3.427 F -.195(ve)-.325 G .177
(ry member that has arithmetic type).195 F .922(were assigned 0 and e)
33.336 696.456 R -.195(ve)-.325 G .922
(ry member that has pointer type were assigned a NULL pointer).195 F
3.304(constant". This)33.336 711.456 R .054
(is satis\214ed by \214lling e)3.304 F -.195(ve)-.325 G .054
(ry byte of the bss re).195 F .053(gion with 0, and is performed)-.195 F
.821(by the operating system.)33.336 726.456 R .821(The v)7.321 F
(ariable)-.325 E F4(l)4.071 E F1 .821
(has automatic storage scope, and therefore will)4.071 F .517
(be found on the stack \(or)33.336 741.456 R 3.767(,i)-.52 G 3.767(ft)
-3.767 G .516(he compiler is set for hea)-3.767 F .516
(vy optimization and a pointer to)-.26 F F4(l)3.766 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 4)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(is ne)33.336 120 Q -.195(ve)-.325 G 3.25(rt).195 G(ak)
-3.25 E(en, it may li)-.13 E .39 -.195(ve i)-.325 H 3.25(nar).195 G
-.195(eg)-3.25 G 3.25(ister\). Automatic).195 F -.325(va)3.25 G
(riables are not 0-initialized.).325 E/F2 13/Times-Bold@0 SF 1.75
(Dynamic Memory)33.336 150 R F1 1.751
(is memory which is allocated from the operating system while the)5 F
.101(program is running, rather than at program load time.)33.336 165 R
.1(Dynamic memory is not part of the)6.6 F 4.891(Cl)33.336 180 S 1.641
(anguage, b)-4.891 F 1.642(ut rather part of the run-time library)-.26 F
4.892(,a)-.845 G 1.642(nd is allocated using the)-4.892 F/F3 13
/Courier@0 SF(malloc)4.892 E F1 .168(function, which in turn mak)33.336
195 R .167(es an operating system call.)-.13 F .167
(As such, dynamic memory is not)6.667 F 3.664
(the concern of the C compiler writer)33.336 210 R 10.164(.I)-.715 G
6.914(nm)-10.164 G(an)-6.914 E 6.914(yo)-.195 G 3.664
(ther languages, dynamic memory)-6.914 F
(allocation is speci\214ed as part of the core language.)33.336 225 Q F2
(Link)223.155 255 Q(er Symbols)-.13 E F1 3.942(The link)33.336 291 R
3.941(er is independent of an)-.13 F 7.191(yp)-.195 G 3.941
(articular high-le)-7.191 F -.195(ve)-.325 G 7.191(ll).195 G 7.191
(anguage. It)-7.191 F -.13(ke)7.191 G 3.941(eps track of).13 F .257
(symbols, which are similar to identi\214ers in C, b)33.336 306 R .258
(ut their type is v)-.26 F .258(ery lo)-.195 F(w-le)-.325 E -.195(ve)
-.325 G 3.508(lo).195 G 3.508(riented. A)-3.508 F .437
(symbol has a name \(namespace limitations v)33.336 321 R .437
(ary widely by system, b)-.325 F .437(ut all UNIX systems)-.26 F(allo)
33.336 336 Q 5.059(wa)-.325 G 5.059(tl)-5.059 G 1.809(east 32 character\
s from a set at least as broad as C identi\214ers\), a type \( e.g.)
-5.059 F .884(absolute or relati)33.336 351 R -.195(ve)-.325 G 4.134(,a)
.195 G 4.134(sd)-4.134 G .884(iscussed belo)-4.134 F .884
(w\), a section \(data, te)-.325 F .884
(xt, etc.\), a size \(e.g. 32 or 64)-.195 F 2.093(bits\), and a v)33.336
366 R 2.093(alue \(the v)-.325 F 2.093
(alue may be unde\214ned at certain points along the w)-.325 F(ay)-.13 E
5.343(,e)-.845 G 2.093(.g. a)-5.343 F .611(reference to an e)33.336 381
R .61(xternal function in a)-.195 F F3(.o)3.86 E F1 3.86
(\214le\). There)3.86 F .61(are only tw)3.86 F 3.86(ol)-.13 G(ink)-3.86
E .61(er symbol scopes:)-.13 F(local \(to that)33.336 396 Q F3(.o)3.25 E
F1(\214le\) and global.)3.25 E 1.721
(Here are some things in the C language that ne)33.336 417 R -.195(ve)
-.325 G 4.972(ra).195 G 1.722(ppear in an object \214le \(e)-4.972 F
1.722(xcept for)-.195 F(deb)33.336 432 Q
(ugging purposes\) and do not concern the link)-.26 E(er:)-.13 E 3.388
(\203Cl)33.336 447 S .138(anguage type speci\214ers \(such as "p is a p\
ointer to a pointer to a function returning int)-3.388 F(and taking tw)
33.336 462 Q 3.25(oi)-.13 G(nt ar)-3.25 E(guments"\))-.234 E 3.25
(\203Cl)33.336 477 S
(anguage structure, union and enum de\214nitions and typedef names.)
-3.25 E<83>33.336 492 Q F3(goto)3.25 E F1(labels)3.25 E 4.735<8349>
33.336 507 S 1.486(nternal labels that may be generated by the compiler\
 for loops, switch statements, if)-4.735 F 1.958(statements, etc.)33.336
522 R 1.958(These labels will appear in the assembly language, b)8.458 F
1.958(ut the)-.26 F 5.208(ya)-.195 G 1.958(re local)-5.208 F
(symbols and will not be visible to the link)33.336 537 Q(er)-.13 E(.)
-.715 E 4.222<8361>33.336 552 S .972(utomatic \(local\) v)-4.222 F 4.222
(ariables. An)-.325 F .972(important e)4.222 F .972
(xception is a local v)-.195 F .972(ariable that is declared)-.325 F
.516(with the)33.336 567 R F3(static)3.766 E F1 .516(storage class.)
3.766 F .516(This v)7.016 F .515
(ariable has local scope, i.e. its name is not visible)-.325 F 3.667
(outside of the curly-braced block in which it is declared, b)33.336 582
R 3.667(ut it li)-.26 F -.195(ve)-.325 G 6.917(si).195 G 6.917(nt)-6.917
G 3.667(he same)-6.917 F(neighborhood as global v)33.336 597 Q
(ariables.)-.325 E F2(Inside the object \214le)211.546 627 Q F1 3.25(Ar)
33.336 657 S(elocatable oject \214le \()-3.25 E F3(.o)A F1
(\214le\) contains a header and one or more sections:)3.25 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 5)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E 0 0 144 148
-301.622 310 195.336 421.622 PBEGIN
%%BeginDocument: obj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: obj.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 02:01:42 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 148 310
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 310 moveto 0 0 lineto 148 0 lineto 148 310 lineto closepath clip newpath
-70.0 347.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
30.000 slw
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 1920 l 1200 1920 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1920 m 3600 1920 l 3600 3120 l 1200 3120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3120 m 3600 3120 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 4200 m 3600 4200 l 3600 5040 l 1200 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 5040 m 3600 5040 l 3600 5760 l 1200 5760 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 240.00 scf sf
2280 1560 m
gs 1 -1 sc (header) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 2520 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 3600 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 4680 m
gs 1 -1 sc (relocations table) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 240.00 scf sf
2280 5400 m
gs 1 -1 sc (symbol table) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 270.00 scf sf
2520 840 m
gs 1 -1 sc (Object File) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF 4.251(As)33.336 442.622 S 1.001
(eries of e)-4.251 F 1(xamples will no)-.195 F 4.25(wi)-.325 G 1
(llustrate what goes into those sections.)-4.25 F 1
(But \214rst, a brief)7.5 F(detour:)33.336 457.622 Q/F2 13/Times-Bold@0
SF(UNIX-style assembly syntax)189.342 487.622 Q F1 .358(The Intel docum\
entation uses the Intel standard assembly language syntax, b)33.336
523.622 R .359(ut the UNIX)-.26 F(assembler)33.336 538.622 Q/F3 13
/Courier@0 SF(as)8.079 E F1(follo)8.079 E 4.828(ws a dif)-.325 F 4.828
(ferent con)-.325 F -.195(ve)-.52 G 4.828
(ntion \(which is consistent across dif).195 F(ferent)-.325 E 4.732
(processors\). In)33.336 553.622 R 1.482
(the UNIX syntax, an identi\214er is unambiguously an assembler symbol.)
4.732 F 4.126 -1.04(To r)33.336 568.622 T 2.045(eference a re)1.04 F
(gister)-.195 E 5.295(,i)-.52 G 2.045(ts name is pre\214x)-5.295 F 2.045
(ed with a percent sign, e.g. %eax.)-.195 F 4.125 -1.04(To u)8.545 H
2.045(se a)1.04 F .698(symbol as an immediate v)33.336 583.622 R .699
(alue, the dollar sign is used as a pre\214x.)-.325 F .699
(Otherwise the symbol)7.199 F .986(means the contents of that address.)
33.336 598.622 R(Re)7.486 E .986
(gister indirect addressing modes are indicated by)-.195 F(brack)33.336
613.622 Q 5.082(ets or parentheses. UNIX assembly instructions are opco\
de src1,src2,dst for)-.13 F .699
(3-address instructions or opcode src,dst for 2-address.)33.336 628.622
R .698(\(Note that Intel syntax is dst,src\).)7.199 F 4.599 -1.04(We w)
33.336 643.622 T 2.519(ill use the UNIX syntax in these notes.)1.04 F
2.52(Another name for this is the "A)9.019 F(T&T")-1.443 E
(syntax, after the original authors of UNIX)33.336 658.622 Q 2.657
(In the UNIX/A)33.336 679.622 R 2.656
(T&T syntax, where a particular opcode can be performed at dif)-1.443 F
(ferent)-.325 E 1.29(precisions, that opcode recei)33.336 694.622 R
-.195(ve)-.325 G 4.54(sal).195 G 1.29(etter suf)-4.54 F 1.29(\214x: b,w)
-.325 F 1.291(,l,q for 8,16,32 and 64-bit operations)-.845 F(respecti)
33.336 709.622 Q -.195(ve)-.325 G(ly).195 E 8.479(.I)-.845 G 5.229(na)
-8.479 G 1.978
(ssembly language, each instruction is represented by a line ha)-5.229 F
1.978(ving 4)-.26 F 2.781(\214elds which are delimited by whitespace.)
33.336 724.622 R 2.781(The \214rst \214eld is an optional label, which)
9.281 F 2.81
(associates a symbolic name with the address of the instruction.)33.336
739.622 R 2.81(The label may also)9.31 F 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 6)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF .942(appear on a line by itself.)33.336 120 R .942
(In either form, the label must ha)7.442 F 1.332 -.195(ve a c)-.26 H
.942(olon follo).195 F .943(wing it.)-.325 F(The)7.443 E(ne)33.336 135 Q
.92(xt \214eld is the opcode, follo)-.195 F .919
(wed by the operands \214eld.)-.325 F .919
(After the operands, a comment)7.419 F
(can be placed, started with a # character)33.336 150 Q 6.5(.T)-.715 G
(his comment is ignored by the assembler)-6.5 E(.)-.715 E .361(Some opc\
odes are not real machine language opcodes that the processor understan\
ds, b)33.336 171 R(ut)-.26 E 3.817(pseudo-opcodes, or directi)33.336 186
R -.195(ve)-.325 G 3.817(s, that are recognized by the assembler).195 F
10.316(.S)-.715 G 3.816(uch pseudo-)-10.316 F(opcodes be)33.336 201 Q
(gin with a dot.)-.195 E .638(As the assembler digests its input, it ma\
intains a group of location counters or "cursors".)33.336 222 R 1.138
(There is one cursor for each of the object \214le sections.)33.336 237
R 1.138(The assembler also maintains a)7.638 F 3.543
(notion of which section it is putting output into.)33.336 252 R
(Initially)10.044 E 6.794(,a)-.845 G 3.544(ll of these cursors are)
-6.794 F .726(initialized to 0 and the assembler is in the)33.336 267 R
/F2 13/Courier@0 SF(.text)3.976 E F1 3.975(section. As)3.975 F .725
(we switch back and forth)3.975 F .886(between sections with directi)
33.336 282 R -.195(ve)-.325 G 4.136(sl).195 G(ik)-4.136 E(e)-.13 E F2
(.data)4.136 E F1(and)4.136 E F2(.text)4.136 E F1 4.137(,t)C .887
(he assembler remembers, via)-4.137 F(the location counter cursor)33.336
297 Q 3.25(,w)-.52 G(here it left of)-3.25 E(f.)-.325 E(The presence of\
 a label associates that symbol with the current section and location.)
33.336 327 Q(E.g.:)6.5 E/F3 10/Courier@0 SF(label1:)33.336 339 Q 21.6
(pushl %ebp)90.936 351 R F1 .097(The link)33.336 366 R .097(er symbol)
-.13 F F2(label1)3.347 E F1 .096(will no)3.346 F 3.346(wh)-.325 G -2.925
-.26(av e)-3.346 H .096(the v)3.606 F .096(alue of the address of the)
-.325 F F2(pushl)3.346 E F1(opcode,)3.346 E(therefore)33.336 381 Q F3
33.6(jmp label1)90.936 393 R F1 -.13(wo)33.336 408 S(uld ha).13 E .39
-.195(ve t)-.26 H(he desired ef).195 E
(fect of jumping to that point in the code.)-.325 E/F4 13/Times-Bold@0
SF(Example: de\214ning and r)120.117 453 Q(efer)-.234 E(encing v)-.234 E
(ariable instances)-.13 E F1(Let')33.336 483 Q 3.25(ss)-.715 G
(ee what is actually in an object \214le and ho)-3.25 E 3.25(wi)-.325 G
3.25(tg)-3.25 G(ets there:)-3.25 E F3(/* f1.c */)33.336 495 Q
(extern int i;)33.336 507 Q(/* Referencing instance */)94.8 E(f\(\))
33.336 531 Q({)33.336 543 Q(i=2;)90.936 555 Q(})33.336 567 Q(/* f2.c */)
33.336 591 Q(int i;)33.336 603 Q(/* Defining instance */)136.8 E(f2\(\))
33.336 615 Q({)33.336 627 Q(i=1;)90.936 639 Q(f\(\);)90.936 651 Q(})
33.336 663 Q F1(In)33.336 678 Q F2(f1.c)4.308 E F1 4.308(,t)C(he)-4.308
E F2(extern)4.308 E F1 1.058(storage class for v)4.308 F(ariable)-.325 E
/F5 13/Times-Italic@0 SF(i)4.308 E F1 1.058
(tells the compiler that this v)4.308 F 1.059(ariable is)-.325 F -.195
(ex)33.336 693 S .148(ternal to that).195 F F2(.c)3.398 E F1 3.398
(\214le. Therefore,)3.398 F .148
(the compiler does not complain when it does not see a)3.398 F 2.199
(declaration that v)33.336 708 R 5.449(ariable. Instead,)-.325 F 2.2
(it kno)5.45 F 2.2(ws that)-.325 F F2(i)5.45 E F1 2.2(is a global v)5.45
F 2.2(ariable, and should be)-.325 F .79
(accessed by using an absolute addressing mode.)33.336 723 R .789
(Neither the compiler nor the assembler)7.29 F(kno)33.336 738 Q 1.159
(ws what that actual address will be.)-.325 F 1.16
(That is not decided until the link)7.659 F 1.16(er puts all the)-.13 F
0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 7)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF 2.041
(object \214les together and assigns addresses to symbols.)33.336 120 R
2.041(Therefore, the assembler must)8.541 F(lea)33.336 135 Q .626 -.195
(ve a ")-.26 H .236(place-holder" in the object \214le.).195 F(Lik)6.736
E -.325(ew)-.13 G .237(ise, in f2.o, there will be a reference to the)
.325 F(symbol)33.336 150 Q/F2 13/Courier@0 SF(f)3.25 E F1(.)A 1.609
(There is a dif)33.336 180 R 1.608(ference between an e)-.325 F 1.608
(xtern storage class which is created with an e)-.195 F(xplicit)-.195 E
-.195(ex)33.336 195 S 3.223(tern k).195 F -.195(ey)-.13 G -.13(wo).195 G
3.223
(rd, and one which is implicit for a global scope declaration lacking a)
.13 F 1.741(speci\214c storage class k)33.336 210 R -.195(ey)-.13 G -.13
(wo).195 G 4.991(rd. The).13 F 1.741
(former is used to inform the compiler of the data)4.991 F .038
(type of the identi\214er)33.336 225 R 3.288(,a)-.52 G .038
(nd does not result in the emission of assembly language.)-3.288 F .039
(The latter)6.539 F 1.59(causes an assembly language directi)33.336 240
R 1.98 -.195(ve t)-.325 H 4.84(ob).195 G 4.84(eo)-4.84 G 1.589
(utput, as described later in this unit, and)-4.84 F 2.851
(creates the de\214ning instance of the symbol.)33.336 255 R 2.852
(It is good practice to use the)9.352 F F2(extern)6.102 E F1 -.13(ke)
33.336 270 S(yw)-.065 E 1.547
(ord in header \214les which de\214ne the "public" global v)-.13 F 1.547
(ariables of a module, and to)-.325 F(ha)33.336 285 Q 1.198 -.195(ve ex)
-.26 H .808(actly one place, in a .c \214le, not a .h \214le, where the\
 de\214ning instance \(lacking the).195 F -.195(ex)33.336 300 S .435
(tern k).195 F -.195(ey)-.13 G -.13(wo).195 G .435(rd\) is placed.).13 F
.435(Because header \214les wind up getting included in each)6.935 F F2
(.c)3.684 E F1(\214le)3.684 E 2.478(that is compiled separately)33.336
315 R 5.728(,h)-.845 G -.26(av)-5.728 G 2.478
(ing more than one de\214ning instance could result in a).26 F
(rede\214nition error at link time.)33.336 330 Q(No)33.336 351 Q 3.341
(wl)-.325 G .091(et us e)-3.341 F .09
(xamine the assembly language \214les produced by the C code abo)-.195 F
.48 -.195(ve \()-.195 H .09(using gcc).195 F
(under Linux on an x86 system\).)33.336 366 Q/F3 10/Courier@0 SF
(**** f1.s)39.336 384 Q 21.6(.file "f1.c")90.936 396 R
(#For proper error reporting)79.2 E 136.8(.text #Place)90.936 408 R
(output into .text section)6 E(.globl f)90.936 420 Q
(#f is a globally visible symbol)67.2 E 18(.type f,@function)87.336 432
R 6(#a)56.4 G(nd represents a function addr)-6 E(f:)39.336 444 Q
(pushl %ebp)87.336 456 Q(#These instructions set up)58.8 E
(movl %esp,%ebp)87.336 468 Q(#the stack frame pointer)92.4 E(movl $2,i)
87.336 480 Q(ret)87.336 492 Q 18(.size f,.-f)87.336 504 R
(#Calculate the size of function f)92.4 E(**** f2.s)39.336 528 Q 21.6
(.file "f2.c")90.936 540 R 12(.comm i,4,4)87.336 552 R
(#i is common block sym, 4 bytes long, align 4)98.4 E(.text)90.936 564 Q
(.globl f2)90.936 576 Q 18(.type f2,@function)87.336 588 R(f2:)39.336
600 Q(pushl %ebp)87.336 612 Q(#These instructions set up)58.8 E
(movl %esp,%ebp)87.336 624 Q(#the stack frame pointer)92.4 E
(subl $8,%ebp)90.936 636 Q(#useless operation, no local vars)100.8 E
(movl $1,i)90.936 648 Q(call f)87.336 660 Q 140.4(leave #Restore)87.336
672 R(frame pointer)6 E(ret)87.336 684 Q 18(.size f2,.-f2)87.336 696 R 0
Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 8)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF 1.765(Looking at f1, the assembler directi)33.336 120
R -.195(ve)-.325 G/F2 13/Courier@0 SF(.text)5.21 E F1 1.765
(tells the assembler that it is assembling)5.015 F .396
(opcodes to go in the .te)33.336 135 R .396
(xt section of the object \214le.)-.195 F(The)6.896 E F2(.globl)3.645 E
F1(directi)3.645 E .785 -.195(ve w)-.325 H .395(ill cause the).195 F
.533(assembler to e)33.336 150 R .533
(xport the associated symbol as a de\214ning instance.)-.195 F F2(.type)
7.033 E F1 .533(is used to pass)3.783 F .448
(along information into the object \214le as to the type of the symbol.)
33.336 165 R .447(Please note that it has)6.947 F .554
(nothing to do with the C language notion of type.)33.336 180 R .555
(Symbol types may either be functions)7.055 F 2.485(or v)33.336 195 R
5.735(ariables. The)-.325 F(link)5.735 E 2.485
(er is able to catch gross errors such as if)-.13 F F2(f)5.734 E F1
2.484(were de\214ned as a)5.734 F -.325(va)33.336 210 S 1.526(riable in)
.325 F F2(f1.c)4.776 E F1 1.526(instead of a function. The)4.776 F F2
(.size)4.777 E F1(directi)4.777 E 1.917 -.195(ve c)-.325 H 1.527
(alculates the size of the).195 F 1.556(function by subtracting the v)
33.336 225 R 1.556
(alue of the symbol representing the \214rst instruction of the)-.325 F
3.18(function \(e.g.)33.336 240 R F2(main)6.43 E F1 6.43(\)f)C 3.18
(rom the special assembler symbol . \(period character\), which)-6.43 F
1.664(represents the current byte output position.)33.336 255 R 1.664
(Note that the CALL to function)8.164 F F2(f)4.914 E F1 1.664(is done)
4.914 F(symbolically)33.336 270 Q 4.017(,a)-.845 G 4.018(si)-4.017 G
4.018(st)-4.018 G .768(he assignment into global v)-4.018 F(ariable)
-.325 E F2(i)4.018 E F1 7.268(.T)C .768(he symbol)-7.268 F F2(i)4.018 E
F1(is)4.018 E/F3 13/Times-Italic@0 SF -.481(re)4.018 G(fer).481 E(enced)
-.481 E F1(in)4.018 E(f1 b)33.336 285 Q(ut it is de\214ned in f2.)-.26 E
(The link)6.5 E(er will stitch all of this together)-.13 E(.)-.715 E
1.896(In f2, note the)33.336 306 R F2(.comm)5.146 E F1 1.896
(assembler pseudo-opcode.)5.146 F 1.896
(It creates a de\214ning instance of the)8.396 F(symbol)33.336 321 Q F2
(i)4.82 E F1 4.82(,s)C 1.57
(pecifying its size and alignment restriction in bytes.)-4.82 F 1.57
(Another name for the)8.07 F F2(bss)33.336 336 Q F1 .352(section is the)
3.602 F F2 .352(common block)3.602 F F1 6.852(.B)C .352
(ecause there is no initializer)-6.852 F 3.602(,i)-.52 G 3.602(ti)-3.602
G 3.602(sn)-3.602 G .351(ot an error for)-3.602 F .529
(multiple de\214ning instances of the v)33.336 351 R(ariable)-.325 E F2
(i)3.779 E F1 .53(to appear during linking, as long as the)3.779 F 3.78
(ya)-.195 G(re)-3.78 E .975(all uninitialized and ha)33.336 366 R 1.365
-.195(ve t)-.26 H .975(he same size and alignment.).195 F .975
(It is also acceptable for there to)7.475 F .046
(be at most one initialized symbol \(D)33.336 381 R -1.573 -1.443(AT A)
-.52 H 3.297(\)w)1.443 G .047(ith the same name as one or more COMMON)
-3.297 F 3.25(symbols. The)33.336 396 R(term COMMON BLOCK is v)3.25 E
(ery old, dating to the FOR)-.195 E(TRAN days.)-.78 E 1.138(After gcc r\
uns f1.s and f2.s each through the assembler \(as\), the resulting \214\
les f1.o and)33.336 417 R 1.459(f2.o are)33.336 432 R/F4 13/Times-Bold@0
SF 1.459(object \214les)4.709 F F1 7.959(.O)C 1.459
(bject \214les are similar to an a.out \214le, ho)-7.959 F(we)-.325 E
-.195(ve)-.325 G 4.71(ra).195 G 1.46(ll addresses are)-4.71 F(relati)
33.336 447 Q -.195(ve)-.325 G 9.408(.I).195 G 6.158(na)-9.408 G 2.908
(ddition, the object \214le will ha)-6.158 F 3.297 -.195(ve a s)-.26 H
2.907(ection kno).195 F 2.907(wn as the)-.325 F F4 2.907(symbol table)
6.157 F F1 1.148(containing an entry for e)33.336 462 R -.195(ve)-.325 G
1.148
(ry symbol that is either de\214ned or referenced in the \214le, and)
.195 F(another section called the)33.336 477 Q F4 -.234(re)3.25 G
(locations table).234 E F1 3.25(,d)C(escribed belo)-3.25 E -.845(w.)
-.325 G(The)33.336 498 Q F2(objdump)6.208 E F1 2.958
(command can be used to vie)6.208 F 6.208(wp)-.325 G 2.958
(arts of an object or a.out \214le, with)-6.208 F .267
(command-line \215ags controlling what is dumped.)33.336 513 R -.195(Fo)
6.767 G 3.517(re).195 G(xample,)-3.712 E F2 .267(objdump -h)3.517 F F1
.268(dumps the)3.517 F 1.141(header section, and)33.336 528 R F2(-t)
4.391 E F1 1.141(dumps the symbol table.)4.391 F 1.14(Let us vie)7.641 F
4.39(wad)-.325 G 1.14(isassembly of the .te)-4.39 F(xt)-.195 E
(section of)33.336 543 Q F2(f1.o)3.25 E F1(\(the listing belo)3.25 E
3.25(ww)-.325 G(as re-formatted from the output of objdump -d\):)-3.38 E
/F5 10/Courier@0 SF(Offset Opcodes)33.336 555 Q(Disassembly)142.8 E 12
(0000 55)33.336 567 R(pushl %ebp)144 E 12(0001 89E5)33.336 579 R
(movl %esp,%ebp)132 E 12(0003 C705)33.336 591 R(00000000 02000000)6 E
(movl $2,0)24 E 12(000D C3)33.336 603 R(ret)144 E F1 .85
(If we were to look at the .te)33.336 639 R .85(xt section in a he)-.195
F 4.1(xd)-.195 G .85(ump, we')-4.1 F 4.1(ds)-.65 G .851
(ee the string of bytes 55 89)-4.1 F 1.611(E5 C7 05....etc.)33.336 654 R
(The)8.111 E F2(-d)4.861 E F1 1.611
(option "disassembles" those bytes back to assembly language)4.861 F
3.72(mnemonics. Note)33.336 669 R .47(that the of)3.72 F .47
(fset of the \214rst instruction is 0.)-.325 F(Ob)6.971 E(viously)-.195
E 3.721(,t)-.845 G .471(his can not be a)-3.721 F -.325(va)33.336 684 S
1.614(lid memory address.).325 F 1.614(All of)8.114 F 1.614
(fsets in object \214les are relati)-.325 F 2.004 -.195(ve t)-.325 H
4.864(ot).195 G 1.613(he object \214le.)-4.864 F 1.613(It isn')8.113 F
(t)-.234 E(until the link)33.336 699 Q(er kicks in that symbols g)-.13 E
(ain absolute, usable addresses.)-.065 E(Ne)33.336 729 Q 2.097
(xt note that in the instruction be)-.195 F 2.097(ginning at of)-.195 F
2.098(fset 0003, the constant 2 is mo)-.325 F -.195(ve)-.195 G 5.348(dt)
.195 G(o)-5.348 E 2.909(memory address 0.)33.336 744 R 4.988 -1.04(We k)
9.408 H(no)1.04 E 6.158(wf)-.325 G 2.908(rom e)-6.158 F 2.908
(xamining the corresponding assembly language)-.195 F 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(7/pg 9)
2.25 E(\2512021 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF .158
(input \214le that this is the instruction that mo)33.336 120 R -.195
(ve)-.195 G 3.408(s2i).195 G .158(nto v)-3.408 F(ariable)-.325 E/F2 13
/Courier@0 SF(i)3.408 E F1 6.659(.T)C .159(he assembler has left a)
-6.659 F .627
(place-holder of 00000000 in the object \214le where the link)33.336 135
R .627(er will ha)-.13 F 1.017 -.195(ve t)-.26 H 3.877<6f8c>.195 G .627
(ll in the actual)-3.877 F 2.718(32-bit address of symbol)33.336 150 R
F2(i)5.969 E F1 2.719(once that is kno)5.969 F 5.969(wn. C705)-.325 F
2.719(is the x86 machine language)5.969 F 1.506(opcode for the MO)33.336
165 R 1.506
(VL instruction where the source addressing mode is Immediate and)-.65 F
1.41(the destination mode is Absolute.)33.336 180 R 1.41(The ne)7.91 F
1.411(xt 4 bytes are the destination address and the)-.195 F 1.143(\214\
nal 4 bytes of the instruction are the source operand \(which is in Int\
el-style, or "little-)33.336 195 R(endian" byte order\).)33.336 210 Q
(Here is the dump of f2.o:)33.336 240 Q/F3 10/Courier@0 SF
(Offset Opcodes)33.336 252 Q(Disassembly)146.4 E 12(0000 55)33.336 264 R
(pushl %ebp)138 E 12(0001 89E5)33.336 276 R(movl %esp,%ebp)126 E 12
(0003 83EC08)33.336 288 R 6(subl $8,%esp)152.4 F 12(0006 C705)33.336 300
R(00000000 01000000)6 E(movl $1,0)18 E 12(0010 E8FCFFFFFF)33.336 312 R
(call 0x0E)90 E 12(0015 C9)33.336 324 R(leave)138 E 12(0016 C3)33.336
336 R(ret)138 E F1 1.796
(Note that the placeholder in the CALL instruction is FFFFFFFC, b)33.336
366 R 1.797(ut the disassembler)-.26 F 2.032(decodes that as 000E.)
33.336 381 R 2.032
(This is because the CALL instruction uses a Program Counter)8.532 F
(Relati)33.336 396 Q 1.659 -.195(ve a)-.325 H 1.269(ddressing mode.).195
F 1.269(The address to which e)7.769 F -.195(xe)-.195 G 1.269
(cution jumps is the operand in the).195 F .776
(instruction added to the v)33.336 411 R .776
(alue of the Program Counter re)-.325 F(gister)-.195 E/F4 13
/Times-Italic@0 SF(corr)4.026 E .776(esponding to the byte)-.481 F(be)
33.336 426 Q 1.842(yond the last byte of the CALL instruction)-.39 F F1
8.342(.I)C 5.092(nt)-8.342 G -.13(wo)-5.092 G 3.272 -.715('s c).13 H
1.842(omplement, FFFFFFFC is -4,).715 F .59
(therefore the CALL appears to be to the instruction at of)33.336 441 R
.59(fset 000E.)-.325 F .59(Of course, all of this)7.09 F 3.47
(is meaningless since it is just a placeholder that will be o)33.336 456
R -.195(ve)-.195 G 3.47(rwritten by the link).195 F(er)-.13 E(.)-.715 E
1.725(Nonetheless, it reminds us that there are dif)33.336 471 R(ferent)
-.325 E/F5 13/Times-Bold@0 SF 1.724(Relocation T)4.975 F(ypes)-.442 E F1
1.724(depending on the)4.974 F(addressing mode being used.)33.336 486 Q
1.67(The symbol and relocation tables for the tw)33.336 516 R 4.921(oo)
-.13 G 1.671(bject \214les will look something lik)-4.921 F 4.921(et)
-.13 G(his)-4.921 E(\()33.336 531 Q F2(objdump -t -r)A F1(\):)A F3 24
(f1.o: file)33.336 543 R(format elf32-i386)6 E
(RELOCATION RECORDS FOR [.text]:)33.336 567 Q 12(OFFSET TYPE)33.336 579
R(VALUE)84 E(00000005 R_386_32)33.336 591 Q(i)60 E(SYMBOL TABLE:)33.336
615 Q(00000000 g)33.336 627 Q 6(F.)30 G 6(text 0000000f)-6 F(f)6 E 48
(00000000 *UND*)33.336 639 R(00000000 i)12 E 24(f2.o: file)33.336 687 R
(format elf32-i386)6 E(RELOCATION RECORDS FOR [.text]:)33.336 711 Q 12
(OFFSET TYPE)33.336 723 R(VALUE)84 E(00000008 R_386_32)33.336 735 Q(i)60
E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 10)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(00000011 R_386_PC32)33.336 117 Q(f)48 E(SYMBOL TABLE:)
33.336 141 Q 36(00000004 O)33.336 153 R 6(*COM* 00000004)6 F(i)6 E
(00000000 g)33.336 165 Q 6(F.)30 G 6(text 00000017)-6 F(f2)6 E 48
(00000000 *UND*)33.336 177 R(00000000 f)12 E/F2 13/Times-Roman@0 SF 1.49
(The symbol table output is interpreted as follo)33.336 207 R 4.74
(ws: The)-.325 F 1.49(\214rst column is the v)4.74 F 1.489(alue of the)
-.325 F 1.58(symbol \(its relati)33.336 222 R 1.97 -.195(ve o)-.325 H
4.83(ra).195 G 1.58(bsolute address\).)-4.83 F 1.581
([Note: for COMmon block symbols, the \214rst)8.081 F 3.631(column is t\
he size] The second column contains \215ag characters \(l=local, g=glob\
al,)33.336 237 R .889
(F=symbol is a function name, O=symbol is an object \(v)33.336 252 R .89
(ariable\) name, see man page for)-.325 F 8.127(other \215ags\).)33.336
267 R 8.126(The third column is the section that the symbol belongs to)
14.626 F(\(te)33.336 282 Q 2.128
(xt,data,COMmon \(bss\) or UNDe\214ned\).)-.195 F 2.129
(The fourth column is either the size of the)8.629 F
(symbol if it is de\214ned, or the alignment for unde\214ned symbols.)
33.336 297 Q 1.78(Let us run this simple e)33.336 327 R 1.78
(xample through the link)-.195 F(er)-.13 E 8.28(.O)-.715 G 5.03(fc)-8.28
G 1.78(ourse, it is non-sensical, since)-5.03 F 1.419
(without a main function this code will not actually run.)33.336 342 R
1.419(\(output belo)7.919 F 4.669(wh)-.325 G 1.419(as been edited)-4.669
F(some)33.336 357 Q(what to remo)-.325 E .39 -.195(ve i)-.195 H(rrele)
.195 E -.325(va)-.325 G(nt info:\)).325 E F1 6($l)33.336 369 S 6(df)-6 G
(1.o f2.o)-6 E(ld: warning: cannot find entry symbol _start; defaulting\
 to 0000000008048094)33.336 381 Q 6($o)33.336 393 S(bjdump -t -d a.out)
-6 E 24(a.out: file)33.336 417 R(format elf32-i386)6 E(SYMBOL TABLE:)
33.336 441 Q(08048094 l)33.336 453 Q 12(d.)24 G 6(text 00000000)-12 F
(.text)6 E(08049114 l)33.336 465 Q 12(d.)24 G 12(bss 00000000)-12 F
(.bss)6 E(08048094 g)33.336 477 Q 6(F.)30 G 6(text 0000000f)-6 F(f)6 E
(08049114 g)33.336 489 Q 6(O.)30 G 12(bss 00000004)-6 F(i)6 E
(080480a3 g)33.336 501 Q 6(F.)30 G 6(text 00000017)-6 F(f2)6 E 48
(00000000 *UND*)33.336 513 R(00000000 _start)12 E(08049114 g)33.336 525
Q 12(.bss 00000000)42 F(__bss_start)6 E(08049114 g)33.336 537 Q 12
(.bss 00000000)42 F(_edata)6 E(08049118 g)33.336 549 Q 12(.bss 00000000)
42 F(_end)6 E(Disassembly of section .text:)33.336 573 Q(08048094 <f>:)
33.336 597 Q 36(8048094: 55)39.336 609 R 12(push %ebp)132 F 36
(8048095: 89)39.336 621 R 108(e5 mov)6 F(%esp,%ebp)24 E 36(8048097: c7)
39.336 633 R(05 14 91 04 08 02)6 E 12(movl $0x2,0x8049114)24 F 36
(804809e: 00)39.336 645 R(00 00)6 E 36(80480a1: 5d)39.336 657 R 18
(pop %ebp)132 F 36(80480a2: c3)39.336 669 R(ret)132 E(080480a3 <f2>:)
33.336 693 Q 36(80480a3: 55)39.336 705 R 12(push %ebp)132 F 36
(80480a4: 89)39.336 717 R 108(e5 mov)6 F(%esp,%ebp)24 E 36(80480a6: 83)
39.336 729 R(ec 08)6 E 18(sub $0x8,%esp)96 F 36(80480a9: c7)39.336 741 R
(05 14 91 04 08 01)6 E 12(movl $0x1,0x8049114)24 F 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 11)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 36(80480b0: 00)39.336 117 R(00 00)6 E 36(80480b3: e8)
39.336 129 R(dc ff ff ff)6 E 12(call 8048094)60 F(<f>)6 E 36
(80480b8: c9)39.336 141 R(leave)132 E 36(80480b9: c3)39.336 153 R(ret)
132 E/F2 13/Times-Roman@0 SF 4.328 -1.04(We s)33.336 183 T 2.248
(ee that all symbolic references \(relocation "holes"\) ha)1.04 F 2.638
-.195(ve n)-.26 H 2.898 -.325(ow b).195 H 2.248(een \214lled in with)
.325 F 4.907(absolute addresses.)33.336 198 R 4.907(The te)11.407 F
4.907(xt has been amalg)-.195 F 4.908
(amated into one contiguous section.)-.065 F(Observ)33.336 213 Q 3.856
(ea)-.195 G 3.856(ta)-3.856 G .606(ddress 80480B3 the CALL to function \
f has a machine-language operand of)-3.856 F 4.313(FFFFFFDC, because CA\
LL uses a Program Counter \(Instruction Pointer\) Relati)33.336 228 R
-.195(ve)-.325 G 1.255(addressing mode.)33.336 243 R 1.255
(The program counter will be at address 80480B8 when the CALL is)7.755 F
-.195(exe)33.336 258 S 5.906(cuted. FFFFDC+080480B8).195 F 5.907(=0)
5.907 G 2.657(8048094 \(using tw)-5.907 F(o')-.13 E 5.907(sc)-.715 G
2.657(omplement arithmetic\) and)-5.907 F .275
(therefore gets us to the \214rst opcode of function f.)33.336 273 R
.274(The "hole" is \214lled in with the v)6.774 F .274(alue of)-.325 F
.491(the symbol, minus the location \(program counter v)33.336 288 R
.491(alue\) of the hole, and plus the original)-.325 F -.325(va)33.336
303 S 1.467(lue of the hole.).325 F 1.467(The bss symbol)7.967 F/F3 13
/Courier@0 SF(i)4.716 E F2 1.466(has been gi)4.716 F -.195(ve)-.325 G
4.716(na).195 G 4.716(na)-4.716 G 1.466(bsolute address of 08049114.)
-4.716 F .591(Note that this disassembly is able to resolv)33.336 318 R
3.841(es)-.195 G .591(ymbols, because the symbol table is still in)
-3.841 F 1.255(the a.out.)33.336 333 R 1.255
(Sometimes, e.g. for code obfuscation purposes, we don')7.755 F 4.505
(tw)-.234 G 1.255(ant to include the)-4.635 F .562(symbol table.)33.336
348 R(The)7.062 E F3(-s)3.812 E F2 .562
(option to gcc \(which gets passed to ld\) causes the symbol table to)
3.812 F(be stripped from the a.out)33.336 363 Q/F4 13/Times-Bold@0 SF
(Addr)215.271 393 Q(ess Constants)-.234 E F2 .095(It is possible to cre\
ate a compile-time constant which is the address of a link)33.336 423 R
.095(er symbol +/-)-.13 F(an inte)33.336 438 Q(ger)-.195 E 6.5(.T)-.715
G(his is e)-6.5 E(xplicitly permitted in the C standard, e.g.)-.195 E F1
(extern int a[];)33.336 450 Q(f\(\))33.336 474 Q({)33.336 486 Q
(int *p= &a[2];)33.336 498 Q(})33.336 510 Q(Assembly Language:)33.336
546 Q(f:)33.336 558 Q 12(pushl %ebp)81.336 570 R 18(movl %esp,)81.336
582 R(%ebp)6 E 18(subl $4,)81.336 594 R(%esp)6 E 18(movl $a+8,)81.336
606 R(-4\(%ebp\))6 E(leave)81.336 618 Q(ret)81.336 630 Q(Disassembly:)
33.336 654 Q(00000000 <f>:)33.336 666 Q 12(0: 55)51.336 678 R 12
(push %ebp)132 F 12(1: 89)51.336 690 R 108(e5 mov)6 F(%esp,%ebp)24 E 12
(3: 83)51.336 702 R(ec 04)6 E 18(sub $0x4,%esp)96 F 12(6: c7)51.336 714
R(45 fc 08 00 00 00)6 E 12(movl $0x8,0xfffffffc\(%ebp\))24 F 12(d: c9)
51.336 726 R(leave)132 E 12(e: c3)51.336 738 R(ret)132 E 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 12)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(Wh)33.336 120 Q 3.675(yd)-.065 G .425(oes this w)
-3.675 F 3.675(ork? At)-.13 F .426(compile time, the identi\214er)3.676
F/F2 13/Courier@0 SF(a)3.676 E F1 .426(is equi)3.676 F -.325(va)-.325 G
.426(lent to the address of the).325 F(be)33.336 135 Q 1.8
(ginning of the array)-.195 F 8.3(.T)-.845 G 1.8
(herefore, the address of)-8.3 F F2(a[2])5.05 E F1 1.799
(is 8 bytes more.)5.049 F 1.799(Because the)8.299 F .985
(absolute address of a is not kno)33.336 150 R .985(wn by the compiler)
-.325 F 4.236(,i)-.52 G 4.236(tm)-4.236 G .986(ust e)-4.236 F .986
(xpress this symbolically to)-.195 F .469(the assembler as)33.336 165 R
F2($a+8)3.719 E F1 6.969(.T)C .469
(he object \214le created by the assembler has the usual "hole" for)
-6.969 F .954(the unkno)33.336 180 R .954(wn v)-.325 F .954(alue, b)
-.325 F .954(ut instead of being \214lled with a 0, it has the v)-.26 F
.954(alue of 8.)-.325 F .955(When the)7.454 F(link)33.336 195 Q 1.892
(er assigns the address of the symbol)-.13 F F2(a)5.142 E F1 1.891
(and \214lls in the relocations, it will add that)5.142 F
(number 8 to the symbol to create the proper address.)33.336 210 Q/F3 13
/Times-Bold@0 SF(Initialized data)225.261 240 Q F1 .614(When global v)
33.336 276 R .614(ariables \(including local static v)-.325 F .615
(ariables\) ha)-.325 F 1.005 -.195(ve a)-.26 H 3.865(ni).195 G
(nitializer)-3.865 E 3.865(,t)-.52 G .615(hat initializer)-3.865 F -.325
(va)33.336 291 S 1.189(lue must wind up in the D).325 F -1.573 -1.443
(AT A)-.52 H 1.188(section of the e)5.881 F -.195(xe)-.195 G 1.188
(cutable so it can be loaded with the).195 F 6.754(program. Unlik)33.336
306 R 6.754(ea)-.13 G 3.504(utomatic v)-6.754 F 3.504
(ariables, these initializers only tak)-.325 F 6.754(ee)-.13 G -.325(ff)
-6.754 G 3.504(ect prior to the).325 F .905(program start and their v)
33.336 321 R .904
(alue must be computable at compile time, at least in terms of a)-.325 F
(link)33.336 336 Q(er symbol +/- an optional of)-.13 E(fset.)-.325 E/F4
10/Courier@0 SF(int i=3;)33.336 348 Q(Assembly:)33.336 372 Q 88.8
(.data #Place)81.336 396 R(bytes into the .data section now)6 E
(.align 4)81.336 408 Q(#Align the next output byte on a 4-byte boundary)
19.2 E 12(.type i,@object)81.336 420 R(#Declare i to be a variable)22.8
E 12(.size i,4)81.336 432 R(#Set size of i)58.8 E(i:)33.336 444 Q 12
(.long 3)81.336 456 R(#Output 4 bytes)70.8 E F1(The)33.336 471 Q F2
(.globl)4.517 E F1(directi)4.517 E 1.657 -.195(ve i)-.325 H 1.267
(nstructs the link).195 F 1.267(er to mak)-.13 F 4.517(et)-.13 G 1.267
(he symbol i globally visible during)-4.517 F 1.477
(the linkage process.)33.336 486 R(The)7.977 E F2(.data)4.727 E F1
(directi)4.727 E 1.867 -.195(ve s)-.325 H 1.476
(witches the assembly tar).195 F 1.476(get into the D)-.234 F -1.573
-1.443(AT A)-.52 H 1.665(section of the output \(object\) \214le.)33.336
501 R F2(.type)8.165 E F1 1.665
(declares i to be a symbol associated with a)4.915 F -.325(va)33.336 516
S 1.532(riable, not a function.).325 F F2(align)8.032 E F1 1.532
(causes the ne)4.782 F 1.531(xt output byte to be aligned on a 4-byte)
-.195 F(boundary)33.336 531 Q 5.642(,p)-.845 G 2.392
(ossibly skipping bytes \(inserting padding\) to do so.)-5.642 F
(Finally)8.892 E 5.642(,t)-.845 G 2.392(he label)-5.642 F F2(i:)5.642 E
F1 .71(associates the ne)33.336 546 R .71(xt directi)-.195 F 1.1 -.195
(ve w)-.325 H .71(ith the symbol i.).195 F .709(That directi)7.209 F
-.195(ve)-.325 G F2(.long)4.154 E F1 .709(emits 4 bytes into)3.959 F
.737(the current section \(D)33.336 561 R -1.573 -1.443(AT A)-.52 H
3.988(\). There)1.443 F .738(are similar directi)3.988 F -.195(ve)-.325
G 3.988(sf).195 G .738(or de\214ning initializers of other)-3.988 F .9
(simple data types.)33.336 576 R .9
(Complicated initializers, e.g. for structs or arrays, are b)7.4 F .899
(uilt up with a)-.26 F(succession of these simple directi)33.336 591 Q
-.195(ve)-.325 G(s.).195 E F3(Static v)152.201 621 Q
(ariables with block/function scope)-.13 E F1(Local static v)33.336 651
Q(ariables require special treatment:)-.325 E F4(f\(\))33.336 663 Q({)
33.336 675 Q(static int a;)33.336 687 Q(a=1;)90.936 699 Q(})33.336 711 Q
(g\(\))33.336 735 Q 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 13)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF({)33.336 117 Q(static int a;)33.336 129 Q(a=2;)90.936
141 Q(})33.336 153 Q(Assembly:)33.336 177 Q 6(.local a.0)81.336 189 R 12
(.comm a.0,4,4)81.336 201 R(.text)90.936 213 Q(f:)33.336 225 Q 12
(pushl %ebp)81.336 237 R 18(movl %esp,)81.336 249 R(%ebp)6 E 18
(movl $1,)81.336 261 R(a.0)6 E 18(popl %ebp)81.336 273 R(ret)81.336 285
Q 6(.local a.1)81.336 297 R 12(.comm a.1,4,4)81.336 309 R(.text)90.936
321 Q(g:)33.336 345 Q 12(pushl %ebp)81.336 357 R 18(movl %esp,)81.336
369 R(%ebp)6 E 18(movl $2,)81.336 381 R(a.1)6 E 18(popl %ebp)81.336 393
R(ret)81.336 405 Q/F2 13/Times-Roman@0 SF .373(Because the link)33.336
420 R .373(er does not kno)-.13 F 3.623(wa)-.325 G .373
(bout C namespace and scope rules, the compiler must)-3.623 F 1.889
(append unique tags to the identi\214er names to a)33.336 435 R -.26(vo)
-.26 G 1.889(id con\215ict.).26 F(The)8.389 E/F3 13/Courier@0 SF(.comm)
5.139 E F2(directi)5.139 E 2.279 -.195(ve b)-.325 H(y).195 E(def)33.336
450 Q 1.353(ault creates a global symbol.)-.13 F(The)7.853 E F3(.local)
4.603 E F2(directi)4.603 E 1.743 -.195(ve ove)-.325 H 1.353
(rrides that and pre).195 F -.195(ve)-.325 G 1.354(nts the).195 F 2.891
(symbol from being visible to other object \214les during the linkage p\
rocess \(although)33.336 465 R(relocation references within the same \
\214le are satis\214ed by the symbol\).)33.336 480 Q/F4 13/Times-Bold@0
SF(Strings)247.472 510 Q F1(char ary[]="ABCDEF";)33.336 552 Q
(char *p="WXYZ";)33.336 576 Q(main\(\))33.336 600 Q({)33.336 612 Q
(*p=10;)90.936 624 Q(})33.336 636 Q F2 .061(The declaration of)33.336
666 R F3(ary)3.311 E F2 .062
(creates a 7-byte array of characters and initializes it to contain the)
3.311 F .396(characters in the string "ABCDEF".)33.336 681 R .396
(The declaration of)6.896 F F3(p)3.646 E F2 .395
(creates an area of memory that)3.645 F .753(is initialized with the ad\
dress of another area of memory which holds the string WXYZ.)33.336 696
R 2.472
(String constants are placed in a section of the object \214le kno)
33.336 711 R 2.472(wn as)-.325 F F3(.rodata)5.721 E F2 8.971(.T)C(his)
-8.971 E 1.25(section is typically loaded into memory as part of the te)
33.336 726 R 1.25(xt re)-.195 F 1.25(gion, b)-.195 F 1.25
(ut that is operating-)-.26 F 3.708(system dependent.)33.336 741 R 3.707
(On UNIX systems, since the te)10.208 F 3.707(xt re)-.195 F 3.707
(gion is not writable, string)-.195 F 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 14)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(constants are immutable, and)33.336 120 Q/F2 13
/Courier@0 SF(p[1]=0)3.25 E F1(will cause a run-time e)3.25 E(xception.)
-.195 E/F3 10/Courier@0 SF 194.4(.data #enter)90.936 132 R
(.data section)6 E 21.6(.type ary,@object)90.936 144 R 21.6(.size ary,7)
90.936 156 R(ary:)33.336 168 Q 9.6(.string "ABCDEC")90.936 180 R
(#emit sequence of bytes \(includes NUL\))67.2 E 3.6(.section .rodata)
90.936 192 R(#enter .rodata section)73.2 E 246(.LC0: #private)39.336 204
R(label for string constant)6 E 9.6(.string "WXYZ")90.936 216 R 194.4
(.data #back)90.936 228 R(to .data section)6 E(.align 4)90.936 240 Q
21.6(.type p,@object)90.936 252 R 21.6(.size p,4)90.936 264 R
(#reserve 4 bytes starting at p)154.8 E(p:)33.336 276 Q 21.6(.long .LC0)
90.936 288 R(#initialize with addr of string const)148.8 E(.text)90.936
300 Q 21.6(.type main,@function)90.936 312 R(main:)33.336 324 Q 21.6
(pushl %ebp)90.936 336 R 27.6(movl %esp,)90.936 348 R(%ebp)6 E 27.6
(subl $8,)90.936 360 R(%esp)6 E 27.6(movl p,)90.936 372 R(%eax)6 E 27.6
(movb $10,)90.936 384 R(\(%eax\))6 E(leave)90.936 396 Q(ret)90.936 408 Q
/F4 13/Times-Bold@0 SF(What ld does)230.858 438 Q F1
(The \214rst task of)33.336 468 Q F2(ld)3.25 E F1(is to tak)3.25 E 3.251
(ei)-.13 G -2.405 -.52(nv e)-3.251 H .001(ntory of all of the).52 F F2
(.o)3.251 E F1 .001(\214les being presented to it.)3.251 F .001
(It loads)6.501 F 1.298(in the symbol tables from all of the object \
\214les to create a uni\214ed symbol table for the)33.336 483 R 1.042
(entire program.)33.336 498 R 1.042
(There is only one global namespace for all link)7.542 F 1.042
(er symbols.)-.13 F 1.042(This might)7.542 F 1.248
(be considered a de\214cienc)33.336 513 R 6.188 -.845(y. L)-.195 H(et')
.845 E 4.498(ss)-.715 G 1.248(ay we ha)-4.498 F 1.638 -.195(ve a m)-.26
H(odule).195 E F2(foo.c)4.498 E F1 1.248(that de\214nes a function)4.498
F(called)33.336 528 Q F2(calculate)3.827 E F1 7.077(.I)C 3.827(fw)-7.077
G 3.827(ea)-3.827 G .577
(ttempt to incorporate that module into a program written by)-3.827 F
.618(someone else, the)33.336 543 R 3.867(ym)-.195 G .617(ay ha)-3.867 F
1.007 -.195(ve a)-.26 H .617(lso made a function called).195 F F2
(calculate)3.867 E F1 7.117(.I)C 3.867(ti)-7.117 G .617(s, after all, a)
-3.867 F(common name.)33.336 558 Q 2.372(If there is more than one de\
\214ning instance of a symbol, i.e. if a symbol is)33.336 579 R/F5 13
/Times-Italic@0 SF(multiply-)5.623 E(de\214ned)33.336 594 Q F1 5.499(,t)
C 2.249(his is generally a f)-5.499 F 2.249(atal error)-.13 F 8.749(.C)
-.715 G 2.249(onsider what w)-8.749 F 2.249(ould happen if a programmer)
-.13 F .233(accidentally included tw)33.336 609 R 3.483(ov)-.13 G .233
(ersions of function)-3.678 F F2(f)3.483 E F1(abo)3.483 E .623 -.195
(ve i)-.195 H 3.483(nt).195 G .493 -.13(wo d)-3.483 H(if).13 E(ferent)
-.325 E F2(.c)3.483 E F1 3.483(\214les. When)3.483 F F2(f)3.484 E F1
1.461(is called some)33.336 624 R 1.46(where in the program, which v)
-.325 F 1.46(ersion should be called?)-.195 F(\(Ho)7.96 E(we)-.325 E
-.195(ve)-.325 G 2.5 -.52(r, r).195 H(ecall).52 E(the common block e)
33.336 639 Q(xception abo)-.195 E .39 -.195(ve f)-.195 H
(or uninitialized v).195 E(ariables\))-.325 E 3.189 -1.04(To a)33.336
660 T 1.109(meliorate this problem of \215at global link)1.04 F 1.109
(er namespace, a con)-.13 F -.195(ve)-.52 G 1.109(ntion e).195 F 1.109
(xists that one)-.195 F 1.207(should prepend to one')33.336 675 R 4.457
(sg)-.715 G 1.207(lobal v)-4.457 F 1.207
(ariable and function names a reasonably unique pre\214x.)-.325 F .982
(Therefore, we might call our function)33.336 690 R F2(foo_calculate)
4.233 E F1 7.483(.T)C .983(his is less lik)-7.483 F .983
(ely to con\215ict)-.13 F(with another name.)33.336 705 Q(It isn')6.5 E
3.25(tap)-.234 G(erfect solution, b)-3.25 E(ut it w)-.26 E(orks f)-.13 E
(airly well in reality)-.13 E(.)-.845 E 1.003
(In languages such as C++ with more comple)33.336 726 R 4.253(xn)-.195 G
1.003(amespace models, the compiler eng)-4.253 F(ages)-.065 E
(in what is called)33.336 741 Q F4(symbol name mangling)3.25 E F1
(to create unique link)3.25 E(er symbols.)-.13 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 15)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.124(Global v)33.336 120 R 1.124
(ariable and function names that are intended to remain pri)-.325 F
-.325(va)-.325 G 1.124(te to the).325 F/F2 13/Courier@0 SF(.c)4.374 E F1
1.125(\214le in)4.374 F .615(which the)33.336 135 R 3.865(ya)-.195 G
.615(re declared should be protected with the)-3.865 F F2(static)3.865 E
F1 .615(storage class \(see belo)3.865 F(w\).)-.325 E F2(static)33.336
150 Q F1 .965(symbols still require the assistance of the link)4.215 F
.965(er to be relocated.)-.13 F(Ho)7.465 E(we)-.325 E -.195(ve)-.325 G
2.005 -.52(r, t).195 H(he).52 E .953(use of)33.336 165 R F2(static)4.203
E F1 .952
(causes the compiler and the assembler to \215ag that symbol as a LOCAL)
4.203 F 5.837(symbol. The)33.336 180 R(link)5.837 E 2.587
(er will then enter the symbol into a pri)-.13 F -.325(va)-.325 G 2.587
(te namespace just for the).325 F 2.002
(corresponding object \214le, and the symbol will ne)33.336 195 R -.195
(ve)-.325 G 5.252(rc).195 G 2.002(on\215ict with symbols from other)
-5.252 F(object \214les.)33.336 210 Q .214(There are rare cases where i\
t is useful to deliberately rede\214ne a symbol.)33.336 231 R -.195(Fo)
6.714 G 3.464(ri).195 G .215(nstance, we)-3.464 F 1.643
(may need to change ho)33.336 246 R 4.893(wap)-.325 G 1.643
(iece of code, a)-4.893 F -.325(va)-.26 G 1.643
(ilable only in library or object \214le form,).325 F .823
(calls another function.)33.336 261 R .823(This all f)7.323 F .823
(alls under the heading of "wild and crazy ld tricks" and)-.13 F 1.765
(will not be discussed further)33.336 276 R 8.265(.J)-.715 G 1.765
(ust remember that an)-8.265 F 5.015(yd)-.195 G 1.764
(uplicate symbol de\214nitions are)-5.015 F(generally wrong.)33.336 291
Q .655(Frequently symbols ha)33.336 312 R 1.045 -.195(ve a d)-.26 H .655
(e\214ning instance, b).195 F .655(ut the)-.26 F 3.906(ya)-.195 G .656
(re ne)-3.906 F -.195(ve)-.325 G 3.906(ra).195 G .656
(ctually referenced.)-3.906 F -.195(Fo)7.156 G(r).195 E -.195(ex)33.336
327 S 2.373(ample, the programmer may write a function, b).195 F 2.372
(ut ne)-.26 F -.195(ve)-.325 G 5.622(rc).195 G 2.372
(all it, or declare a global)-5.622 F -.325(va)33.336 342 S
(riable, yet ne).325 E -.195(ve)-.325 G 3.25(ru).195 G(se it in an e)
-3.25 E 3.25(xpression. The)-.195 F(link)3.25 E(er doesn')-.13 E 3.25
(tc)-.234 G(are about this.)-3.25 E(Ho)33.336 363 Q(we)-.325 E -.195(ve)
-.325 G 4.764 -.52(r, i).195 H 6.974(tc).52 G 3.724
(ares deeply about the opposite case: a symbol that is referenced \(by)
-6.974 F 1.941(appearing in a relocations table\) b)33.336 378 R 1.941
(ut which has no de\214ning instance.)-.26 F 1.941(Such a situation)
8.441 F(mak)33.336 393 Q .721(es it impossible for the link)-.13 F .722
(er to complete its task of creating an absolute e)-.13 F -.195(xe)-.195
G(cutable).195 E 1.24(\214le with no dangling references.)33.336 408 R
1.24(Therefore, it will stop with a f)7.74 F 1.239(atal error)-.13 F
4.489(,r)-.52 G 1.239(eporting the)-4.489 F(unde\214ned symbol and the \
object \214le or \214les in which it is referenced.)33.336 423 Q 2.377
(Once all of the symbol de\214nitions and references are resolv)33.336
444 R(ed,)-.195 E F2(ld)5.627 E F1 2.377(will assemble the)5.627 F F2
(a.out)33.336 459 Q F1 3.627(\214le by)3.627 F .376
(concatenating all of the te)3.627 F .376
(xt sections of all of the object \214les, forming the)-.195 F(single)
33.336 474 Q F2(.text)5.047 E F1 1.797(section of the)5.047 F F2(a.out)
5.048 E F1 8.298(.I)C 5.048(nd)-8.298 G 1.798(oing so, the te)-5.048 F
1.798(xt sections are relocated.)-.195 F(An)8.298 E .742
(instruction which w)33.336 489 R .742(as at of)-.13 F .742
(fset 10 in a particular object \214le')-.325 F 3.992(st)-.715 G -.195
(ex)-3.992 G 3.992(ts).195 G .742(ection may no)-3.992 F 3.991(wb)-.325
G 3.991(ea)-3.991 G(t)-3.991 E(of)33.336 504 Q(fset 1034 in the)-.325 E
F2(a.out)3.25 E F1(.)A(Furthermore,)33.336 525 Q F2(ld)3.889 E F1 .64
(has a concept of the)3.889 F F2 .64(load address)3.89 F F1 .64
(of the program, i.e. the memory)3.89 F .771
(address at which the \214rst byte of the)33.336 540 R F2(.text)4.02 E
F1 .77(section of the)4.02 F F2(a.out)4.02 E F1 .77(will be loaded.)4.02
F(This)7.27 E(kno)33.336 555 Q .276(wledge is part of con\214guring)
-.325 F F2(ld)3.526 E F1 .276
(for a particular operating system and processor type,)3.526 F 2.486
(and is not normally something that the programmer needs to w)33.336 570
R 2.486(orry about.)-.13 F 2.486(The load)8.986 F 2.53
(address is also placed in the)33.336 585 R F2(a.out)5.78 E F1 2.53
(\214le so the operating system is sure to load the)5.78 F 1.465
(program at the address for which it w)33.336 600 R 1.465(as link)-.13 F
4.715(ed. Kno)-.13 F 1.464(wing the size of each object \214le')-.325 F
(s)-.715 E F2(.text)33.336 615 Q F1(section,)5.527 E F2(ld)5.527 E F1
2.278(can calculate the absolute address that it will occup)5.527 F
5.528(yi)-.13 G 5.528(nt)-5.528 G 2.278(he \214nal)-5.528 F 1.794
(image, and can thus complete the symbol table, assigning absolute v)
33.336 630 R 1.794(alues to each te)-.325 F(xt)-.195 E(symbol.)33.336
645 Q 3.975(As)33.336 666 S .725(imilar process is undertak)-3.975 F
.725(en for the)-.13 F F2(data)3.975 E F1(and)3.975 E F2(bss)3.975 E F1
(sections.)3.975 E F2(ld)7.225 E F1 .726(assigns an absolute)3.976 F
1.703(address to each)33.336 681 R F2(data)4.952 E F1(or)4.952 E F2(bss)
4.952 E F1 1.702
(symbol, based on the con\214gured starting address of the)4.952 F F2
(data)33.336 696 Q F1(and)3.669 E F2(bss)3.669 E F1 .419(memory re)3.669
F 3.669(gions. In)-.195 F .419(the case of)3.669 F F2(data)3.669 E F1
.419(symbols, the initializers contained)3.669 F .335(in the indi)33.336
711 R .335(vidual object \214les are concatenated, forming the)-.325 F
F2(.data)3.585 E F1 .335(section of the)3.585 F F2(a.out)3.585 E F1(,)A
.805(which will thus contain the byte-for)33.336 726 R .805
(-byte image of what that section will look lik)-.26 F 4.056(ew)-.13 G
(hen)-4.056 E .433(the program starts.)33.336 741 R -.195(Fo)6.933 G(r)
.195 E F2(bss)3.683 E F1 .433(symbols, there are ob)3.683 F .433
(viously no initializers.)-.195 F F2(ld)6.933 E F1 -.13(ke)3.683 G .433
(eps track).13 F 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 16)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.711(of the total number of)33.336 120 R/F2 13
/Courier@0 SF(bss)4.961 E F1 1.712
(bytes needed, and places that information into the)4.961 F F2(a.out)
4.962 E F1 2.007(header so the operating system can allocate the memory\
 when the program is loaded.)33.336 135 R 1.649
(During this process, each)33.336 150 R F2(data)4.899 E F1(or)4.899 E F2
(bss)4.899 E F1 1.649(symbol is assigned an absolute address in the)
4.899 F(symbol table.)33.336 165 Q(No)33.336 186 Q(w)-.325 E F2(ld)3.378
E F1 .128(concatenates the v)3.378 F .127
(arious object \214les, processing the relocation records, replacing)
-.325 F 1.707(each "placeholder" with the actual, absolute address that\
 the associated symbol is no)33.336 201 R(w)-.325 E(kno)33.336 216 Q
2.383(wn to ha)-.325 F -.195(ve)-.26 G 8.883(.I).195 G 5.633(nt)-8.883 G
2.383(he case of Program-Counter)-5.633 F(-Relati)-.26 E 2.772 -.195
(ve r)-.325 H 2.382(elocation types, the proper).195 F(of)33.336 231 Q(\
fset is calculated with respect to the absolute address of the placehol\
der in question.)-.325 E/F3 13/Times-Bold@0 SF(Static Libraries)223.825
252 Q F1 2.583(When you write a C program, you e)33.336 282 R 2.583
(xpect certain functions, such as)-.195 F F2(printf)5.834 E F1 5.834(,t)
C 5.834(ob)-5.834 G(e)-5.834 E -.26(av)33.336 297 S 3.656
(ailable. These)-.065 F .406(are supplied in the form of a)3.656 F F3
(library)3.656 E F1 6.905(.A)C .405(library is basically a collection)
-3.25 F(of)33.336 312 Q F2(.o)4.855 E F1 1.605(\214les, or)4.855 F -.065
(ga)-.234 G 1.605(nized together under a common wrapper format called a)
.065 F F2(.a)4.855 E F1 4.855(\214le. It)4.855 F(is)4.856 E
(similar to a "tar" or "zip" archi)33.336 327 Q .39 -.195(ve \()-.325 H
(although no compression is pro).195 E(vided\).)-.195 E(Con)33.336 348 Q
-.195(ve)-.52 G 1.166(ntion is that a library).195 F/F4 13
/Times-Italic@0 SF(ZZZ)4.416 E F1 1.165
(is contained in the library \214le:)4.415 F F2(libZZZ.a)4.415 E F1
7.665(.U)C 1.165(sing the)-7.665 F F2(-l)33.336 363 Q F1 .874(option to)
4.124 F F2(cc)4.124 E F1 .874(tells the)4.124 F F2(cc)4.124 E F1 .874
(program to ask the link)4.124 F .874
(er to link with the speci\214ed library)-.13 F(.)-.845 E -.195(Fo)
33.336 378 S 4.488(re).195 G(xample:)-4.683 E F2 1.238(cc myprog.c -lm)
4.488 F F1 1.238(asks for the system library \214le)4.488 F F2(libm.a)
4.488 E F1 1.238(\(the math)4.488 F 2.232
(library\) to be additionally link)33.336 393 R 5.482(ed. By)-.13 F(def)
5.482 E(ault,)-.13 E F2(cc)5.482 E F1(al)5.482 E -.13(wa)-.13 G 2.232
(ys links the standard C library).13 F F2(libc.a)33.336 408 Q F1 6.5(.T)
C(hese libraries are located in a system directory)-6.5 E 3.25(,t)-.845
G(ypically)-3.25 E F2(/usr/lib)3.25 E F1(.)A 1.183
(Although a library embodies a collection of object \214les, the beha)
33.336 429 R 1.183(vior when linking to a)-.26 F .418
(library is slightly dif)33.336 444 R .418(ferent than if one just link)
-.325 F .419(ed in all of the object \214les indi)-.13 F(vidually)-.325
E 6.919(.I)-.845 G(n)-6.919 E .802(the latter case, the)33.336 459 R F2
(.text)4.052 E F1(and)4.052 E F2(.data)4.052 E F1 .802
(sections of each object \214le w)4.052 F .802(ould wind up in the)-.13
F F2(a.out)33.336 474 Q F1 5.579(,r)C -2.925 -.195(eg a)-5.579 H 2.329
(rdless of whether or not an).195 F 2.329
(ything in a particular object \214le w)-.195 F 2.329(as actually)-.13 F
4.583(used. W)33.336 489 R 1.333(ith a library)-.52 F(,)-.845 E F2(ld)
4.583 E F1 -.26(bu)4.583 G 1.333
(ilds a symbol table of all the object \214les in the library).26 F
4.582(,a)-.845 G(nd)-4.582 E 4.032(then only selects those object \214l\
es that are actually needed for inclusion into the)33.336 504 R -.195
(exe)33.336 519 S(cutable.).195 E(Ho)33.336 540 Q(we)-.325 E -.195(ve)
-.325 G 1.906 -.52(r, i).195 H 4.116(ti).52 G 4.116(si)-4.116 G .865
(mportant to realize that static libraries are not generally used an)
-4.116 F .865(ymore in)-.195 F 2.631
(modern, general-purpose operating systems.)33.336 555 R 2.632
(The issue is with softw)9.132 F 2.632(are maintenance.)-.13 F .914
(Let us say that an important library)33.336 570 R 4.163(,s)-.845 G .913
(uch as)-4.163 F F2(libc)4.163 E F1 .913(the standard C library)4.163 F
4.163(,h)-.845 G .913(as a security)-4.163 F(vulnerability)33.336 585 Q
7.788(.W)-.845 G 1.288(ith static libraries, it w)-8.308 F 1.288
(ould be necessary to re-compile or re-link e)-.13 F -.195(ve)-.325 G
(ry).195 E -.195(exe)33.336 600 S .187(cutable on the system ag).195 F
.187(ainst a ne)-.065 F 3.437(wv)-.325 G .187(ersion of the library)
-3.632 F 6.686(.T)-.845 G .186(his means either shipping)-6.686 F(the)
33.336 615 Q F2(.o)4.352 E F1 -.195(ve)4.352 G 1.102(rsion of each e)
.195 F -.195(xe)-.195 G 1.102
(cutable, and/or the source code, and hoping that the required).195 F
(compiler/link)33.336 630 Q .678(er toolchain is in place.)-.13 F .677
(Therefore, dynamic libraries are normally used for)7.177 F
(system libraries.)33.336 645 Q F3(Dynamic Linking)218.755 675 Q F1 .663
(When dynamic \(shared\) libraries are used, there are tw)33.336 705 R
3.913(op)-.13 G .663(arts to the linkage process.)-3.913 F(At)7.163 E
.152(compile time,)33.336 720 R F2(ld)3.402 E F1 .152(links ag)3.402 F
.151(ainst the dynamic library \(which has a)-.065 F F2(.so)3.401 E F1
-.195(ex)3.401 G .151(tension in UNIX\)).195 F .771
(for the purpose of learning which symbols are de\214ned by it.)33.336
735 R(Ho)7.272 E(we)-.325 E -.195(ve)-.325 G 1.812 -.52(r, n).195 H .772
(one of the code).52 F 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 17)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 3.422(or data initializers from the dynamic library\
 are actually included in the a.out \214le.)33.336 120 R(Instead,)33.336
135 Q/F2 13/Courier@0 SF(ld)5.467 E F1 2.217
(records which dynamic libraries were link)5.467 F 2.217(ed ag)-.13 F
5.467(ainst. This)-.065 F 2.218(information is)5.467 F
(placed into one of the auxiliary sections of the)33.336 150 Q F2(a.out)
3.25 E F1(\214le.)3.25 E .794(At e)33.336 171 R -.195(xe)-.195 G .794
(cution time, the second phase tak).195 F .794(es place before the)-.13
F F2(main)4.044 E F1 .794(gets in)4.044 F -.26(vo)-.52 G -.13(ke).26 G
4.044(d. A).13 F(small)4.043 E .687(helper program called)33.336 186 R
F2(ld.so)3.937 E F1 .687
(is loaded into the process address space by the k)3.937 F .688
(ernel and)-.13 F -.195(exe)33.336 201 S 4.313(cuted. I.e.).195 F 1.063
(the start address of the program is not)4.313 F F2(main)4.312 E F1
1.062(and not e)4.312 F -.195(ve)-.325 G 4.312(nt).195 G(he)-4.312 E F2
(__start)4.312 E F1 .11(standard C library startup function \(co)33.336
216 R -.195(ve)-.195 G .11(red in ECE357\).).195 F .111
(Instead, it is the start address of)6.611 F(the dynamic library loader)
33.336 231 Q(.)-.715 E .109(On Linux systems, the k)33.336 252 R .109
(ernel maps this)-.13 F F2(ld.so)3.358 E F1 .108(loader code into a con)
3.358 F -.195(ve)-.52 G .108(nient place in the).195 F 1.234(process ad\
dress space, and sets up the stack so that the list of required shared \
libraries,)33.336 267 R .23(and other required information, is present.)
33.336 282 R .23(The dynamic loader \214nds each of the required)6.73 F
.931(libraries, by looking at a sequence of directories similar to the)
33.336 297 R F2($PATH)4.182 E F1 .932(shell v)4.182 F .932(ariable for)
-.325 F 5.443(\214nding e)33.336 312 R -.195(xe)-.195 G 8.692
(cutables. In).195 F 5.442(this case, the en)8.692 F 5.442(vironment v)
-.52 F(ariable)-.325 E F2(LD_LIBRARY_PATH)8.692 E F1 .881
(contains this list of directories.)33.336 327 R .881
(There is also a pre-de\214ned list which is hard-coded into)7.381 F F2
(ld.so)33.336 342 Q F1 4.923(,a)C 1.673
(nd additional search places which can be hard-coded into the)-4.923 F
F2(a.out)4.923 E F1 1.673(at link)4.923 F 5.07(time. Each)33.336 357 R
1.821(library must be located, if not, a f)5.07 F 1.821
(atal error occurs and)-.13 F F2(ld.so)5.071 E F1 1.821(causes the)5.071
F .224(process to e)33.336 372 R 3.474(xit. F)-.195 F .224
(or each library)-.195 F 3.474(,t)-.845 G .223
(he dynamic loader reads its header and then uses)-3.474 F F2(mmap)3.473
E F1(to create te)33.336 387 Q(xt, data and bss re)-.195 E
(gions for the library)-.195 E(.)-.845 E 1.525(Since the actual librari\
es used at run-time to satisfy the requirements are not kno)33.336 408 R
1.525(wn at)-.325 F 2.337(link-time, this means we don')33.336 423 R
5.587(tk)-.234 G(no)-5.587 E 5.587(ww)-.325 G 2.337
(hen linking what the actual, absolute memory)-5.587 F 3.51
(addresses will be of an)33.336 438 R 6.76(yc)-.195 G 3.51
(ode or data that are in the shared libraries.)-6.76 F 3.51(Thus some)
10.01 F .419(additional magic is required to link the static and the dy\
namic portions of the e)33.336 453 R -.195(xe)-.195 G(cutable,).195 E
(and to compile and link the shared library itself.)33.336 468 Q .679(F\
rom the standpoint of the static portion of the \214le, we are concerne\
d with accessing \(1\))33.336 489 R .87
(functions that are de\214ned in the shared library and \(2\) global v)
33.336 504 R .87(ariables that are e)-.325 F(xported)-.195 E 1.029
(by the shared library)33.336 519 R 7.529(.W)-.845 G 1.029(ith re)-8.049
F -.065(ga)-.195 G 1.03
(rd to both points, at the time of compilation \(from C to).065 F .106
(assembly\) of the static portions, we don')33.336 534 R 3.356(tk)-.234
G(no)-3.356 E 3.356(wi)-.325 G 3.356(ft)-3.356 G .106(he e)-3.356 F .105
(xternal references to code and data)-.195 F 1.028
(will, when ultimately satis\214ed by the link)33.336 549 R(er)-.13 E
4.278(,m)-.52 G 1.028(atch up to other static portions \(i.e. static)
-4.278 F F2(.a)33.336 564 Q F1 3.362(libraries or other loose)6.612 F F2
(.o)6.612 E F1 3.362(\214les\) or to dynamic libraries \()6.612 F F2
(.so)A F1 6.612(\). Therefore,)B(the)6.612 E .287(compiler can')33.336
579 R 3.537(td)-.234 G 3.537(oa)-3.537 G -.195(ny)-3.537 G .287
(thing special, and has to access these global functions and v).195 F
(ariables)-.325 E(in the same w)33.336 594 Q(ay)-.13 E(.)-.845 E -.195
(Fo)33.336 615 S 4.482(rg).195 G 1.232(lobal v)-4.482 F 1.232
(ariables \(e)-.325 F 1.231
(xported by the library\), this means that the)-.195 F 4.481(ya)-.195 G
1.231(re assigned a static)-4.481 F .417
(address at link time, and are accessed by absolute memory address.)
33.336 630 R 2.497 -1.04(We s)6.917 H .417(hould note here)1.04 F 1.365
(that e)33.336 645 R 1.365(xporting global v)-.195 F 1.365
(ariables from a library to the users of the library is a deprecated)
-.325 F 1.745(practice, because it is not inherently thread-safe.)33.336
660 R 1.745(And, in f)8.245 F 1.746(act, to mak)-.13 F 4.996(em)-.13 G
(ulti-threaded)-4.996 E 2.816(programming w)33.336 675 R 2.816
(ork correctly with the classic UNIX API, things such as)-.13 F F2
(errno)6.065 E F1(are)6.065 E
(actually macros which return thread-speci\214c v)33.336 690 Q
(ersions of the v)-.195 E(ariables.)-.325 E -.195(Fo)33.336 711 S 3.714
(rf).195 G .464(unctions e)-3.714 F .464(xported by the library)-.195 F
3.715(,t)-.845 G .465
(he user of the library \(static code\) is going to emit)-3.715 F F2
(call)33.336 726 Q F1 3.153(instructions \(X86 opcode, b)6.404 F 3.153
(ut generally e)-.26 F -.195(ve)-.325 G 3.153
(ry architecture has a call opcode\)).195 F .236
(which reference an absolute memory address.)33.336 741 R .236
(But, the e)6.736 F .236(xact absolute memory address of)-.195 F 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 18)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .378(the referenced function is not kno)33.336 120 R
.378(wn at link time.)-.325 F .378(Therefore, for te)6.878 F .378
(xt symbols that match)-.195 F .712
(up to a shared library at link time, the link)33.336 135 R .713
(er inserts some special magic.)-.13 F .713(It creates what)7.213 F
1.163(is kno)33.336 150 R 1.163(wn as the)-.325 F/F2 13/Times-Bold@0 SF
(Pr)4.413 E(ocedur)-.234 E 4.413(eL)-.234 G 1.163(inkage T)-4.413 F
(able)-1.196 E F1(\(PL)4.413 E 4.413(T\). This)-1.196 F 1.162
(is a series of)4.412 F/F3 13/Courier@0 SF(jmp)4.412 E F1(instructions,)
4.412 E -.26(bu)33.336 165 S 3.822(tt).26 G .572(he tar)-3.822 F .573
(get of the jump is not \214lled in until run-time.)-.234 F .573
(So, for e)7.073 F .573(xample, when the static)-.195 F .094
(user of the dynamic C library calls)33.336 180 R F3(printf)3.344 E F1
3.344(,t)C .093(hat symbolic reference is satis\214ed by a PL)-3.344 F
(T)-1.196 E(stub such as)33.336 195 Q/F4 10/Courier@0 SF 9.6
(printf: jmp)90.936 207 R(printf@LIBC)39.6 E F1 .806(and the relocation\
s table associated with the a.out contains an entry to cause the addres\
s)33.336 222 R 2.799(ultimately assigned to)33.336 237 R F2(printf)6.049
E F1 2.799(at run-time to be pok)6.049 F 2.798
(ed into that slot in the PL)-.13 F 7.972 -.962(T. W)-1.196 H(e)-.078 E
.086(therefore see that calls to shared library functions incur a sligh\
t additional o)33.336 252 R -.195(ve)-.195 G .087(rhead of the).195 F
(double jump.)33.336 267 Q 3.135 -1.04(We n)33.336 288 T 1.705 -.325
(ow c)1.04 H 1.055(ome to the issue of the dynamic portion of the code.)
.325 F 1.054(This comprises)7.554 F F3(.o)4.304 E F1(\214les)4.304 E
1.517(that ha)33.336 303 R 1.907 -.195(ve b)-.26 H 1.518
(een compiled with the special).195 F F3(-fpic)4.768 E F1 1.518
(\(position independent code\) \215ag, and)4.768 F .657(then link)33.336
318 R .657(ed with)-.13 F F3 .657(gcc -shared)3.907 F F1 7.157(.T)C .656
(his instructs the compiler that the intended run-time)-7.157 F(en)
33.336 333 Q 4.431(vironment is that of dynamically-loaded code.)-.52 F
4.432(Therefore, there are no absolute)10.932 F .949
(memory references whatsoe)33.336 348 R -.195(ve)-.325 G 5.629 -.715
(r. A).195 H 1.339 -.195(ny r).715 H .949
(eferences that are satis\214ed within a gi).195 F -.195(ve)-.325 G(n)
.195 E F3(.o)4.199 E F1(\214le,)4.199 E .517(such as static global v)
33.336 363 R .517(ariables, are handled by taking an of)-.325 F .518
(fset from the program counter)-.325 F(.)-.715 E .928
(Since the sizes of the te)33.336 378 R .928(xt, data and bss re)-.195 F
.927(gion of that gi)-.195 F -.195(ve)-.325 G 4.177(ns).195 G .927
(hared library are kno)-4.177 F .927(wn at)-.325 F 1.967
(the time that the shared library is b)33.336 393 R 1.968
(uilt, the link)-.26 F 1.968(er can insert the appropriate program-)-.13
F(counter)33.336 408 Q(-relati)-.26 E .39 -.195(ve o)-.325 H -.325(ff)
.195 G(sets at this time.).325 E .41(In order to access global v)33.336
429 R .409
(ariables which are also visible to the static portion of the code,)
-.325 F 1.927(another magic table is required, kno)33.336 444 R 1.927
(wn as the)-.325 F F2 1.927(Global Offset T)5.177 F(able)-1.196 E F1
(\(GO)5.177 E 5.177(T\). W)-.52 F 5.177(ed)-1.04 G(on')-5.177 E(t)-.234
E -.13(wa)33.336 459 S 1.551(nt to force).13 F F3(ld.so)4.801 E F1 1.551
(to ha)4.801 F 1.941 -.195(ve t)-.26 H 4.801(ob).195 G 1.55(ack-patch e)
-4.801 F -.195(ve)-.325 G 1.55(ry possible location of a reference to a)
.195 F .566(global v)33.336 474 R .566(ariable at run-time.)-.325 F .567
(Instead, the GO)7.067 F 3.817(Ti)-.52 G 3.817(sa)-3.817 G 3.817(na)
-3.817 G .567(rray of pointers.)-3.817 F .567(At link time, since)7.067
F .901(the absolute memory addresses of the globals are kno)33.336 489 R
.901(wn, the link)-.325 F .901(er populates this table.)-.13 F 1.423
(Then at run time, dynamic code accesses the global v)33.336 504 R 1.424
(ariables by \214rst \214nding the GO)-.325 F -.962(T,)-.52 G .416
(then loading the address of the correct v)33.336 519 R .416
(ariable from the appropriate slot in the GO)-.325 F 2.34 -.962(T, a)
-.52 H(nd).962 E(then \214nally dereferencing the pointer)33.336 534 Q
6.5(.T)-.715 G(hus there is a performance penalty)-6.5 E(.)-.845 E F2
(Alignment and P)201.302 579 Q(adding)-.13 E F1(Dif)33.336 615 Q 4.779
(ferent architectures impose dif)-.325 F 4.78
(ferent alignment restrictions.)-.325 F -.195(Fo)11.28 G 8.03(re).195 G
4.78(xample, on a)-8.225 F(SP)33.336 630 Q 3.188(ARC processor)-1.196 F
6.438(,a)-.52 G 3.187
(ccesses to ints/longs must be at memory addresses which are a)-6.438 F
.34(multiple of 4.)33.336 645 R -.78(Vi)6.84 G .34
(olation results in a f).78 F .34(atal run-time e)-.13 F 3.59
(xception. While)-.195 F .34(the X86 architecture)3.59 F .385
(is more for)33.336 660 R(gi)-.234 E .385(ving, better performance is o\
btained if 4-byte accesses are aligned on 4-byte)-.325 F(boundaries.)
33.336 675 Q .121(When laying out a structure and assigning of)33.336
696 R .122(fsets to its members, the compiler must use a)-.325 F
(recursi)33.336 711 Q 3.32 -.195(ve a)-.325 H 2.93
(lgorithm which is based on a lookup table gi).195 F 2.93
(ving the size and alignment)-.325 F .445
(constraints of the scalar data types.)33.336 726 R .445
(The compiler uses tw)6.945 F 3.696(og)-.13 G .446
(olden rules: 1\) The of)-3.696 F .446(fset of)-.325 F(an)33.336 741 Q
4.349(ym)-.195 G 1.099
(ember must be a multiple of the alignment restriction of that member)
-4.349 F 7.599(.E)-.715 G 1.099(.g. if the)-7.599 F 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 19)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .78(member is an int, the of)33.336 120 R .78
(fset must be a multiple of 4.)-.325 F .78
(2\) The total size of the structure is)7.28 F 2.224(such that were the\
 structure in an array of such structures, each element of the array)
33.336 135 R -.13(wo)33.336 150 S(uld be).13 E(gin at an of)-.195 E
(fset which satis\214es the most restricti)-.325 E .39 -.195(ve m)-.325
H(ember of the structure.).195 E 2.46(The compiler maintains an of)
33.336 171 R 2.46(fset counter)-.325 F 5.71(,w)-.52 G 2.46
(hich is initialized to 0 for each structure)-5.71 F 5.109
(de\214nition. 0)33.336 186 R 1.858(is clearly a multiple of an)5.108 F
5.108(ya)-.195 G 1.858(lignment boundary)-5.108 F 5.108(,a)-.845 G 1.858
(nd therefore rule #1 is)-5.108 F 2.23(satis\214ed at the start.)33.336
201 R 2.23(After inserting a member)8.73 F 5.48(,t)-.52 G 2.231(he of)
-5.48 F 2.231(fset counter is adv)-.325 F 2.231(anced by the)-.325 F
3.102(sizeof that member)33.336 216 R 9.602(.T)-.715 G 3.102
(hen before the ne)-9.602 F 3.102(xt member is inserted, the of)-.195 F
3.102(fset counter is)-.325 F .366(rounded up to the ne)33.336 231 R
.367(xt alignment boundary based on the constraints of that ne)-.195 F
.367(xt member)-.195 F(.)-.715 E(E.g. in the follo)33.336 246 Q(wing :)
-.325 E/F2 10/Courier@0 SF(struct example {)33.336 258 Q(int a;)90.936
270 Q(char b;)90.936 282 Q(int c;)90.936 294 Q(char d;)90.936 306 Q(};)
33.336 318 Q F1 .704(Assuming that ints are 4 bytes long and are aligne\
d on 4 byte boundaries, and that chars)33.336 333 R 1.825
(are 1 byte long and ha)33.336 348 R 2.215 -.195(ve n)-.26 H 5.075(oa)
.195 G 1.825(lignment constraint: Member a is clearly gi)-5.075 F -.195
(ve)-.325 G 5.076(no).195 G -.325(ff)-5.076 G 1.826(set 0.).325 F .341
(Member b is gi)33.336 363 R -.195(ve)-.325 G 3.591(no).195 G -.325(ff)
-3.591 G .341(set 4.).325 F .34(The of)6.84 F .34(fset counter is no)
-.325 F 3.59(w5)-.325 G 3.59(,b)-3.59 G .34(ut member c requires an of)
-3.85 F(fset)-.325 E .091(which is a multiple of 4.)33.336 378 R .092
(Therefore the counter is rounded up and c is gi)6.592 F -.195(ve)-.325
G 3.342(no).195 G -.325(ff)-3.342 G .092(set 8.).325 F(The)6.592 E
(space between b and c is w)33.336 393 Q(asted and is called)-.13 E/F3
13/Times-Bold@0 SF(padding)3.25 E F1(.)A(\()33.336 414 Q/F4 13
/Times-Italic@0 SF 2.716(Aside: on gcc compiler)B 2.715
(s, it is possible to use the dir)-.13 F 2.715(ective __pac)-.481 F -.13
(ke)-.26 G 2.715(d__ to for).13 F 2.715(ce the)-.481 F .591
(compiler to lay out the structur)33.336 429 R 3.841(ew)-.481 G .591
(ithout padding)-3.841 F 7.091(.T)-.195 G .591(his is often used to mak)
-7.091 F -7.09 3.841(ea s)-.13 H(tructur)-3.841 E(e)-.481 E(matc)33.336
444 Q 3.25(hap)-.195 G(hysical de)-3.25 E(vice mapped into memory)-.195
E 3.25(,o)-.715 G 3.25(rt)-3.25 G(he format of a network pr)-3.25 E
(otocol.)-.585 E F1(\))A 2.574
(When the last member is laid out, the compiler determines the w)33.336
465 R 2.574(orst-case alignment)-.13 F .949
(restriction among all the members.)33.336 480 R .949(The of)7.449 F
.949(fset counter is then rounded up \(if necessary\))-.325 F 1.171
(to satisfy that w)33.336 495 R 1.171(orst-case constraint.)-.13 F(The)
7.671 E/F5 13/Courier@0 SF(sizeof)4.421 E F1 1.171
(the structure type is this rounded-up)4.421 F -.325(va)33.336 510 S
6.463(lue. This).325 F(tak)6.463 E 3.213(es care of Rule #2 abo)-.13 F
-.195(ve)-.195 G 6.464(,a).195 G 3.214
(nd by satisfying that rule, Rule #1 will)-6.464 F(automatically be sat\
is\214ed for all members of all elements of an array of structures.)
33.336 525 Q 2.106(So, element d is gi)33.336 546 R -.195(ve)-.325 G
5.356(nt).195 G 2.106(he of)-5.356 F 2.106(fset 12, b)-.325 F 2.106
(ut in order to satisfy rule #2, padding must be)-.26 F .866
(inserted at the end, after element d.)33.336 561 R .866(Since the w)
7.366 F .867(orst-case alignment restriction is that of)-.13 F 2.374(th\
e int \(4 byte boundary\) 3 bytes of padding are added, making the tota\
l size of the)33.336 576 R(structure 16 bytes.)33.336 591 Q 1.725
(The algorithm abo)33.336 612 R 2.115 -.195(ve c)-.195 H 1.725
(an be applied recursi).195 F -.195(ve)-.325 G 1.726
(ly for structures which contain aggre).195 F -.065(ga)-.195 G(te).065 E
(data types \(structures, unions and arrays\) as members.)33.336 627 Q
.752(One can write a simple test program to determine the sizeof and al\
ignment of basic data)33.336 648 R(types:)33.336 663 Q F2
(#define S\(t\) struct {char a;t test;} s_##t)33.336 675 Q
(typedef int * ptr;)33.336 699 Q(typedef long long longlong ;)33.336 711
Q(typedef long double longdouble;)33.336 723 Q(S\(char\);)33.336 735 Q 0
Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 20)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(S\(short\);)33.336 117 Q(S\(int\);)33.336 129 Q
(S\(long\);)33.336 141 Q(S\(longlong\);)33.336 153 Q(S\(float\);)33.336
165 Q(S\(double\);)33.336 177 Q(S\(longdouble\);)33.336 189 Q(S\(ptr\);)
33.336 201 Q(main\(\))33.336 225 Q({)33.336 237 Q
(#define AS\(t\) printf\("%s size %d alignment %d",#t,\\)33.336 249 Q
(\(int\)sizeof\(s_##t.test\),\\)90.936 261 Q
(\(int\)\(\(char *\)&s_##t.test - \(char *\)&s_##t\)\))90.936 273 Q
(AS\(char\);)33.336 285 Q(AS\(short\);)33.336 297 Q(AS\(int\);)33.336
309 Q(AS\(long\);)33.336 321 Q(AS\(longlong\);)33.336 333 Q
(AS\(float\);)33.336 345 Q(AS\(double\);)33.336 357 Q(AS\(longdouble\);)
33.336 369 Q(AS\(ptr\);)33.336 381 Q(})33.336 393 Q/F2 13/Times-Bold@0
SF(Br)191.988 453 Q(oad vs narr)-.234 E .26 -.13(ow c)-.234 H(ompilers)
.13 E/F3 13/Times-Roman@0 SF .682(There are tw)33.336 489 R 3.932(od)
-.13 G(if)-3.932 E .682(ferent approaches to compiler design.)-.325 F
.682(One attempts to craft an optimal)7.182 F .821
(compiler for a speci\214c architecture or narro)33.336 504 R 4.071(wr)
-.325 G .821(ange of architectures.)-4.071 F .821(The other attempts)
7.321 F 1.836(to mak)33.336 519 R 5.086(eag)-.13 G 1.836
(eneral-purpose compiler which w)-5.086 F 1.836
(orks consistently across a broad range of)-.13 F 4.656
(architectures. The)33.336 534 R 1.406(gcc project is an e)4.656 F 1.406
(xample of the latter)-.195 F 4.656(,e)-.52 G(mplo)-4.656 E 1.406
(ying the front-end, IR,)-.13 F(optimizer)33.336 549 Q 3.25(,c)-.52 G
(ode generation architecture described throughout this course.)-3.25 E
2.582(The adv)33.336 570 R 2.582(antage of the former approach is it te\
nds to produce a more optimal output,)-.325 F 1.101(because it can adv)
33.336 585 R 1.101(ance certain decisions further forw)-.325 F 1.1
(ard in the compilation process, not)-.13 F(ha)33.336 600 Q(ving to w)
-.26 E(orry about re-tar)-.13 E(getability)-.234 E(.)-.845 E .117
(The adv)33.336 621 R .117
(antage of the latter approach is of course re-use of compiler code.)
-.325 F .117(This is not just)6.617 F 3.964(am)33.336 636 S .714
(atter of laziness.)-3.964 F .713(The ef)7.214 F .713
(fort which goes in to v)-.325 F .713(erifying the correctness of the v)
-.195 F(arious)-.325 E .019
(phases of the compiler is then reaped for man)33.336 651 R 3.27(yd)
-.195 G(if)-3.27 E .02(ferent tar)-.325 F .02(gets and se)-.234 F -.195
(ve)-.325 G .02(ral dif).195 F .02(ferent input)-.325 F(languages.)
33.336 666 Q 1.046(In designing such a broad compiler)33.336 687 R 4.296
<2c8c>-.52 G 1.046(nding an appropriate IR is challenging because of)
-4.296 F 2.548(the wide v)33.336 702 R 2.548(ariety of tar)-.325 F 2.548
(get architectures.)-.234 F 2.548
(It is not just a matter of renaming opcodes.)9.048 F
(There are substantial philosophical dif)33.336 717 Q
(ferences among processors.)-.325 E 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 21)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Bold@0 SF(CISC vs RISC)227.25 120 Q/F2 13/Times-Roman@0 SF
2.907(One of the basic distinctions is Comple)33.336 156 R 6.157(xI)
-.195 G 2.906(nstruction Set vs Reduced Instruction Set)-6.157 F 6.306
(design. The)33.336 171 R 3.056(CISC approach is older)6.306 F 6.306(,h)
-.52 G -.26(av)-6.306 G 3.056(ing e).26 F -.26(vo)-.325 G(lv).26 E 3.056
(ed from the days of hand-crafted)-.195 F(assembly)33.336 186 Q 7.79(.I)
-.845 G 4.54(tt)-7.79 G 1.29(ends to of)-4.54 F 1.289(fer man)-.325 F
2.979 -.845(y, c)-.195 H 1.289
(omplicated instructions and addressing modes, often).845 F 1.075
(with quirk)33.336 201 R 4.325(yr)-.195 G 1.076
(estrictions or optimizations which mak)-4.325 F 4.326(es)-.13 G 1.076
(ense to a human programmer b)-4.326 F(ut)-.26 E .18(are dif)33.336 216
R .18(\214cult to e)-.325 F .179(xpress to an optimizing compiler)-.195
F 6.679(.I)-.715 G 3.429(nc)-6.679 G .179(ontrast, RISC w)-3.429 F .179
(as an approach that)-.13 F(de)33.336 231 Q -.195(ve)-.325 G .152
(loped out of research into ho).195 F 3.403(wh)-.325 G(igh-le)-3.403 E
-.195(ve)-.325 G 3.403(ll).195 G .153
(anguages were being treated by compilers.)-3.403 F 1.277(It w)33.336
246 R 1.277(as designed with fe)-.13 F(wer)-.325 E 4.526(,s)-.52 G 1.276
(impler instructions and addressing modes.)-4.526 F 1.276(Whereas CISC)
7.776 F 1.059(instructions tend to be of v)33.336 261 R 1.059
(ariable size and e)-.325 F -.195(xe)-.195 G 1.06
(cution time, RISC instructions tend to be).195 F<8c78>33.336 276 Q
3.124(ed size and constant time.)-.195 F 3.124(This mak)9.624 F 3.124
(es it easier for a compiler to generate good)-.13 F 1.394
(assembly code, b)33.336 291 R 1.394(ut mak)-.26 F 1.395(es it more a)
-.13 F(wkw)-.195 E 1.395(ard for a human programmer)-.13 F 7.895(.W)
-.715 G 4.645(ew)-8.935 G 1.395(ill look at)-4.645 F(one e)33.336 306 Q
(xample of each approach.)-.195 E F1(The Intel X86 ar)193.736 351 Q
(chitectur)-.234 E(e)-.234 E F2 .091(X86 refers broadly to a f)33.336
387 R .091(amily of Intel \(and compatible\) microprocessors manuf)-.13
F .091(actured in)-.13 F .044(the last 25 years or so.)33.336 402 R .044
(It is also called the X86 architecture by Intel.)6.544 F .044
(The \214rst 32-bit X86)6.544 F 3.431(processor w)33.336 417 R 3.431
(as the 80386.)-.13 F 3.43(X86-64 is a 64-bit e)9.93 F 3.43
(xtension to X86.)-.195 F(Intel')9.93 E 6.68(si)-.715 G 6.68(saC)-6.68 G
(ISC)-6.68 E .508
(architecture which is a direct linear descendent of the v)33.336 432 R
.508(ery \214rst microprocessor)-.195 F 3.758(,t)-.52 G .508(he 4004)
-3.758 F(\(a 4-bit product\).)33.336 447 Q .3(There are man)33.336 468 R
3.55(yw)-.195 G .3(ho \214nd the X86 architecture to be a dinosaur)-3.55
F 3.55(,a)-.52 G .299(nd a badly designed one)-3.55 F .692
(at that, which should ha)33.336 483 R 1.082 -.195(ve l)-.26 H .692
(ong ago become e).195 F 3.943(xtinct. Ho)-.195 F(we)-.325 E -.195(ve)
-.325 G 1.733 -.52(r, I).195 H(BM').52 E 3.943(sc)-.715 G .693
(hoice of it for its)-3.943 F(\214rst personal computer sealed its f)
33.336 498 Q(ate as the most popular processor architecture.)-.13 E
1.514(The X86-64 architecture e)33.336 519 R 1.513
(xtends the 32-bit X86 to use 64-bit re)-.195 F 1.513
(gisters, while retaining)-.195 F(backw)33.336 534 Q
(ards compatibility with 32-bit X86 code.)-.13 E .172
(In the X86-32 model, with 32-bit re)33.336 555 R .172
(gisters, ints, longs and pointers are all 32 bits.)-.195 F .173(On the)
6.673 F 1.252(64-bit model, with re)33.336 570 R 1.252(gisters no)-.195
F 4.502(ww)-.325 G 1.252(idened to 64 bits, there are dif)-4.502 F 1.251
(ferent data type width)-.325 F 3.659(models. The)33.336 585 R .409
(one which is used on UNIX systems is sometimes called "LP-64", meaning)
3.659 F(longs and pointers are 64-bit, b)33.336 600 Q
(ut ints remain 32.)-.26 E(Belo)33.336 621 Q 3.458(wi)-.325 G 3.458(sas)
-3.458 G .208
(ummary of the X86/X86-64 architecture The reader is detoured to the of)
-3.458 F(\214cial)-.325 E(reference manuals for full details.)33.336 636
Q F1(X86 Register Model)212.099 681 Q F2 .403(When referring to X86 re)
33.336 717 R .403(gisters, their size is implied by a pre\214x.)-.195 F
-.195(Fo)6.903 G 3.653(re).195 G .403(xample, there is a)-3.848 F .393
(32-bit re)33.336 732 R .393(gister called EAX.)-.195 F .393
(The least signi\214cant 16 bits of that re)6.893 F .392
(gister are called AX.)-.195 F(It)6.892 E 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 22)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .162
(is possible to refer to the least signi\214cant byte as AL and the ne)
33.336 120 R .162(xt most signi\214cant byte as)-.195 F 5.264(AH. In)
33.336 135 R 2.013(the 64-bit X86-64 instruction set, the 64-bit v)5.264
F 2.013(ersion of EAX w)-.195 F 2.013(ould be called)-.13 F 3.25(RAX. W)
33.336 150 R 3.25(ew)-1.04 G(ill consider the 32-bit model.)-3.25 E .643
(The re)33.336 171 R .643(gister model of X86 is con)-.195 F -.26(vo)
-.52 G .644(luted and archaic, making ef).26 F .644(\214cient re)-.325 F
.644(gister allocation)-.195 F 4.683
(and instruction selection a challenge.)33.336 186 R 4.683(The follo)
11.183 F 4.683(wing general-purpose re)-.325 F 4.682(gisters are)-.195 F
(typically used for holding temporary v)33.336 201 Q
(alues, general inte)-.325 E(ger computation, etc.)-.195 E 3.25<8325>
33.336 216 S(eax: The "accumulator".)-3.25 E(Man)6.5 E 3.25(yi)-.195 G
(nstructions use %eax as an implied operand.)-3.25 E 3.25<8325>33.336
231 S(ebx: The "base re)-3.25 E
(gister" \(not to be confused with %ebp\).)-.195 E 3.25<8325>33.336 246
S(ecx: The "counter re)-3.25 E(gister".)-.195 E 3.25<8325>33.336 261 S
(edx: The "data re)-3.25 E(gister".)-.195 E 3.25<8325>33.336 276 S
(esi: Source re)-3.25 E(gister for string operations)-.195 E 3.25<8325>
33.336 291 S(edi: Destination re)-3.25 E(gister for string operations)
-.195 E(The follo)33.336 312 Q(wing special re)-.325 E
(gisters are used for control \215o)-.195 E(w:)-.325 E 4.753<8325>33.336
327 S 1.503(eip: The "instruction pointer", aka the Program Counter)
-4.753 F 8.003(.A)-.715 G 4.753(tt)-8.003 G 1.503
(he time of instruction)-4.753 F -.195(exe)33.336 342 S 2.385
(cution, %eip contains the address of the ne).195 F 2.385
(xt instruction to be fetched.)-.195 F 5.635(Ab)8.885 G(ranch)-5.635 E
1.961(instruction modi\214es %eip and causes the ne)33.336 357 R 1.961
(xt instruction to be fetched from that ne)-.195 F(w)-.325 E(address.)
33.336 372 Q 3.25<8325>33.336 387 S(esp: The stack pointer)-3.25 E(.)
-.715 E 3.366<8325>33.336 402 S .116(ebp: T)-3.366 F .115
(ypically used in the C / assembly language con)-1.04 F -.195(ve)-.52 G
.115(ntion for the stack frame "base).195 F 3.25(pointer". Aka)33.336
417 R(the "frame pointer".)3.25 E 5.466<8325>33.336 432 S 2.216
(e\215ags: The \215ags re)-5.466 F(gister)-.195 E 8.716(.I)-.715 G 5.466
(tc)-8.716 G 2.216(ontains the condition code \215ags \(carry)-5.466 F
5.466(,p)-.845 G(arity)-5.466 E 5.466(,B)-.845 G(CD)-5.466 E 1.69
(adjust, zero, signed, o)33.336 447 R -.195(ve)-.195 G(r\215o).195 E
1.69(w\) as well as a number of \215ags and control bits which are)-.325
F(generally used only by the operating system \(e.g. the Interupt Enabl\
e Flag\).)33.336 462 Q .999
(The X86 addressing scheme is based on an obsolete concept kno)33.336
483 R .999(wn as "se)-.325 F(gment/of)-.195 E(fset")-.325 E 6.556
(addressing. In)33.336 498 R 3.306
(all modern operating systems, program addresses are linear)6.556 F
6.555(,a)-.52 G 3.305(nd the)-6.555 F(se)33.336 513 Q 1.536
(gmentation is basically ignored.)-.195 F 1.536(The re)8.036 F 1.536
(gister model contains the re)-.195 F 1.537(gisters %cs, %ds,)-.195 F
1.102(%ss which are initialized by the operating system and should not \
be touched.)33.336 528 R(The)7.602 E 4.352(ya)-.195 G(re)-4.352 E 1.677
(what enable code, data and stack accesses to w)33.336 543 R 4.927
(ork. Additional)-.13 F(se)4.927 E 1.677(gment re)-.195 F 1.677
(gisters %es,)-.195 F 1.037(%fs and %gs are general-purpose and, becaus\
e a linear addressing model is being used,)33.336 558 R .425
(could be emplo)33.336 573 R .426(yed as general-purpose scratch re)-.13
F .426(gisters, subject to some restrictions as to)-.195 F 3.116
(which re)33.336 588 R 3.116(gisters may appear in which instructions.)
-.195 F(Ho)9.616 E(we)-.325 E -.195(ve)-.325 G 4.156 -.52(r, b).195 H
3.115(oth the %fs and %gs).52 F(re)33.336 603 Q 3.586
(gisters are used by the operating system and the standard library)-.195
F 6.836(,a)-.845 G 3.586(nd should be)-6.836 F -.26(avo)33.336 618 S
3.86(ided. In).26 F .61(addition, the)3.86 F 3.86(ya)-.195 G .61
(re 16-bit re)-3.86 F .61
(gisters so their utility as general-purpose re)-.195 F(gisters)-.195 E
(is dubious.)33.336 633 Q 1.843(There are man)33.336 654 R 5.093(ya)
-.195 G 1.843(dditional re)-5.093 F 1.843(gisters in the X86 model, b)
-.195 F 1.844(ut the)-.26 F 5.094(ya)-.195 G 1.844
(re either used by the)-5.094 F 4.918(operating system only)33.336 669 R
8.168(,o)-.845 G 8.168(ra)-8.168 G 4.918
(re for instructions that are be)-8.168 F 4.918(yond the scope of this)
-.195 F
(introduction, such as \215oating point, MMX, and SSE instructions.)
33.336 684 Q(On X86-64, there are additional general-purpose re)33.336
705 Q(gisters)-.195 E/F2 13/Courier@0 SF(%r8 - %r15)3.25 E F1(.)A 0 Cg
EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 23)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Bold@0 SF(Addr)215.992 120 Q(essing Modes)-.234 E/F2 13
/Times-Roman@0 SF .955(There are a number of addressing modes which are\
 used to specify where to \214nd or put)33.336 156 R
(the operands of an instruction:)33.336 171 Q 3.25<8352>33.336 186 S
-.195(eg)-3.25 G(ister Direct: Specify the re).195 E
(gister name with a % pre\214x, e.g. %eax.)-.195 E 3.25<8349>33.336 201
S(mmediate: The immediate v)-3.25 E(alue must be pre\214x)-.325 E
(ed with the dollar sign, e.g. $1)-.195 E 5.099<834d>33.336 216 S 1.849
(emory Absolute: The absolute address of the operand is speci\214ed wit\
hout a pre\214x)-5.099 F(quali\214er)33.336 231 Q 9.408(.E)-.715 G(.g.)
-9.408 E/F3 13/Courier@0 SF 2.908(movl $1,y)6.158 F F2(mo)6.159 E -.195
(ve)-.195 G 6.159(st).195 G 2.909(he immediate v)-6.159 F 2.909
(alue 1 into the memory address)-.325 F
(which is associated with the link)33.336 246 Q(er symbol y)-.13 E(.)
-.845 E 5.046<8342>33.336 261 S(ase-inde)-5.046 E 5.046(x\()-.195 G(Re)
-5.046 E 1.796(gister Indirect with of)-.195 F 1.796
(fset\): The X86 has a handy mode for accessing)-.325 F .66
(elements of an array)33.336 276 R 7.16(.T)-.845 G .661(he syntax is)
-7.16 F F3(disp\(%base,%index,scale\))3.911 E F2 3.911(.T)3.911 G .661
(he address of)-3.911 F 1.127(the operand is computed as)33.336 291 R F3
(addr=base+index*scale+disp)4.377 E F2 7.627(.T)C 1.126
(he base and inde)-7.627 F(x)-.195 E 1.574(may be an)33.336 306 R 4.824
(yo)-.195 G 4.824(ft)-4.824 G 1.575(he general-purpose re)-4.824 F 1.575
(gisters \(eax, ebx, ecx, edx, ebp, esi, edi, esp \(not)-.195 F(allo)
33.336 321 Q 1.391(wed as the inde)-.325 F 1.391
(x\)\). The displacement is a 32-bit absolute address.)-.195 F 1.391
(The scale f)7.891 F(actor)-.13 E 3.47(may be 1, 2, 4 or 8.)33.336 336 R
3.47(Some of these parameters may be omitted, forming simpler)9.97 F
.508(addressing modes.)33.336 351 R .508(E.g. in)7.008 F F3 .508
(movl $1, \(%eax\))7.008 F F2 .508(the eax re)3.758 F .508
(gister contains a pointer to a)-.195 F
(memory location, into which the immediate v)33.336 366 Q(alue 1 is mo)
-.325 E -.195(ve)-.195 G(d.).195 E/F4 10/Courier@0 SF(int a[10];)33.336
390 Q(int *p;)33.336 402 Q(struct X {int a,b;} *px;)33.336 414 Q(f\(\))
33.336 438 Q({)33.336 450 Q(int i;)39.336 462 Q(i=g\(\);)90.936 474 Q
(a[i]=1;)90.936 486 Q(p[i]=2;)90.936 498 Q(px[i].b++;)90.936 510 Q(})
33.336 522 Q(f:)33.336 558 Q 21.6(pushl %ebp)90.936 570 R 27.6
(movl %esp,)90.936 582 R(%ebp)6 E 27.6(subl $8,)90.936 594 R(%esp)6 E
27.6(call g)90.936 606 R 27.6(movl $1,)90.936 618 R(%edx)6 E 27.6
(movl %edx,)90.936 630 R 13.2(a\(,%eax,4\) #a[i]=1)6 F 27.6(movl p,)
90.936 642 R(%edx)6 E 27.6(movl $2,)90.936 654 R 7.2
(\(%edx,%eax,4\) #p[i]=2)6 F 27.6(movl px,)90.936 666 R(%edx)6 E 27.6
(incl 4\(%edx,%eax,8\))90.936 678 R(#wow, very optimized!)88.8 E 27.6
(movl %ebp,)90.936 690 R(%esp)6 E 27.6(popl %ebp)90.936 702 R(ret)90.936
714 Q 21.6(.size f,.Lfe1-f)90.936 726 R 21.6(.comm a,40,32)90.936 738 R
0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 24)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 21.6(.comm p,4,4)90.936 117 R 21.6(.comm px,4,4)90.936
129 R/F2 13/Times-Roman@0 SF 2.045(X86 is generally a 2-address archite\
cture, meaning that one of the operands is both a)33.336 144 R 2.815
(source and a destination.)33.336 159 R 2.815(There are man)9.315 F
6.065(yc)-.195 G 2.815(ombinations of src/dst addressing modes)-6.065 F
10.562(including some odd restrictions.)33.336 174 R 10.563
(Generally speaking, most opcodes allo)17.062 F(w)-.325 E(re)33.336 189
Q(gister/re)-.195 E(gister)-.195 E 21.285(,r)-.52 G -.195(eg)-21.285 G
18.034(ister/immediate, re).195 F 18.034
(gister/memory or immediate/memory)-.195 F 3.25
(combinations. Memory/memory)33.336 204 R(is generally not allo)3.25 E
(wed.)-.325 E/F3 13/Times-Bold@0 SF(X86/32 Function Calling Con)165.994
225 Q -.13(ve)-.52 G(ntion).13 E F2 2.532 -1.04(We w)33.336 261 T .453
(ill discuss what the Intel documentation calls the CDECL con)1.04 F
-.195(ve)-.52 G .453(ntion for procedure).195 F .577
(calling, as that is what is used in the C/UNIX w)33.336 276 R 3.827
(orld. Other)-.13 F .577(calling con)3.827 F -.195(ve)-.52 G .577
(ntions do e).195 F(xist.)-.195 E 1.159
(In the X86/UNIX architecture, all ar)33.336 291 R 1.159
(guments to a function are pushed on the stack, and)-.234 F .267
(the return v)33.336 306 R .267(alue is returned in the %eax re)-.325 F
(gister)-.195 E 6.767(.I)-.715 G 3.517(ft)-6.767 G .267(he return v)
-3.517 F .267(alue is 64 bits \(long long\),)-.325 F .257
(it is returned in the re)33.336 321 R .258
(gister pair %edx:%eax, with the %edx being the most signi\214cant 32)
-.195 F 3.264(bits. Floating)33.336 336 R .014(point return v)3.264 F
.014(alues are returned in the \215oating point re)-.325 F .014
(gisters \(\215oating point)-.195 F 3.918
(operations are not discussed in these notes\).)33.336 351 R 3.919
(Returning a struct requires a special)10.418 F(con)33.336 366 Q -.195
(ve)-.52 G(ntion, discussed belo).195 E -.845(w.)-.325 G 2.065
(Recall that %esp is the stack pointer)33.336 387 R 5.314(,a)-.52 G
2.064(nd the stack gro)-5.314 F 2.064(ws to)-.325 F -.13(wa)-.325 G
2.064(rds lo).13 F 5.314(wm)-.325 G(emory)-5.314 E 8.564(.T)-.845 G(he)
-8.564 E 3.399(PUSH instruction predecrements the stack pointer)33.336
402 R 6.649(,t)-.52 G 3.399(hen writes the v)-6.649 F 3.399
(alue to \(%esp\).)-.325 F(Lik)33.336 417 Q -.325(ew)-.13 G 1.539
(ise, POP reads from \(%esp\) and then postincrements %esp.).325 F(Ar)
8.038 E 1.538(guments in C are)-.234 F 3.526
(pushed to the stack in right-to-left order)33.336 432 R 10.026(.T)-.715
G 3.527(herefore, just before issuing the CALL)-10.026 F 2.433
(instruction, the leftmost ar)33.336 447 R 2.433
(gument is on the top of the stack.)-.234 F 2.433(This con)8.933 F -.195
(ve)-.52 G 2.433(ntion allo).195 F(ws)-.325 E -.325(va)33.336 462 S
1.848(riadic functions to w).325 F 1.849(ork properly)-.13 F 8.349(.T)
-.845 G 1.849(he callee does not need to kno)-8.349 F 5.099(wi)-.325 G
5.099(na)-5.099 G(dv)-5.099 E 1.849(ance \(at)-.325 F .478
(compile time\) the e)33.336 477 R .478(xact number of ar)-.195 F .478
(guments which will be pushed.)-.234 F .477(It is able to retrie)6.977 F
-.195(ve)-.325 G(the ar)33.336 492 Q(guments left-to-right by positi)
-.234 E .39 -.195(ve o)-.325 H -.325(ff).195 G(sets from %esp.).325 E
2.529(The CALL instruction pushes the v)33.336 513 R 2.53
(alue of %eip, thus on entry to a function \(%esp\))-.325 F .698(contai\
ns the address of the instruction to which control should return \(i.e.\
 the instruction)33.336 528 R .963(after the CALL\).)33.336 543 R .963
(The \214rst thing an)7.463 F 4.214(yf)-.195 G .964
(unction does is set up its local stack frame.)-4.214 F(Let')7.464 E(s)
-.715 E(look at an e)33.336 558 Q(xample:)-.195 E/F4 8/Courier@0 SF 1.2
(f1\(\))33.936 570 S({)33.936 582 Q 1.2(f2\(2\);)81.936 594 S(})33.936
606 Q 1.2(f2\(int b\))33.936 630 S({)33.936 642 Q 1.2(int a;)33.936 654
S 1.2(a++;)81.936 666 S 1.2(b--;)81.936 678 S 1.2(return 1;)81.936 690 S
(})33.936 702 Q 1.2(f1:)33.936 729 S 12 1.2(pushl %ebp)81.936 741 T 0 Cg
EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 25)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
8/Courier@0 SF 18 1.2(movl %esp,)81.936 117 T 1.2(%ebp)6 G 18 1.2
(subl $8,)81.936 129 T 90 1.2(%esp !one)6 H 1.2
(arg slot + one padding slot)6 G 18 1.2(movl $2,)81.936 141 T 78 1.2
(\(%esp\) !put)6 H 1.2(arg onto stack)6 G 18 1.2(call f2)81.936 153 T
1.2(leave)81.936 165 S 1.2(ret)81.936 177 S 1.2(f2:)33.936 201 S 12 1.2
(pushl %ebp)81.936 213 T 18 1.2(movl %esp,)81.936 225 T 1.2(%ebp)6 G 18
1.2(subl $16,)81.936 237 T 84 1.2(%esp !extra)6 H 1.2
(space for alignment)6 G 18 1.2(incl -4\(%ebp\))81.936 249 T 1.2
(!access local var a)96 G 18 1.2(decl 8\(%ebp\))81.936 261 T 1.2
(!access param b)102 G 18 1.2(movl $1,%eax)81.936 273 T 1.2
(!return value)102 G 1.2(leave)81.936 285 S 1.2(ret)81.936 297 S/F2 13
/Times-Roman@0 SF .049(The %ebp re)33.336 318 R .049
(gister is the frame pointer)-.195 F 3.299(,a)-.52 G .049
(nd will be used to access both local v)-3.299 F .048(ariables and)-.325
F 3.46(parameters. Its)33.336 333 R -.325(va)3.46 G .21
(lue must be preserv).325 F .21(ed so the \214rst action is to sa)-.195
F .601 -.195(ve i)-.26 H 3.461(to).195 G 3.461(nt)-3.461 G .211
(he stack.)-3.461 F(Then)6.711 E 2.604
(the stack pointer is decremented to create room for local v)33.336 348
R 5.854(ariables. In)-.325 F 2.604(our e)5.854 F(xample,)-.195 E .234
(function g has one local v)33.336 363 R .235(ariable which tak)-.325 F
.235(es up 4 bytes.)-.13 F .235(The %ebp contains the v)6.735 F .235
(alue of)-.325 F 2.029(the stack pointer after sa)33.336 378 R 2.029
(ving the old %ebp.)-.26 F 2.029
(Therefore 4\(%ebp\) is the return address,)8.529 F 2.246
(\(%ebp\) is the sa)33.336 393 R -.195(ve)-.26 G 5.496(d%).195 G 2.246
(ebp, and the \214rst parameter is 8\(%ebp\).)-5.496 F -.195(Pa)8.746 G
2.247(rameters will be at).195 F(positi)33.336 408 Q 2.995 -.195(ve o)
-.325 H -.325(ff).195 G 2.605(sets from %ebp and local v).325 F 2.604
(ariables will be at ne)-.325 F -.065(ga)-.195 G(ti).065 E 2.994 -.195
(ve o)-.325 H -.325(ff).195 G 5.854(sets. Generally).325 F 1.311
(speaking, the local v)33.336 423 R 1.311
(ariables mentioned \214rst in a function will ha)-.325 F 1.701 -.195
(ve t)-.26 H 1.311(he lo).195 F 1.311(west memory)-.325 F
(address \(i.e. highest ne)33.336 438 Q -.065(ga)-.195 G(ti).065 E .39
-.195(ve o)-.325 H -.325(ff).195 G(set from %ebp\), b).325 E
(ut that beha)-.26 E(vior is not guaranteed.)-.26 E .177
(When a function call is made, ar)33.336 459 R .177
(guments can be pushed on the stack in right-to-left order)-.234 F(,)
-.52 E .07(using the)33.336 474 R/F3 13/Courier@0 SF -1.8(pushl)2.42 G
F2 3.32(instruction. After)4.22 F(the)3.321 E F3 -1.8(CALL)2.421 G F2
.071(instruction, an)4.221 F F3 .071 -1.8(addl $X,%esp)2.421 H F2 -.13
(wo)4.221 G .071(uld be needed).13 F 1.202
(to adjust the stack pointer and re)33.336 489 R -.195(ve)-.325 G 1.202
(rse the ef).195 F 1.202(fects of the pre)-.325 F 1.202(vious pushes.)
-.325 F(Alternati)7.702 E -.195(ve)-.325 G(ly).195 E(,)-.845 E 2.6(one \
could determine during code generation which function call \(within the\
 function)33.336 504 R 3.637
(being generated\) has the highest number of ar)33.336 519 R 6.887
(guments. The)-.234 F 3.636(number of bytes thus)6.887 F .179
(required for passing ar)33.336 534 R .18
(guments can be added to the total local stack frame size, as if these)
-.234 F("ar)33.336 549 Q .156(gument slots" were hidden local v)-.234 F
3.406(ariables. Then)-.325 F .156(the ar)3.406 F .156
(guments can be passed via)-.234 F F3 -1.8(movl)2.505 G -1.8
(OFFSET\(%esp\))32.436 564 S F2 4.029(,i).9 G 4.029(na)-4.029 G 1.169
-.195(ny o)-4.029 H .78
(rder desired, and there is no need to adjust the stack pointer after)
.195 F(the call.)33.336 579 Q(This is the approach that gcc tak)6.5 E
(es, and that is seen in the asm code abo)-.13 E -.195(ve)-.195 G(.).195
E .485(Upon lea)33.336 600 R .485(ving a function, the LEA)-.26 F .484
(VE instruction is used, which performs tw)-1.755 F 3.734(oo)-.13 G
(perations:)-3.734 E .747(%ebp is mo)33.336 615 R -.195(ve)-.195 G 3.997
(di).195 G .747(nto %esp, thus restoring the stack pointer to its v)
-3.997 F .748(alue just after the base)-.325 F(pointer sa)33.336 630 Q
.39 -.195(ve o)-.26 H 3.25(ne).195 G(ntry)-3.25 E 3.25(,t)-.845 G
(hen %ebp is popped from the stack.)-3.25 E(I.e. LEA)6.5 E(VE is equi)
-1.755 E -.325(va)-.325 G(lent to).325 E/F4 10/Courier@0 SF 27.6
(movl %ebp,%esp)33.336 642 R 27.6(popl %ebp)33.336 654 R F2(No)33.336
669 Q 5.209(we)-.325 G -.195(ve)-5.534 G 1.959(rything is restored, and\
 the RET instruction pops the return address from the).195 F
(stack and resumes e)33.336 684 Q -.195(xe)-.195 G(cution in the caller)
.195 E(.)-.715 E .362(If the compiler chose to use an)33.336 705 R 3.612
(yr)-.195 G -.195(eg)-3.612 G .362(isters which are callee-sa).195 F
-.195(ve)-.26 G .362(s, we w).195 F .363(ould see pushes of)-.13 F
(those re)33.336 720 Q(gisters on entry and corresponding pops on e)
-.195 E(xit.)-.195 E 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 26)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E 0 0
468 498 -507.47 540 33.336 627.47 PBEGIN
%%BeginDocument: x86stack.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: x86stack.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Dec  1 01:28:12 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 498 540
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 498 0 lineto 498 540 lineto closepath clip newpath
-81.0 571.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 2400 900 m 4200 900 l 4200 1500 l 2400 1500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 1050 m
 4200 1050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1200 m
 4200 1200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1350 m
 4200 1350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 1500 m 4200 1500 l 4200 2100 l 2400 2100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 1650 m
 4200 1650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1800 m
 4200 1800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1950 m
 4200 1950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 2100 m 4200 2100 l 4200 2700 l 2400 2700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 2250 m
 4200 2250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 2400 m
 4200 2400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 2550 m
 4200 2550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 2700 m 4200 2700 l 4200 3300 l 2400 3300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 2850 m
 4200 2850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3000 m
 4200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3150 m
 4200 3150 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 3300 m 4200 3300 l 4200 3900 l 2400 3900 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 3450 m
 4200 3450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3600 m
 4200 3600 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 3750 m
 4200 3750 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 3900 m 4200 3900 l 4200 4500 l 2400 4500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 4050 m
 4200 4050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4200 m
 4200 4200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4350 m
 4200 4350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 4500 m 4200 4500 l 4200 5100 l 2400 5100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 4650 m
 4200 4650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4800 m
 4200 4800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 4950 m
 4200 4950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 5100 m 4200 5100 l 4200 5700 l 2400 5700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 5250 m
 4200 5250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 5400 m
 4200 5400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 5550 m
 4200 5550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 5700 m 4200 5700 l 4200 6300 l 2400 6300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 5850 m
 4200 5850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6000 m
 4200 6000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6150 m
 4200 6150 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 6300 m 4200 6300 l 4200 6900 l 2400 6900 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 6450 m
 4200 6450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6600 m
 4200 6600 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 6750 m
 4200 6750 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 6900 m 4200 6900 l 4200 7500 l 2400 7500 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 7050 m
 4200 7050 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7200 m
 4200 7200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7350 m
 4200 7350 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 7500 m 4200 7500 l 4200 8100 l 2400 8100 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 7650 m
 4200 7650 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7800 m
 4200 7800 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7950 m
 4200 7950 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 8100 m 4200 8100 l 4200 8700 l 2400 8700 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 8250 m
 4200 8250 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 8400 m
 4200 8400 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 8550 m
 4200 8550 l gs col0 s gr  [] 0 sd
% Polyline
n 2400 8700 m 4200 8700 l 4200 9300 l 2400 9300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2400 8850 m
 4200 8850 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 9000 m
 4200 9000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 9150 m
 4200 9150 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
4260 6345 m 4260 6405 l 4412 6405 l 4292 6375 l 4412 6345 l cp
eoclip
n 5250 6375 m
 4275 6375 l gs col0 s gr gr

% arrowhead
n 4412 6345 m 4292 6375 l 4412 6405 l  col0 s
% Polyline
n 2250 2775 m 2025 3150 l 2025 4725 l 1950 4875 l 2025 5100 l 2025 7050 l

 2175 7350 l gs col0 s gr 
% Polyline
gs  clippath
4260 2745 m 4260 2805 l 4412 2805 l 4292 2775 l 4412 2745 l cp
eoclip
n 5250 2775 m
 4275 2775 l gs col0 s gr gr

% arrowhead
n 4412 2745 m 4292 2775 l 4412 2805 l  col0 s
% Polyline
gs  clippath
4255 4097 m 4264 4156 l 4414 4132 l 4291 4122 l 4404 4073 l cp
eoclip
n 5700 3900 m
 4275 4125 l gs col0 s gr gr

% arrowhead
n 4404 4073 m 4291 4122 l 4414 4132 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4260 7470 m 4260 7530 l 4412 7530 l 4292 7500 l 4412 7470 l cp
eoclip
n 5250 7500 m
 4275 7500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4412 7470 m 4292 7500 l 4412 7530 l  col0 s
/Times-Roman ff 200.00 scf sf
2775 675 m
gs 1 -1 sc (LOW MEMORY) col0 sh gr
/Times-Roman ff 200.00 scf sf
2700 9525 m
gs 1 -1 sc (HIGH MEMORY) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 8325 m
gs 1 -1 sc  345.0 rot (arg2) col0 sh gr
/Times-Bold ff 233.33 scf sf
2925 8925 m
gs 1 -1 sc  345.0 rot (arg3) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 7725 m
gs 1 -1 sc  345.0 rot (arg1) col0 sh gr
/Times-Bold ff 233.33 scf sf
3000 7050 m
gs 1 -1 sc  345.0 rot (return) col0 sh gr
/Times-Bold ff 233.33 scf sf
2925 7275 m
gs 1 -1 sc  345.0 rot (address) col0 sh gr
/Times-Bold ff 233.33 scf sf
3075 6450 m
gs 1 -1 sc  345.0 rot (saved) col0 sh gr
/Times-Bold ff 233.33 scf sf
2997 6740 m
gs 1 -1 sc  345.0 rot (%ebp) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 5925 m
gs 1 -1 sc  345.0 rot (c) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 5325 m
gs 1 -1 sc  345.0 rot (b) col0 sh gr
/Times-Bold ff 233.33 scf sf
3150 4725 m
gs 1 -1 sc  345.0 rot (a) col0 sh gr
/Times-Bold ff 233.33 scf sf
2775 4200 m
gs 1 -1 sc  345.0 rot (padding) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 6375 m
gs 1 -1 sc (%ebp) col0 sh gr
/Times-Bold ff 233.33 scf sf
2700 3600 m
gs 1 -1 sc  345.0 rot (arg slot 2) col0 sh gr
/Times-Bold ff 233.33 scf sf
2700 3000 m
gs 1 -1 sc  345.0 rot (arg slot 1) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 2850 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 5400 m
gs 1 -1 sc (g\(\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 5025 m
gs 1 -1 sc (for) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 4575 m
gs 1 -1 sc (frame) col0 sh gr
/Times-Roman ff 233.33 scf sf
1350 4200 m
gs 1 -1 sc (stack) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 3825 m
gs 1 -1 sc (If additional space were needed) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4110 m
gs 1 -1 sc (for more local variables or temp) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4395 m
gs 1 -1 sc (values, they would be allocated in) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4680 m
gs 1 -1 sc (here, with padding necessary to bring) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 4965 m
gs 1 -1 sc (the total stack frame size to a multiple) col0 sh gr
/Times-Roman ff 233.33 scf sf
5775 5250 m
gs 1 -1 sc (of 16.) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 7125 m
gs 1 -1 sc (f\(\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 7410 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 7575 m
gs 1 -1 sc (/*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 7860 m
gs 1 -1 sc (g\(arg1,arg2,arg3\);) col0 sh gr
/Times-Roman ff 233.33 scf sf
7350 8145 m
gs 1 -1 sc (/*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
7050 8325 m
gs 1 -1 sc (}) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 1650 m
gs 1 -1 sc (g\(x,y,z\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 1935 m
gs 1 -1 sc ({) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2220 m
gs 1 -1 sc ( int a,b,c;) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2505 m
gs 1 -1 sc ( /*...*/) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 2790 m
gs 1 -1 sc (    z\(1,2\);) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 3075 m
gs 1 -1 sc ( .*...*.) col0 sh gr
/Times-Roman ff 233.33 scf sf
6825 3360 m
gs 1 -1 sc (}) col0 sh gr
/Times-Roman ff 233.33 scf sf
5250 3000 m
gs 1 -1 sc (\(during exec) col0 sh gr
/Times-Roman ff 233.33 scf sf
5250 3285 m
gs 1 -1 sc ( of fn. g\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
5475 6675 m
gs 1 -1 sc (\(during exec. of fn. g\)) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 7500 m
gs 1 -1 sc (%esp just) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 7785 m
gs 1 -1 sc (before calling) col0 sh gr
/Times-Roman ff 233.33 scf sf
5400 8070 m
gs 1 -1 sc (fn. g) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF .942
(Note that classic C widened char and short before passing.)33.336
648.47 R .942(C89/C99 does not do this if)7.442 F .084
(there is a prototype for the called function, e.g. v)33.336 663.47 R
.085(oid f\(char)-.26 F 3.335(,char\). Ho)-.52 F(we)-.325 E -.195(ve)
-.325 G 1.125 -.52(r, t).195 H .085(he caller still).52 F .122
(passes the ar)33.336 678.47 R .122(guments as 32 bit v)-.234 F .121
(alues, with the more signi\214cant bits zeroed \(for unsigned\))-.325 F
(or sign-e)33.336 693.47 Q 3.25(xtended. Floats)-.195 F
(are passed as 32-bit, doubles are 64-bit.)3.25 E .074
(When passing whole structs as ar)33.336 714.47 R .074(guments, the)
-.234 F 3.324(ya)-.195 G .074(re pushed onto the stack in re)-3.324 F
-.195(ve)-.325 G .075(rse order).195 F(.)-.715 E(So:)33.336 729.47 Q/F2
10/Courier@0 SF(struct s {int a,b;} s1;)39.336 741.47 Q 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 27)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(fn\(s1\);)39.336 117 Q/F2 13/Times-Roman@0 SF
(is the same as)33.336 147 Q F1(fn\(s1.b,s1.a\);)33.336 159 Q F2 1.101
(Since the leftmost parameter winds up at the lo)33.336 180 R 1.101
(west memory address, this preserv)-.325 F 1.101(es the)-.195 F(address\
ability of the entire structure on the stack in the correct order)33.336
195 Q(.)-.715 E .57(If a function returns a structure, the CALLER must \
allocate an area on its stack frame to)33.336 216 R .386
(hold the return v)33.336 231 R 3.636(alue. Then)-.325 F .386
(it passes a hidden \214rst parameter which is the address of this)3.636
F(area.)33.336 246 Q F1(struct s *g\(\))45.336 258 Q({)45.336 270 Q(})
45.336 294 Q(s1=g\(\);)45.336 318 Q F2(is the same as)33.336 333 Q F1
(struct s temp;)45.336 345 Q(g\(&temp\);)90.936 357 Q/F3 13/Times-Bold@0
SF(X86-64 Function Calling)199.079 387 Q F2 .877
(Under the 64 bit architecture, the \214rst 6 inte)33.336 423 R .878
(ger ar)-.195 F .878(guments are passed in re)-.234 F .878
(gisters, rather)-.195 F 2.012(than on the stack.)33.336 438 R(Ar)8.512
E 2.012(guments are placed in left-to-right order in re)-.234 F 2.012
(gisters %rdi, %rsi,)-.195 F .349(%rdx, %rcx, %r8, %r9.)33.336 453 R
.349(If there are additional ar)6.849 F .349(guments, the)-.234 F 3.599
(ya)-.195 G .35(re put on the stack right-)-3.599 F .253
(to-left, i.e. with the right-most ar)33.336 468 R .253
(gument at the highest memory address, just lik)-.234 F 3.503(eX)-.13 G
(86-32.)-3.503 E .067(If structs are passed as ar)33.336 483 R .067
(guments, the)-.234 F 3.318(ya)-.195 G .068(re al)-3.318 F -.13(wa)-.13
G .068(ys placed on the stack.).13 F .068(The inte)6.568 F .068
(ger return)-.195 F -.325(va)33.336 498 S(lue is in the %rax re).325 E
(gister)-.195 E(.)-.715 E 1.404(This h)33.336 519 R 1.404(ybrid re)-.065
F 1.404(gister/memory ar)-.195 F 1.404
(gument passing model introduces some comple)-.234 F 1.404(xity with)
-.195 F -.325(va)33.336 534 S(riadic functions, aka).325 E/F4 13
/Courier@0 SF -1.8(<stdarg.h>)2.35 G F2 6.5(.G).9 G(CC implements)-6.5 E
F4 -1.8(stdarg)2.35 G F2(as a compiler b)4.15 E(uilt-in.)-.26 E F3
(X86-64 Global V)199.32 564 Q(ariables)-1.196 E F2 .672(There is an odd\
 limitation in the X86-64 instruction set: the absolute addressing mode\
 is)33.336 600 R 2.79(not supported for 64-bit addresses.)33.336 615 R
4.87 -1.04(To a)9.29 H 2.789(ccess a memory operand, a re)1.04 F 2.789
(gister indirect)-.195 F(addressing mode must be used.)33.336 630 Q F1
(extern int i;)33.336 642 Q(f\(\))33.336 666 Q({)33.336 678 Q(i=2;)
90.936 690 Q(})33.336 702 Q(f:)33.336 726 Q 12(pushq %rbp)81.336 738 R
(#Prologue, save base pointer)168 E 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 28)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 18(movq %rsp,)81.336 117 R 68.4(%rbp #Set)6 F
(new base pointer)6 E 37.2(subq $32,)81.336 129 R 55.2(%rsp #Create)6 F
(stack frame)6 E 18(movl $2,)81.336 141 R 62.4(i\(%rip\) #Program)6 F
(Counter Relative mode)6 E(leave)81.336 153 Q(ret)81.336 165 Q/F2 13
/Times-Roman@0 SF .267(There will be a 32-bit "hole" in the)33.336 198 R
/F3 13/Courier@0 SF -1.8(movl)2.617 G F2 .267
(opcode which will be a program counter relati)4.417 F -.195(ve)-.325 G
.667(relocation type \(similar to the e)33.336 213 R .666
(xample of the CALL opcode earlier in this unit\).)-.195 F .666(At link)
7.166 F .586(time, when the address of symbol i has been resolv)33.336
228 R .587(ed, this hole will be \214lled with the i')-.195 F(s)-.715 E
(address, minus the address of the hole itself.)33.336 243 Q 2.484
(This introduces a limitation that code and data must f)33.336 264 R
2.484(all within the same contiguous)-.13 F .111(+/-2GB memory re)33.336
279 R .111(gion at run time.)-.195 F .111
(gcc calls this the "small" memory model and it is the)6.611 F(def)
33.336 294 Q 1.48(ault option.)-.13 F 3.56 -1.04(To u)7.98 H 1.479
(se a "lar)1.04 F 1.479(ge" memory model where code and data may be an)
-.234 F(yplace)-.195 E 2.218(within the 64-bit address space, in)33.336
309 R -.26(vo)-.52 G 2.478 -.13(ke g).26 H 2.218(cc with the).13 F F3
-1.8(-cmodel=large)4.569 G F2 5.469(option. Dif)6.369 F(ferent)-.325 E
(opcodes are no)33.336 324 Q 3.25(wu)-.325 G(sed:)-3.25 E F1 19.2
(movabsq $i,)81.336 336 R 61.2(%rax #Move)6 F
(64 bit immediate value to rax)6 E 18(movl $2,)81.336 348 R 68.4
(\(%rax\) #Register)6 F(indirect)6 E/F4 13/Times-Bold@0 SF
(Caller/Callee sa)215.03 393 Q -.13(ve)-.325 G(s).13 E F2 1.777
(It is the case for an)33.336 429 R 5.027(ya)-.195 G 1.776
(rchitecture and operating system that there is a function calling)
-5.027 F("con)33.336 444 Q -.195(ve)-.52 G 1.046
(ntion" which speci\214es ho).195 F 4.296(wa)-.325 G -.234(rg)-4.296 G
1.046(uments are passed and returned, and ho).234 F 4.296(wr)-.325 G
-.195(eg)-4.296 G(isters).195 E 1.413(may be used.)33.336 459 R 1.413
(This con)7.913 F -.195(ve)-.52 G 1.412(ntion dictates which of the re)
.195 F 1.412(gisters are e)-.195 F 1.412(xpected to survi)-.195 F 1.802
-.195(ve a)-.325 H 3.125
(function call, and which ones may be used as "scratch" re)33.336 474 R
3.125(gisters, and are therefore)-.195 F -.195(ex)33.336 489 S 2.215
(pected to be v).195 F 2.215(olatile across function calls.)-.26 F 2.215
(Another w)8.715 F 2.214(ay of saying this is there are)-.13 F(caller)
33.336 504 Q(-sa)-.26 E -.195(ve)-.26 G 4.592(dr).195 G -.195(eg)-4.592
G 1.342(isters \(the scratch re).195 F 4.593(gisters.. if)-.195 F 1.343
(the caller w)4.593 F 1.343(ants to k)-.13 F 1.343(eep a v)-.13 F 1.343
(alue in there)-.325 F .769(through a function call it must e)33.336 519
R .769(xplicitly sa)-.195 F 1.159 -.195(ve i)-.26 H .769
(t\) and callee-sa).195 F -.195(ve)-.26 G 4.019(dr).195 G -.195(eg)
-4.019 G .768(isters \(if a function).195 F -.13(wa)33.336 534 S .549
(nts to use one of these re).13 F .55(gisters it must e)-.195 F .55
(xplicitly sa)-.195 F .94 -.195(ve i)-.26 H 3.8(to).195 G 3.8(ne)-3.8 G
.55(ntry and restore it before)-3.8 F(returning\).)33.336 549 Q 2.855
(In the X86 architecture under UNIX, the %eax,%ecx,and %edx re)33.336
570 R 2.855(gisters are scratch)-.195 F(re)33.336 585 Q .777
(gisters \(caller)-.195 F(-sa)-.26 E -.195(ve)-.26 G 4.027(s\). Y).195 F
.777(ou will \214nd that the compiler tends to put short-li)-1.43 F
-.195(ve)-.325 G 4.027(dv).195 G .777(alues in)-4.352 F 2.782(these re)
33.336 600 R 6.032(gisters. Of)-.195 F 2.782(course the %e\215ags re)
6.032 F 2.782(gister is also e)-.195 F 2.782
(xpected to be modi\214ed by a)-.195 F 3.799(function call.)33.336 615 R
3.799(The %ebx,%edi,%esi and %es [CA)10.299 F 3.8
(UTION: this is a 16-bit re)-.715 F(gister])-.195 E(re)33.336 630 Q
1.361(gisters are callee-sa)-.195 F -.195(ve)-.26 G 4.611(d. The).195 F
1.361(compiler may use these for longer)4.611 F(-li)-.26 E -.195(ve)
-.325 G 4.61(dv).195 G 1.36(alues \(such as)-4.935 F .92(local v)33.336
645 R .92(ariables which are assigned to a re)-.325 F .921
(gister for all or part of the function to impro)-.195 F -.195(ve)-.195
G 4.333(speed\). Ho)33.336 660 R(we)-.325 E -.195(ve)-.325 G 2.123 -.52
(r, i).195 H 4.333(fo).52 G 1.082(ne of these re)-4.333 F 1.082
(gisters is used by the compiler)-.195 F 4.332(,i)-.52 G 4.332(tm)-4.332
G 1.082(ust emit code to)-4.332 F(push it on the stack on entry)33.336
675 Q 3.25(,a)-.845 G(nd pop it on return.)-3.25 E 4.917
(On X86-64, the caller)33.336 696 R(-sa)-.26 E 5.307 -.195(ve \()-.26 H
4.917(scratch\) re).195 F 4.918
(gisters are %rax,%rcx,%rdx,%rsi,%rdi, and)-.195 F 1.307
(%r8-%r11, while the callee-sa)33.336 711 R 1.697 -.195(ve \()-.26 H
1.307(long-term\) re).195 F 1.306(gisters are %rbx, %r12-%r15.)-.195 F
1.306(Note that)7.806 F .484(%rsi and %rdi are caller)33.336 726 R(-sa)
-.26 E .874 -.195(ve o)-.26 H 3.734(n6).195 G 3.734(4b)-3.734 G .484
(it, whereas the)-3.734 F 3.735(yw)-.195 G .485(ere callee-sa)-3.735 F
.875 -.195(ve o)-.26 H 3.735(n3).195 G 3.735(2-bit. This)-3.735 F(is)
3.735 E(because the)33.336 741 Q 3.25(ya)-.195 G(re used for ar)-3.25 E
(gument passing on 64 bit.)-.234 E 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 29)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Bold@0 SF(X86 General-Pur)153.488 120 Q(pose Register Summary)
-.13 E .52 LW 435.556 155.25 33.336 155.25 DL/F2 13/Times-Roman@0 SF
(-32 re)39.836 167 Q 35.022(gR)-.195 G 48.204(ole Notes)-35.022 F
(-64 re)35.932 E 35.022(gR)-.195 G 38.285(ole Notes)-35.022 F 435.556
172.25 33.336 172.25 DL 435.556 174.25 33.336 174.25 DL 28.613
(%eax Scratch)43.892 186 R(fn retv)37.726 E 30.946(al %rax)-.325 F
24.557(Scratch fn)32.585 F(retv)3.25 E(al)-.325 E 19.942(%ebx Long-term)
43.528 201 R 20.664(%rbx Long-term)106.606 F 28.613(%ecx Scratch)43.892
216 R 29.335(%rcx Scratch)115.277 F(ar)33.176 E 3.25(g#)-.234 G(4)-3.25
E 28.249(%edx Scratch)43.528 231 R(longlong ret)27.807 E 28.971
(%rdx Scratch)23.913 F(ar)33.176 E 3.25(g#)-.234 G(3)-3.25 E 21.385
(%edi Long-term)44.971 246 R 30.414(%rdi Scratch)108.049 F(ar)33.176 E
3.25(g#)-.234 G(1)-3.25 E 22.107(%esi Long-term)45.692 261 R 31.135
(%rsi Scratch)108.771 F(ar)33.176 E 3.25(g#)-.234 G(2)-3.25 E 23.914
(%es Long-term)47.499 276 R(N/A)109.492 E 32.221(%r8 Scratch)261.778 291
R(ar)33.176 E 3.25(g#)-.234 G(5)-3.25 E 32.221(%r9 Scratch)261.778 306 R
(ar)33.176 E 3.25(g#)-.234 G(6)-3.25 E 28.971(%r10 Scratch)258.528 321 R
28.971(%r11 Scratch)258.528 336 R 20.664(%r12 Long-term)258.528 351 R
20.664(%r13 Long-term)258.528 366 R 20.664(%r14 Long-term)258.528 381 R
20.664(%r15 Long-term)258.528 396 R 435.556 401.25 33.336 401.25 DL
375.951 155.25 375.951 401.25 DL 300.85 155.25 300.85 401.25 DL 243.365
155.25 243.365 401.25 DL 245.365 155.25 245.365 401.25 DL 161.672 155.25
161.672 401.25 DL 86.571 155.25 86.571 401.25 DL 435.556 155.25 435.556
401.25 DL 33.336 155.25 33.336 401.25 DL F1(X86 Alignment)225.268 426 Q
F2 5.279(The X86 architecture does not generally impose alignment restr\
ictions on either)33.336 462 R 3.335(instruction or data fetches \(in f)
33.336 477 R 3.335
(act, with single-byte opcodes, instructions are rarely)-.13 F 4.267
(aligned\). The)33.336 492 R 1.017(processor will simply handle misalig\
ned accesses by performing multiple)4.267 F 5.054
(fetches from memory and shifting the bits around.)33.336 507 R(Ho)
11.555 E(we)-.325 E -.195(ve)-.325 G 6.095 -.52(r, t).195 H 5.055
(his can introduce).52 F(inef)33.336 522 Q(\214cienc)-.325 E 6.226 -.845
(y. E)-.195 H 1.285(.g. on a 32-bit system, fetching a 4-byte int at an\
 address which is not a).845 F 2.696(multiple of 4 results in tw)33.336
537 R 5.947(om)-.13 G 2.697
(emory accesses, whereas it is a single address if it is)-5.947 F 3.25
(aligned. Therefore,)33.336 552 R
(the compiler will introduce padding to k)3.25 E(eep things aligned:)
-.13 E/F3 10/Courier@0 SF 79.2(X86-32 X86-64)154.536 564 R 85.2
(type size)33.336 576 R 79.2(align size)33.6 F(align)33.6 E 85.2(char 1)
33.336 588 R 109.2(11)51.6 G(1)-57.6 E 79.2(short 2)33.336 600 R 109.2
(22)51.6 G(2)-57.6 E 91.2(int 4)33.336 612 R 109.2(44)51.6 G(4)-57.6 E
85.2(long 4)33.336 624 R 109.2(48)51.6 G(8)-57.6 E(long long)33.336 636
Q 51.6(84 88)61.2 G 67.2(pointer 4)33.336 648 R 109.2(48)51.6 G(8)-57.6
E 79.2(float 4)33.336 660 R 109.2(44)51.6 G(4)-57.6 E 73.2(double 8)
33.336 672 R 109.2(48)51.6 G(8)-57.6 E(long double)33.336 684 Q 39.6
(12 4)49.2 F 39.6(16 8)109.2 F F2 .191
(Furthermore, for performance reasons ha)33.336 705 R .191
(ving to do with cache lines, it is adv)-.26 F .191(antageous to)-.325 F
(ha)33.336 720 Q 3.51 -.195(ve t)-.26 H 3.12
(he stack frame aligned to a 16-byte boundary).195 F 9.62(.I)-.845 G
3.12(.e. during the e)-9.62 F -.195(xe)-.195 G 3.12(cution of a).195 F
(function,)33.336 735 Q/F4 13/Courier@0 SF -1.8(%esp)3.425 G F2 1.075
(is a multiple of 16.)5.225 F 1.075
(On entry to the function, the compiler emits code to)7.575 F 0 Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 30)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.418
(create enough stack frame area not only for local and temporary v)
33.336 120 R 1.418(ariables, b)-.325 F 1.418(ut also for)-.26 F .148
(passing ar)33.336 135 R .148(guments to an)-.234 F 3.398(yf)-.195 G
.148(unctions which are called from within the function in question,)
-3.398 F 1.9(plus padding if necessary to bring the total stack frame s\
ize to a multiple of 16.)33.336 150 R(The)8.4 E .393(compiler then uses)
33.336 165 R/F2 13/Courier@0 SF .393 -1.8(movl ARG,SLOT\(%esp\))2.743 H
F1 .393(to place the ar)4.543 F .392(guments on the stack, rather than)
-.234 F F2 -1.8(pushl)32.436 180 S F1 7.681(.T).9 G 1.182(his means tha\
t upon return from the called function, there is no need to adjust)
-7.681 F(the stack pointer)33.336 195 Q(.)-.715 E/F3 13/Times-Bold@0 SF
(APPENDIX: SP)172.02 225 Q(ARC Ar)-.962 E(chitectur)-.234 E(e)-.234 E F1
.52(As an appendix, we')33.336 261 R .519(ll tak)-.13 F 3.769(eal)-.13 G
.519(ook at an e)-3.769 F .519(xample of RISC architecture.)-.195 F .519
(These notes were)7.019 F .52(prepared for the SP)33.336 276 R .52
(ARC architecture, which at one time enjo)-1.196 F .52
(yed signi\214cant mark)-.13 F .52(et share)-.13 F
(among Sun Microsystems w)33.336 291 Q(orkstations and serv)-.13 E(ers.)
-.195 E(SP)33.336 312 Q 3.315
(ARC, as with most RISC designs, is shockingly dif)-1.196 F 3.315
(ferent from X86.)-.325 F 3.315(Almost all)9.815 F 1.236
(instructions are 3-address, with src1, src2 and dst.)33.336 327 R 1.236
(There is an emphasis on re)7.736 F(gister)-.195 E(-to-)-.26 E(re)33.336
342 Q 3.601(gister operations, with limited memory addressing modes.)
-.195 F 3.601(Instructions e)10.101 F -.195(xe)-.195 G 3.601(cute in)
.195 F .061(constant time \(one clock c)33.336 357 R .061
(ycle\), and are of \214x)-.195 F .062
(ed length \(32 bits\), which impro)-.195 F -.195(ve)-.195 G 3.312(sp)
.195 G(ipeline)-3.312 E(performance.)33.336 372 Q F3(Register Model)
224.917 402 Q F1(There are 32 re)33.336 432 Q 3.25
(gisters, r0-r31. These)-.195 F(are brok)3.25 E(en into four groups:)
-.13 E/F4 10/Courier@0 SF 21.6(r0-r7 ==)90.936 444 R 61.2(g0-g7 Global)6
F(registers \(g0 is /dev/null\))6 E 15.6(r8-r15 ==)90.936 456 R 61.2
(o0-o7 Outs)6 F 9.6(r16-r23 ==)90.936 468 R 61.2(l0-l7 Locals)6 F 9.6
(r24-r31 ==)90.936 480 R 61.2(i0-i7 Ins)6 F F1
(The names %i0, etc. are aliases for %r24, etc.)33.336 501 Q F3(Addr)
215.992 531 Q(essing Modes)-.234 E F1(SP)33.336 561 Q .132
(ARC has a limited number of addressing modes.)-1.196 F .132
(Almost all instructions are 3-address,)6.632 F 4.746(with tw)33.336 576
R 7.996(oe)-.13 G 4.746(xplicit source operands and one e)-8.191 F 4.746
(xplicit destination \(contrast with the)-.195 F 2.171
(2-address X86 with an implicit operand\).)33.336 591 R 2.171
(Exceptions to this are instructions where it)8.671 F(doesn')33.336 606
Q 3.482(tm)-.234 G(ak)-3.482 E 3.482(es)-.13 G .232(ense to ha)-3.482 F
.622 -.195(ve 3 o)-.26 H 3.482(perands. An).195 F 3.482(yo)-.195 G 3.482
(ft)-3.482 G .233(he operands may be a re)-3.482 F(gister)-.195 E 9.983
(.B)-.715 G(ecause)-9.983 E 4.149(there are 32 addressable re)33.336 621
R 4.149(gisters, 5 bits are required to specify a re)-.195 F(gister)
-.195 E 10.649(.M)-.715 G(ost)-10.649 E 1.572(instructions also allo)
33.336 636 R 4.822(wj)-.325 G 1.572
(ust one of the source operands to be a 13-bit immediate v)-4.822 F
(alue.)-.325 E 4.241 -1.04(We w)33.336 651 T 2.161(ill see ho)1.04 F
5.411(w3)-.325 G 2.161(2-bit immediate v)-5.411 F 2.161
(alues are handled later)-.325 F 8.661(.M)-.715 G 2.161
(ost instructions do not)-8.661 F(allo)33.336 666 Q 4.838(wd)-.325 G
1.588(irect access to memory operands; the)-4.838 F 4.838(ym)-.195 G
1.588(ust go through a re)-4.838 F 1.588(gister using special)-.195 F
(load/store instructions.)33.336 681 Q F3(Register W)216.785 711 Q(indo)
-.234 E(ws)-.13 E 0 Cg EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 31)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.254(One of the most interesting aspects of the re)
33.336 120 R 2.254(gister model is re)-.195 F 2.254(gister windo)-.195 F
5.504(wing. The)-.325 F(re)33.336 135 Q .809(gister windo)-.195 F 4.059
(wi)-.325 G 4.059(st)-4.059 G .81(he set of 24 re)-4.059 F .81
(gisters r8-r31.)-.195 F .81(The processor contains a "re)7.31 F .81
(gister \214le")-.195 F .172(which is a lar)33.336 150 R .172
(ge array of re)-.234 F 3.422(gisters. The)-.195 F .172(global re)3.422
F .171(gisters are al)-.195 F -.13(wa)-.13 G .171(ys a).13 F -.325(va)
-.26 G .171(ilable, b).325 F .171(ut the other)-.26 F(re)33.336 165 Q
.671(gisters are accessed through the 24-re)-.195 F .672(gister windo)
-.195 F 2.362 -.845(w, w)-.325 H .672(hich mo).845 F -.195(ve)-.195 G
3.922(so).195 G -.195(ve)-4.117 G 3.922(rt).195 G .672(he re)-3.922 F
.672(gister \214le)-.195 F 1.589(based on a hidden re)33.336 180 R 1.588
(gister \(manipulated by the operating system\) called CWP \(current)
-.195 F(windo)33.336 195 Q 3.25(wp)-.325 G(ointer\).)-3.25 E(Whene)
33.336 216 Q -.195(ve)-.325 G 4.241(raf).195 G .991
(unction is entered, a SA)-4.241 F .991(VE instruction is e)-1.755 F
-.195(xe)-.195 G .991(cuted, which mo).195 F -.195(ve)-.195 G 4.241(st)
.195 G .991(he CWP)-4.241 F 1.34(ahead by 16 slots.)33.336 231 R 1.34
(Since the re)7.84 F 1.34(gister windo)-.195 F 4.59(wi)-.325 G 4.59(s2)
-4.59 G 4.59(4s)-4.59 G 1.34(lots, this creates an 8-slot o)-4.59 F
-.195(ve)-.195 G(rlap,).195 E .538(with the result that re)33.336 246 R
.538(gisters %o0-%o7 in the caller refer to the same re)-.195 F .539
(gister as %i0-%i7)-.195 F .877(in the callee.)33.336 261 R(Lik)7.377 E
-.325(ew)-.13 G .876(ise, when the function returns, the REST).325 F
.876(ORE instruction mo)-.234 F -.195(ve)-.195 G 4.126(st).195 G(he)
-4.126 E(windo)33.336 276 Q 6.734(wb)-.325 G 3.485(ack, and the v)-6.734
F 3.485(alues that were in %i0-%i7 in the callee are accessible as)-.325
F(%o0-%o7 in the caller)33.336 291 Q(.)-.715 E 2.162(This f)33.336 312 R
2.162(act is used to great adv)-.13 F 2.162(antage to allo)-.325 F 5.412
(wf)-.325 G 2.161(unction calling and return without e)-5.412 F -.195
(ve)-.325 G(r).195 E(ha)33.336 327 Q .616
(ving to touch the stack memory)-.26 F 7.116(.%)-.845 G .616
(o0-%o5 are used to pass the \214rst 6 parameters of a)-7.116 F 1.621
(function, with %o0 being the leftmost.)33.336 342 R 1.62
(\(If there are more than 6 parameters, the e)8.12 F(xtra)-.195 E 1.254
(ones are pushed on the stack.)33.336 357 R 1.254(Studies of man)7.754 F
4.505(yl)-.195 G 1.255(ines of C code sho)-4.505 F 1.255
(wed this happens in)-.325 F(less than 2% of functions\).)33.336 372 Q
.409(The CALL instruction stores its o)33.336 393 R .409
(wn address in re)-.325 F .408(gister %o7 in the caller windo)-.195 F
2.098 -.845(w, w)-.325 H(hich).845 E .615
(becomes %i7 in the callee windo)33.336 408 R 3.865(w\()-.325 G .615
(after the callee e)-3.865 F -.195(xe)-.195 G .615(cutes the SA).195 F
.615(VE instruction.\))-1.755 F(The)7.115 E .286
(RET instruction, which is e)33.336 423 R -.195(xe)-.195 G .286
(cuted after a REST).195 F .286(ORE, jumps back to %i7+8, i.e. the ne)
-.234 F(xt)-.195 E 1.322
(instruction after the CALL \(and the delay slot instruction, see belo)
33.336 438 R 4.572(w\). Re)-.325 F 1.322(gister %o6 is)-.195 F 1.328
(aliased to %sp, the stack pointer)33.336 453 R 7.828(.I)-.715 G 4.578
(nt)-7.828 G 1.328(he callee, %i6 is then automatically the old stack)
-4.578 F(pointer)33.336 468 Q 4.344(,a)-.52 G 1.095
(nd is aliased to %fp \(the frame pointer\).)-4.344 F 1.095(The SA)7.595
F 1.095(VE instruction, in addition to)-1.755 F(mo)33.336 483 Q .5
(ving the re)-.195 F .5(gister windo)-.195 F 2.19 -.845(w, c)-.325 H .5
(an be used to decrement %sp \(in the callee').845 F 3.749(sn)-.715 G
1.149 -.325(ew w)-3.749 H(indo).325 E(w\))-.325 E 2.714
(to create the local stack frame.)33.336 498 R 2.714(The REST)9.214 F
2.714(ORE instruction, by virtue of its windo)-.234 F(w)-.325 E
(rollback, restores the old %sp and %fp implicitly)33.336 513 Q(.)-.845
E .997(The number of re)33.336 534 R .996(gisters in the \214le is of c\
ourse \214nite, and typically a small number)-.195 F 4.246(,e)-.52 G
(.g.)-4.246 E .4(32 re)33.336 549 R .4(gister windo)-.195 F 3.65
(ws. When)-.325 F .4(nesting reaches this static limit, the SA)3.65 F .4
(VE instruction has no)-1.755 F .093(place to mo)33.336 564 R .483 -.195
(ve t)-.195 H .093(he re).195 F .093(gister windo)-.195 F 1.783 -.845
(w, b)-.325 H .093(ecause it w).845 F .093
(ould collide with the oldest windo)-.13 F 5.032 -.845(w. T)-.325 H(his)
.845 E 2.656
(results in a "spill trap", which the operating system handles.)33.336
579 R(Ex)9.157 E 2.657(ecuting a FLUSHW)-.195 F 1.515
(instruction \215ushes the current re)33.336 594 R 1.515(gister windo)
-.195 F 4.765(wt)-.325 G 4.765(ot)-4.765 G 1.515(he top of the stack.)
-4.765 F 1.515(This instruction)8.015 F .897(can also be e)33.336 609 R
-.195(xe)-.195 G .898(cuted by ordinary programs.).195 F .898
(E.g. a deb)7.398 F .898(ugger needs to g)-.26 F .898(ain access to the)
-.065 F .69(complete set of re)33.336 624 R .69(gister windo)-.195 F
3.94(ws. It)-.325 F .69(must e)3.94 F -.195(xe)-.195 G .69
(cute a FLUSHW on behalf of the program).195 F(under observ)33.336 639 Q
(ation so those v)-.325 E(alues become visible on the stack.)-.325 E
.135(Because a function can not predict when such a re)33.336 660 R .135
(gister windo)-.195 F 3.385(ws)-.325 G .136(pill will happen, it must)
-3.385 F(reserv)33.336 675 Q 3.564(eac)-.195 G .313(hunk of space at th\
e top of the stack so there will be a place to spill its re)-3.564 F
(gister)-.195 E(windo)33.336 690 Q 3.25(wi)-.325 G 3.25(fn)-3.25 G 3.25
(eeded. This)-3.25 F
(spill area is added to the stack frame size requirements.)3.25 E .452
(It follo)33.336 711 R .452(ws from the re)-.325 F .452(gister windo)
-.195 F 3.702(wm)-.325 G .452(echanics that the compiler al)-3.702 F
-.13(wa)-.13 G .452(ys has the %l0-%l7).13 F 1.937(local re)33.336 726 R
1.937(gisters a)-.195 F -.325(va)-.26 G 5.187(ilable. It).325 F 1.937
(does not ha)5.187 F 2.327 -.195(ve t)-.26 H 5.187(ow).195 G 1.937
(orry about their being o)-5.317 F -.195(ve)-.195 G 1.937(rwritten by a)
.195 F .564(called function, nor does it need to sa)33.336 741 R .955
-.195(ve a)-.26 H .565(nd restore them e).195 F(xplicitly)-.195 E 7.065
(.T)-.845 G .565(he global re)-7.065 F(gisters)-.195 E 0 Cg EP
%%Page: 32 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 32)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.247(%g1-%g7 are considered scratch re)33.336 120 R
1.247(gisters, i.e. caller)-.195 F(-sa)-.26 E -.195(ve)-.26 G 4.497(dr)
.195 G -.195(eg)-4.497 G 4.497(isters. It).195 F 1.246(is e)4.497 F
1.246(xpected that)-.195 F 2.605(the g re)33.336 135 R 2.606
(gisters will be destro)-.195 F 2.606(yed across function boundaries.)
-.13 F(Lik)9.106 E -.325(ew)-.13 G 2.606(ise the %o0-%o5).325 F(re)
33.336 150 Q 1.178(gisters can be used as e)-.195 F 1.178
(xtra scratch re)-.195 F 1.178(gisters when the)-.195 F 4.428(ya)-.195 G
1.178(re not acti)-4.428 F -.195(ve)-.325 G 1.177(ly being used to).195
F(pass function ar)33.336 165 Q(guments.)-.234 E/F2 13/Times-Bold@0 SF
(Register g0)236.11 195 Q F1 .588(The %g0 re)33.336 225 R .588
(gister al)-.195 F -.13(wa)-.13 G .589
(ys reads as 0, and writes to it ha).13 F .979 -.195(ve n)-.26 H 3.839
(oe).195 G -.325(ff)-3.839 G 3.839(ect. Since).325 F .589(the number of)
3.839 F 1.183(operands is \214x)33.336 240 R 1.183(ed, it is useful whe\
n it is desired to discard the result of an operation, or)-.195 F
(when an immediate 0 is needed b)33.336 255 Q(ut it isn')-.26 E 3.25(tc)
-.234 G(on)-3.25 E -.195(ve)-.52 G
(nient to use the 13 bit immediate mode.).195 E F2(Accessing Memory)
214.809 285 Q F1 6.989(There are only tw)33.336 321 R 10.239(oo)-.13 G
6.989(rdinary instructions which access memory)-10.239 F 10.24(,L)-.845
G 10.24(Da)-10.24 G 6.99(nd ST)-10.24 F(\(LO)33.336 336 Q(AD/ST)-.455 E
6.017(ORE\). The)-.234 F -.325(va)6.017 G 2.767(lue to be mo).325 F
-.195(ve)-.195 G 6.017(di).195 G 6.017(sc)-6.017 G 2.767
(ontained in a re)-6.017 F(gister)-.195 E 9.267(.T)-.715 G 2.767
(he address in)-9.267 F 1.895
(memory to be accessed is also contained in a re)33.336 351 R(gister)
-.195 E 8.396(.S)-.715 G 1.896(ince LD and ST ha)-8.396 F 2.286 -.195
(ve o)-.26 H 1.896(nly 2).195 F 1.497
(operands, there is room within the 32-bit instruction to allo)33.336
366 R 4.747(wa1)-.325 G 1.497(3-bit immediate v)-4.747 F(alue)-.325 E
(\(of)33.336 381 Q 5.285(fset\) to be added to the re)-.325 F 5.286
(gister specifying the memory address.)-.195 F 5.286(While this)11.786 F
(restricti)33.336 396 Q -.195(ve)-.325 G 2.439
(ness surrounding memory access may seem inef).195 F 2.439
(\214cient, recall that the RISC)-.325 F(philosoph)33.336 411 Q 3.425
(yi)-.065 G 3.425(st)-3.425 G 3.425(or)-3.425 G .175
(educe the instruction set to its bare essentials.)-3.425 F .175
(On a CISC machine such)6.675 F 1.267
(as X86 with its indirect scaled of)33.336 426 R 1.266
(fset plus displacement addressing mode, the processor)-.325 F(tak)
33.336 441 Q 3.007(es just as man)-.13 F 6.257(ys)-.195 G 3.008
(teps to perform the address calculation, the)-6.257 F 6.258(ya)-.195 G
3.008(re just hidden in)-6.258 F 4.068(internal re)33.336 456 R 7.318
(gisters. In)-.195 F 4.068
(addition, by isolating memory access to speci\214c instructions,)7.318
F(compiler optimizations are actually easier)33.336 471 Q(.)-.715 E/F3
10/Courier@0 SF(f\(\))33.336 507 Q({)33.336 519 Q(int a;)33.336 531 Q
(a++;)81.336 543 Q(})33.336 555 Q(f:)33.336 579 Q(save %sp,-120,%sp)
81.336 591 Q(!120 bytes for stack frame)22.8 E(ld [%fp-20],%o1)81.336
603 Q(!Load a into register o1)92.4 E(add %o1,1,%o0)81.336 615 Q
(!Not optimized, could have stored back in o1)104.4 E(mov %o0,%o1)81.336
627 Q(st %o1,[%fp-20])81.336 639 Q(!Store result back in local variable)
92.4 E(ret)90.936 651 Q 124.8(restore !Delay)90.936 663 R
(slot, see comment in text)6 E F2(Loading 32-bit constants)198.715 693 Q
F1 2.178(The structure of the 32-bit instruction w)33.336 729 R 2.179
(ords does not lend itself to getting 32-bit \(or)-.13 F 1.113
(64-bit for that matter\) constants into re)33.336 744 R 4.363
(gisters. It)-.195 F -.13(wa)4.363 G 4.363(sf).13 G 1.113
(ound from program analysis that)-4.363 F 0 Cg EP
%%Page: 33 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 33)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.915(most inte)33.336 120 R 1.916
(ger constants used in C programs are small, and therefore the pro)-.195
F 1.916(vision of a)-.195 F
(13-bit immediate \214eld, while strange, satis\214es most cases.)33.336
135 Q(Ho)33.336 156 Q(we)-.325 E -.195(ve)-.325 G 3.383 -.52(r, t).195 H
5.593(oa).52 G 2.343(ccess a global v)-5.593 F 2.343
(ariable requires loading an absolute 32 bit v)-.325 F 2.342
(alue into a)-.325 F(re)33.336 171 Q .276
(gister \(or 64 bits if in the 64 bit model\).)-.195 F .276
(This requires tw)6.776 F 3.527(oi)-.13 G .277(nstructions in SP)-3.527
F 3.527(ARC. The)-1.196 F 2.494(SETHI instruction is a special case.)
33.336 186 R 2.494(It speci\214es a destination re)8.994 F 2.494
(gister and 22 bits of)-.195 F .826
(constant, which are placed in the most signi\214cant bits of the re)
33.336 201 R(gister)-.195 E 7.327(.F)-.715 G(ollo)-7.522 E .827
(wing this, an)-.325 F 2.667
(OR with a 13-bit immediate as one source, and the re)33.336 216 R 2.666
(gister as the other source and)-.195 F 2.012(destination, ef)33.336 231
R 2.012(fects the 32-bit constant load.)-.325 F 2.012
(It may also be possible to use the 13-bit)8.512 F(of)33.336 246 Q
(fset addressing mode to accomplish the same ef)-.325 E(fect:)-.325 E/F2
10/Courier@0 SF(f\(\))33.336 258 Q({)33.336 270 Q(extern int a,b;)33.336
282 Q(a=b;)81.336 294 Q(})33.336 306 Q(f:)33.336 342 Q
(save %sp,-112,%sp)81.336 354 Q(sethi %hi\(a\),%o0)81.336 366 Q
(sethi %hi\(b\),%o1)81.336 378 Q(ld [%o1+%lo\(b\)],%o2)81.336 390 Q
(st %o2,[%o0+%lo\(a\)])81.336 402 Q F1 3.518
(Note the unusual syntax %hi\(symbol\).)33.336 423 R 3.517
(This is not a re)10.018 F 3.517(gister at all, b)-.195 F 3.517
(ut merely an)-.26 F .243(assembly-language macro that e)33.336 438 R
-.325(va)-.325 G .244(luates the most signi\214cant 22 bit of its v).325
F 3.494(alue. Lik)-.325 F -.325(ew)-.13 G(ise).325 E 2.767
(%lo is the least signi\214cant 13 bits.)33.336 453 R 2.766
(Also note the use of the re)9.266 F(gister+of)-.195 E 2.766
(fset indirect)-.325 F(addressing mode in the LD and ST instructions.)
33.336 468 Q 2.339(When e)33.336 489 R -.195(xe)-.195 G 2.339
(cuting under the 64-bit model, the code to access a global v).195 F
2.339(ariable is e)-.325 F -.195(ve)-.325 G(n).195 E(hairier:)33.336 504
Q F2 12(sethi %hh\(a\),)81.336 516 R(%g1)6 E 12(sethi %lm\(a\),)81.336
528 R(%g4)6 E 30(or %g1,)81.336 540 R(%hm\(a\), %g1)6 E 18(sllx %g1,)
81.336 552 R(32, %g1)6 E 24(add %g1,)81.336 564 R(%g4, %g1)6 E 30
(or %g1,)81.336 576 R(%lo\(a\), %g5)6 E 12(sethi %hh\(b\),)81.336 588 R
(%g1)6 E 12(sethi %lm\(b\),)81.336 600 R(%g4)6 E 30(or %g1,)81.336 612 R
(%hm\(b\), %g1)6 E 18(sllx %g1,)81.336 624 R(32, %g1)6 E 24(add %g1,)
81.336 636 R(%g4, %g1)6 E 30(or %g1,)81.336 648 R(%lo\(b\), %g1)6 E 30
(ld [%g1],)81.336 660 R(%g1)6 E 30(st %g1,)81.336 672 R([%g5])6 E/F3 13
/Times-Bold@0 SF(Contr)195.296 702 Q(ol Flo)-.234 E 3.25(wI)-.13 G
(nstructions)-3.25 E F1 3.601(It is possible to jump to an absolute add\
ress which is contained within a re)33.336 738 R(gister)-.195 E(.)-.715
E 0 Cg EP
%%Page: 34 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 34)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(Ho)33.336 120 Q(we)-.325 E -.195(ve)-.325 G 3.542
-.52(r, m).195 H 2.502(ost \215o).52 F 5.752(wc)-.325 G 2.503
(ontrol instructions utilize a program counter relati)-5.752 F 2.893
-.195(ve a)-.325 H(ddressing).195 E 4.11(mode. The)33.336 135 R 4.109
(conditional branch)4.11 F .859
(instructions contain a displacement which is between 16)4.109 F .976
(and 22 bits \(depending on the form of the instruction\).)33.336 150 R
.976(This displacement is interpreted)7.476 F 1.507
(as a signed number of 4-byte w)33.336 165 R 4.756(ords. Since)-.13 F
1.506(branches in C occur within a function, the)4.756 F .442
(branch tar)33.336 180 R .443(get is usually close by)-.234 F 3.693(,a)
-.845 G .443(nd this amount of displacement is more than adequate.)
-3.693 F .262
(CALL instructions, which are used to call another function, ha)33.336
195 R .652 -.195(ve 3)-.26 H 3.512(0b).195 G .262(its of displacement.)
-3.512 F 1.196(This does impose a limit on ho)33.336 210 R 4.446(wt)
-.325 G 1.196(he address space of a program is laid out.)-4.446 F
(Functions)7.696 E(can not be more than 2**31 bytes a)33.336 225 Q -.13
(wa)-.195 G 3.25(yf).13 G(rom each other in either direction.)-3.25 E/F2
13/Times-Bold@0 SF(The Delay Slot)226.529 255 Q F1 2.355(When a SP)
33.336 291 R 2.354(ARC processor is e)-1.196 F -.325(va)-.325 G 2.354
(luating a branch instruction, the instruction which is).325 F 1.022
(located ph)33.336 306 R 1.022(ysically at the ne)-.065 F 1.023
(xt memory address after that branch instruction has, because)-.195 F
4.114(of the pipeline, already been fetched and decoded.)33.336 321 R
4.114(Under CISC architecture, that)10.614 F 1.759(instruction w)33.336
336 R 1.759(ould be thro)-.13 F 1.759(wn a)-.325 F -.13(wa)-.195 G 5.009
(yi).13 G 5.01(ft)-5.009 G 1.76(he branch is tak)-5.01 F 1.76(en, b)-.13
F 1.76(ut SP)-.26 F 1.76(ARC \(and man)-1.196 F 5.01(yo)-.195 G(ther)
-5.01 E .554(RISC architectures\) tak)33.336 351 R 3.804(ea)-.13 G(dv)
-3.804 E .553
(antage of it \(it helps that all instructions are the same length)-.325
F 1.526(and e)33.336 366 R -.195(xe)-.195 G 1.526(cution time\) and e)
.195 F -.195(xe)-.195 G 1.526(cute this "delay slot" instruction, re)
.195 F -.065(ga)-.195 G 1.527(rdless of whether the).065 F .233
(branch is tak)33.336 381 R .233(en or not.)-.13 F .232
(The delay slot instruction is e)6.733 F -.195(xe)-.195 G .232
(cuted as the branch tar).195 F .232(get is being)-.234 F .187
(fetched and decoded, and tak)33.336 396 R .187(es ef)-.13 F .188
(fect before that tar)-.325 F .188(get instruction.)-.234 F .188
(This can lead to code)6.688 F(which, when represented linearly)33.336
411 Q 3.25(,i)-.845 G 3.25(sd)-3.25 G(if)-3.25 E(\214cult to follo)-.325
E(w:)-.325 E/F3 10/Courier@0 SF(f\(a,b\))33.336 438 Q({)33.336 450 Q
(if \(g\(\)>5\) return 3; else return 4;)57.336 462 Q(})33.336 474 Q(f:)
33.336 498 Q(save %sp,-112,%sp)81.336 510 Q(call g,0)81.336 522 Q
(mov 3,%i0)81.336 534 Q(cmp %o0,5)81.336 546 Q(ble,a .LL5)81.336 558 Q
(mov 4,%i0)81.336 570 Q 148.8(ret !same)90.936 582 R(as jmpl)6 E
(%i7+8,%g0)37.2 E(restore)90.936 594 Q F1 -.195(Fo)33.336 615 S(llo).195
E 1.764(wing the CALL to function g, the MO)-.325 F 5.013(Vi)-.65 G
1.763(nstruction is e)-5.013 F -.195(xe)-.195 G 1.763
(cuted in the delay slot.).195 F .215(Because it tak)33.336 630 R .215
(es ef)-.13 F .216(fect before the \214rst instruction of the tar)-.325
F .216(get g, the %i0 still refers to the)-.234 F(re)33.336 645 Q 1.936
(gister in f)-.195 F 3.366 -.715('s w).715 H(indo).715 E 6.876 -.845
(w. L)-.325 H(ik).845 E -.325(ew)-.13 G 1.935(ise, the MO).325 F 5.185
(V4)-.65 G 1.935(,%i0 tak)-5.185 F 1.935
(es place in the delay slot of the)-.13 F 1.687
(conditional branch instruction.)33.336 660 R 1.688(The ,a follo)8.188 F
1.688(wing the branch opcode ble means that the)-.325 F 3.313
(delay slot instruction is anulled if the branch is not tak)33.336 675 R
3.313(en \(normally the delay slot)-.13 F 1.97(instruction is al)33.336
690 R -.13(wa)-.13 G 1.97(ys e).13 F -.195(xe)-.195 G 5.221(cuted\). So)
.195 F 1.971(if the return v)5.221 F 1.971
(alue from function g is less than or)-.325 F .377
(equal to 5, then the correct return v)33.336 705 R .376
(alue from f \(4\) is already in the %i0 re)-.325 F .376
(gister when the)-.195 F 3.24(RET instruction is e)33.336 720 R -.195
(xe)-.195 G 6.49(cuted. If).195 F 3.241
(g\(\) is greater than 5, then the correct v)6.49 F 3.241(alue 3 w)-.325
F(as)-.13 E(pre)33.336 735 Q 2.17(viously in the %i0 re)-.325 F(gister)
-.195 E 8.67(.A)-.715 G 2.17(lso note the use of the REST)-8.67 F 2.17
(ORE instruction in the)-.234 F 0 Cg EP
%%Page: 35 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(7/pg 35)2.25 E(\2512021 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .571(delay slot.)33.336 120 R .571(Because it compl\
etes before the transfer of control back to the caller of f, the)7.071 F
(re)33.336 135 Q 1.559(gister windo)-.195 F 4.809(wi)-.325 G 4.809(sp)
-4.809 G 1.559(roperly restored.)-4.809 F 1.558(If there is no useful w)
11.309 F 1.558(ork to be done in a delay)-.13 F
(slot, it must be \214lled with a NOP instruction.)33.336 150 Q .768
(Note that the abo)33.336 171 R 1.158 -.195(ve ex)-.195 H .768
(ample is still not optimal, because the compiler w).195 F .768(as tar)
-.13 F .768(getting the)-.234 F 1.695(earlier SP)33.336 186 R 1.695
(ARC V8 instruction set.)-1.196 F 1.695(The SP)8.195 F 1.694
(ARC V9 instruction set includes conditional)-1.196 F(mo)33.336 201 Q
.39 -.195(ve i)-.195 H
(nstructions, which can often eliminate branches entirely:).195 E/F2 10
/Courier@0 SF(f:)33.336 213 Q 18(save %sp,)81.336 225 R(-112, %sp)6 E 18
(call g,)81.336 237 R(0)6 E 24(mov 3,)81.336 249 R(%i0)6 E 24(cmp %o0,)
81.336 261 R(5)6 E 6(return %i7+8)81.336 273 R 12(movle %icc,)81.336 285
R(4, %o0)6 E F1 1.08(Here the MO)33.336 306 R 1.08
(VLE instruction conditionally mo)-.65 F -.195(ve)-.195 G 4.33(st).195 G
1.08(he v)-4.33 F 1.08(alue 4 into %o0 if the condition)-.325 F .871(co\
des indicate less than or equal \(the %icc identi\214es this as a 32-bi\
t operation\), and this)33.336 321 R 4.142(instruction e)33.336 336 R
-.195(xe)-.195 G 4.142
(cutes in the delay slot of the RETURN instruction \(which includes).195
F(REST)33.336 351 Q 2.265(ORE semantics\).)-.234 F 2.265(Because the re)
8.765 F 2.265(gister windo)-.195 F 5.515(wr)-.325 G 2.264
(ollback has already tak)-5.515 F 2.264(en place)-.13 F 1.91
(during the RETURN instruction, re)33.336 366 R 1.91
(gister %o0 in the MO)-.195 F 1.91(VLE instruction refers to the)-.65 F
(caller')33.336 381 Q 3.25(s%)-.715 G(o0, i.e. the return v)-3.25 E
(alue slot.)-.325 E/F3 13/Times-Bold@0 SF
(Delay Slot Annul and Branch Pr)155.315 411 Q(ediction)-.234 E F1 .303
(When a BR branch opcode has the ,a suf)33.336 441 R .302
(\214x, the delay slot is annulled if the branch is)-.325 F F3(not)3.552
E(tak)33.336 456 Q(en)-.13 E F1 6.925(.T)C .425(his allo)-6.925 F .425
(ws the compiler to ha)-.325 F .815 -.195(ve a b)-.26 H .426
(etter chance of \214nding a useful instruction to).195 F(mo)33.336 471
Q .39 -.195(ve i)-.195 H(nto the delay slot, which will only be e).195 E
-.195(xe)-.195 G(cuted when the branch is tak).195 E(en.)-.13 E 2.26
(The compiler can also add a branch prediction suf)33.336 501 R 2.26
(\214x to the opcode.)-.325 F 2.26(The ",pt" suf)8.76 F<8c78>-.325 E
.504(means that the branch is lik)33.336 516 R .505(ely to be tak)-.13 F
.505(en, while ",pn" means it is lik)-.13 F .505(ely to be not tak)-.13
F(en.)-.13 E 1.721(Branch prediction pro)33.336 531 R 1.72
(vides a helpful hint to the hardw)-.195 F 1.72
(are in modern processors where)-.13 F(se)33.336 546 Q -.195(ve)-.325 G
(ral instructions may be in play at an).195 E 3.25(yg)-.195 G -2.795
-.325(iv e)-3.25 H 3.25(nt).325 G(ime.)-3.25 E 0 Cg EP
%%Trailer
end
%%EOF
